

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Oct 11 11:18:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 12/10/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F46K20 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   00296A                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _ret
   106   00296A  01                 	db	1
   107                           
   108                           ;initializer for _motor2
   109   00296B  12                 	db	18
   110   00296C  1A                 	db	26
   111                           
   112                           ;initializer for _motor1
   113   00296D  02                 	db	2
   114   00296E  0A                 	db	10
   115                           
   116                           ;initializer for _led4
   117   00296F  B2                 	db	178
   118                           
   119                           ;initializer for _led3
   120   002970  22                 	db	34
   121                           
   122                           ;initializer for _led2
   123   002971  12                 	db	18
   124                           
   125                           ;initializer for _led1
   126   002972  02                 	db	2
   127                           
   128                           	psect	idataBANK0
   129   00279E                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _port_register
   133   00279E  80                 	db	128
   134   00279F  0F                 	db	15
   135   0027A0  81                 	db	129
   136   0027A1  0F                 	db	15
   137   0027A2  82                 	db	130
   138   0027A3  0F                 	db	15
   139   0027A4  83                 	db	131
   140   0027A5  0F                 	db	15
   141   0027A6  84                 	db	132
   142   0027A7  0F                 	db	15
   143                           
   144                           ;initializer for _lat_register
   145   0027A8  89                 	db	137
   146   0027A9  0F                 	db	15
   147   0027AA  8A                 	db	138
   148   0027AB  0F                 	db	15
   149   0027AC  8B                 	db	139
   150   0027AD  0F                 	db	15
   151   0027AE  8C                 	db	140
   152   0027AF  0F                 	db	15
   153   0027B0  8D                 	db	141
   154   0027B1  0F                 	db	15
   155                           
   156                           ;initializer for _tris_register
   157   0027B2  92                 	db	146
   158   0027B3  0F                 	db	15
   159   0027B4  93                 	db	147
   160   0027B5  0F                 	db	15
   161   0027B6  94                 	db	148
   162   0027B7  0F                 	db	15
   163   0027B8  95                 	db	149
   164   0027B9  0F                 	db	15
   165   0027BA  96                 	db	150
   166   0027BB  0F                 	db	15
   167                           
   168                           ;initializer for _adc_1
   169   0027BC  74                 	db	low _ADC_Interrupt
   170   0027BD  22                 	db	high _ADC_Interrupt
   171   0027BE  00                 	db	0
   172   0027BF  05                 	db	5
   173   0027C0  05                 	db	5
   174   0027C1  00                 	db	0
   175   0027C2  00                 	db	0
   176   0027C3  01                 	db	1
   177                           
   178                           ;initializer for _keypad
   179   0027C4  02                 	db	2
   180   0027C5  0A                 	db	10
   181   0027C6  12                 	db	18
   182   0027C7  1A                 	db	26
   183   0027C8  62                 	db	98
   184   0027C9  6A                 	db	106
   185   0027CA  72                 	db	114
   186   0027CB  7A                 	db	122
   187                           
   188                           ;initializer for _lcd_1
   189   0027CC  22                 	db	34
   190   0027CD  2A                 	db	42
   191   0027CE  32                 	db	50
   192   0027CF  3A                 	db	58
   193   0027D0  03                 	db	3
   194   0027D1  0B                 	db	11
   195                           
   196                           	psect	smallconst
   197   001000                     __psmallconst:
   198                           	callstack 0
   199   001000  00                 	db	0
   200   001001                     _keypad_value:
   201                           	callstack 0
   202   001001  37                 	db	55
   203   001002  38                 	db	56
   204   001003  39                 	db	57
   205   001004  2F                 	db	47
   206   001005  34                 	db	52
   207   001006  35                 	db	53
   208   001007  36                 	db	54
   209   001008  2A                 	db	42
   210   001009  31                 	db	49
   211   00100A  32                 	db	50
   212   00100B  33                 	db	51
   213   00100C  2D                 	db	45
   214   00100D  23                 	db	35
   215   00100E  30                 	db	48
   216   00100F  3D                 	db	61
   217   001010  2B                 	db	43
   218   001011                     __end_of_keypad_value:
   219                           	callstack 0
   220   000000                     _TMR3L	set	4018
   221   000000                     _TMR3H	set	4019
   222   000000                     _TMR1L	set	4046
   223   000000                     _TMR1H	set	4047
   224   000000                     _TMR0L	set	4054
   225   000000                     _TMR0H	set	4055
   226   000000                     _INTCON2bits	set	4081
   227   000000                     _EECON2	set	4007
   228   000000                     _ADCON1bits	set	4033
   229   000000                     _ADRESL	set	4035
   230   000000                     _ADRESH	set	4036
   231   000000                     _INTCONbits	set	4082
   232   000000                     _TRISD	set	3989
   233   000000                     _TRISC	set	3988
   234   000000                     _TRISB	set	3987
   235   000000                     _TRISE	set	3990
   236   000000                     _PORTBbits	set	3969
   237   000000                     _EECON1bits	set	4006
   238   000000                     _CFGS	set	32054
   239   000000                     _IOCBbits	set	3965
   240   000000                     _ANSELbits	set	3966
   241   000000                     _PIE1bits	set	3997
   242   000000                     _ADCON2bits	set	4032
   243   000000                     _ADCON0bits	set	4034
   244   000000                     _PIE2bits	set	4000
   245   000000                     _EEDATA	set	4008
   246   000000                     _EEADR	set	4009
   247   000000                     _EEADRH	set	4010
   248   000000                     _PIR1bits	set	3998
   249   000000                     _EEPGD	set	32055
   250   000000                     _T2CONbits	set	4042
   251   000000                     _T1CONbits	set	4045
   252   000000                     _T0CONbits	set	4053
   253   000000                     _INTCON3bits	set	4080
   254   000000                     _ANSELHbits	set	3967
   255   000000                     _PORTE	set	3972
   256   000000                     _PORTD	set	3971
   257   000000                     _PORTC	set	3970
   258   000000                     _PORTB	set	3969
   259   000000                     _PORTA	set	3968
   260   000000                     _LATA	set	3977
   261   000000                     _TRISA	set	3986
   262   000000                     _T3CONbits	set	4017
   263   000000                     _LATE	set	3981
   264   000000                     _LATD	set	3980
   265   000000                     _LATC	set	3979
   266   000000                     _LATB	set	3978
   267   000000                     _PIR2bits	set	4001
   268   000000                     _TMR2	set	4044
   269   001011                     STR_4:
   270   001011  41                 	db	65	;'A'
   271   001012  44                 	db	68	;'D'
   272   001013  43                 	db	67	;'C'
   273   001014  20                 	db	32
   274   001015  54                 	db	84	;'T'
   275   001016  45                 	db	69	;'E'
   276   001017  53                 	db	83	;'S'
   277   001018  54                 	db	84	;'T'
   278   001019  00                 	db	0
   279   00101A                     STR_5:
   280   00101A  20                 	db	32
   281   00101B  50                 	db	80	;'P'
   282   00101C  4F                 	db	79	;'O'
   283   00101D  54                 	db	84	;'T'
   284   00101E  31                 	db	49	;'1'
   285   00101F  3A                 	db	58	;':'
   286   001020  20                 	db	32
   287   001021  00                 	db	0
   288   001022                     STR_6:
   289   001022  50                 	db	80	;'P'
   290   001023  4F                 	db	79	;'O'
   291   001024  54                 	db	84	;'T'
   292   001025  32                 	db	50	;'2'
   293   001026  3A                 	db	58	;':'
   294   001027  20                 	db	32
   295   001028  00                 	db	0
   296   001029                     STR_1:
   297   001029  25                 	db	37
   298   00102A  75                 	db	117	;'u'
   299   00102B  00                 	db	0
   300   00102C  00                 	db	0	; dummy byte at the end
   301   000000                     
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305   0022E6                     __pcinit:
   306                           	callstack 0
   307   0022E6                     start_initialization:
   308                           	callstack 0
   309   0022E6                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Initialize objects allocated to BANK0 (52 bytes)
   313                           ; load TBLPTR registers with __pidataBANK0
   314   0022E6  0E9E               	movlw	low __pidataBANK0
   315   0022E8  6EF6               	movwf	tblptrl,c
   316   0022EA  0E27               	movlw	high __pidataBANK0
   317   0022EC  6EF7               	movwf	tblptrh,c
   318   0022EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   319   0022F0  6EF8               	movwf	tblptru,c
   320   0022F2  EE00  F0AD         	lfsr	0,__pdataBANK0
   321   0022F6  EE10 F034          	lfsr	1,52
   322   0022FA                     copy_data0:
   323   0022FA  0009               	tblrd		*+
   324   0022FC  CFF5 FFEE          	movff	tablat,postinc0
   325   002300  50E5               	movf	postdec1,w,c
   326   002302  50E1               	movf	fsr1l,w,c
   327   002304  E1FA               	bnz	copy_data0
   328                           
   329                           ; Initialize objects allocated to COMRAM (9 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331   002306  0E6A               	movlw	low __pidataCOMRAM
   332   002308  6EF6               	movwf	tblptrl,c
   333   00230A  0E29               	movlw	high __pidataCOMRAM
   334   00230C  6EF7               	movwf	tblptrh,c
   335   00230E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336   002310  6EF8               	movwf	tblptru,c
   337   002312  EE00  F04D         	lfsr	0,__pdataCOMRAM
   338   002316  EE10 F009          	lfsr	1,9
   339   00231A                     copy_data1:
   340   00231A  0009               	tblrd		*+
   341   00231C  CFF5 FFEE          	movff	tablat,postinc0
   342   002320  50E5               	movf	postdec1,w,c
   343   002322  50E1               	movf	fsr1l,w,c
   344   002324  E1FA               	bnz	copy_data1
   345                           
   346                           ; Clear objects allocated to BANK1 (32 bytes)
   347   002326  EE01  F000         	lfsr	0,__pbssBANK1
   348   00232A  0E20               	movlw	32
   349   00232C                     clear_0:
   350   00232C  6AEE               	clrf	postinc0,c
   351   00232E  06E8               	decf	wreg,f,c
   352   002330  E1FD               	bnz	clear_0
   353                           
   354                           ; Clear objects allocated to BANK0 (77 bytes)
   355   002332  EE00  F060         	lfsr	0,__pbssBANK0
   356   002336  0E4D               	movlw	77
   357   002338                     clear_1:
   358   002338  6AEE               	clrf	postinc0,c
   359   00233A  06E8               	decf	wreg,f,c
   360   00233C  E1FD               	bnz	clear_1
   361                           
   362                           ; Clear objects allocated to COMRAM (25 bytes)
   363   00233E  EE00  F034         	lfsr	0,__pbssCOMRAM
   364   002342  0E19               	movlw	25
   365   002344                     clear_2:
   366   002344  6AEE               	clrf	postinc0,c
   367   002346  06E8               	decf	wreg,f,c
   368   002348  E1FD               	bnz	clear_2
   369   00234A                     end_of_initialization:
   370                           	callstack 0
   371   00234A                     __end_of__initialization:
   372                           	callstack 0
   373   00234A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374   00234C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375   00234E  0100               	movlb	0
   376   002350  EF2C  F00A         	goto	_main	;jump to C main() function
   377                           
   378                           	psect	bssCOMRAM
   379   000034                     __pbssCOMRAM:
   380                           	callstack 0
   381   000034                     _lm35_res_celsuis_mv:
   382                           	callstack 0
   383   000034                     	ds	2
   384   000036                     _INT1_InterruptHandler:
   385                           	callstack 0
   386   000036                     	ds	2
   387   000038                     _INT0_InterruptHandler:
   388                           	callstack 0
   389   000038                     	ds	2
   390   00003A                     _ADC_Interrupt_Handler:
   391                           	callstack 0
   392   00003A                     	ds	2
   393   00003C                     _flags:
   394                           	callstack 0
   395   00003C                     	ds	1
   396   00003D                     _timer2_preload_val:
   397                           	callstack 0
   398   00003D                     	ds	1
   399   00003E                     _ADC_flag:
   400                           	callstack 0
   401   00003E                     	ds	1
   402   00003F                     _program_selected:
   403                           	callstack 0
   404   00003F                     	ds	1
   405   000040                     relay_turn_off@F3314:
   406                           	callstack 0
   407   000040                     	ds	1
   408   000041                     relay_turn_on@F3309:
   409                           	callstack 0
   410   000041                     	ds	1
   411   000042                     relay_initialization@F3304:
   412                           	callstack 0
   413   000042                     	ds	1
   414   000043                     led_toggle@F3325:
   415                           	callstack 0
   416   000043                     	ds	1
   417   000044                     led_turn_off@F3320:
   418                           	callstack 0
   419   000044                     	ds	1
   420   000045                     led_turn_on@F3315:
   421                           	callstack 0
   422   000045                     	ds	1
   423   000046                     led_initialization@F3310:
   424                           	callstack 0
   425   000046                     	ds	1
   426   000047                     _lm35_res:
   427                           	callstack 0
   428   000047                     	ds	2
   429   000049                     _adc_res_2:
   430                           	callstack 0
   431   000049                     	ds	2
   432   00004B                     _adc_res_1:
   433                           	callstack 0
   434   00004B                     	ds	2
   435                           
   436                           	psect	dataCOMRAM
   437   00004D                     __pdataCOMRAM:
   438                           	callstack 0
   439   00004D                     _ret:
   440                           	callstack 0
   441   00004D                     	ds	1
   442   00004E                     _motor2:
   443                           	callstack 0
   444   00004E                     	ds	2
   445   000050                     _motor1:
   446                           	callstack 0
   447   000050                     	ds	2
   448   000052                     _led4:
   449                           	callstack 0
   450   000052                     	ds	1
   451   000053                     _led3:
   452                           	callstack 0
   453   000053                     	ds	1
   454   000054                     _led2:
   455                           	callstack 0
   456   000054                     	ds	1
   457   000055                     _led1:
   458                           	callstack 0
   459   000055                     	ds	1
   460                           
   461                           	psect	bssBANK0
   462   000060                     __pbssBANK0:
   463                           	callstack 0
   464   000060                     	ds	11
   465   00006B                     _adc_res_3_txt:
   466                           	callstack 0
   467   00006B                     	ds	6
   468   000071                     	ds	6
   469   000077                     	ds	4
   470   00007B                     _width:
   471                           	callstack 0
   472   00007B                     	ds	2
   473   00007D                     _prec:
   474                           	callstack 0
   475   00007D                     	ds	2
   476   00007F                     _timer3_preload_val:
   477                           	callstack 0
   478   00007F                     	ds	2
   479   000081                     _Timer3_InterruptHandler:
   480                           	callstack 0
   481   000081                     	ds	2
   482   000083                     _Timer2_InterruptHandler:
   483                           	callstack 0
   484   000083                     	ds	2
   485   000085                     _timer1_preload_val:
   486                           	callstack 0
   487   000085                     	ds	2
   488   000087                     _Timer1_InterruptHandler:
   489                           	callstack 0
   490   000087                     	ds	2
   491   000089                     _timer0_preload_val:
   492                           	callstack 0
   493   000089                     	ds	2
   494   00008B                     _Timer0_InterruptHandler:
   495                           	callstack 0
   496   00008B                     	ds	2
   497   00008D                     _adc_res_3:
   498                           	callstack 0
   499   00008D                     	ds	2
   500   00008F                     _RB7_InterruptHandlerHigh:
   501                           	callstack 0
   502   00008F                     	ds	2
   503   000091                     _RB7_InterruptHandlerLow:
   504                           	callstack 0
   505   000091                     	ds	2
   506   000093                     _RB6_InterruptHandlerHigh:
   507                           	callstack 0
   508   000093                     	ds	2
   509   000095                     _RB6_InterruptHandlerLow:
   510                           	callstack 0
   511   000095                     	ds	2
   512   000097                     _RB5_InterruptHandlerHigh:
   513                           	callstack 0
   514   000097                     	ds	2
   515   000099                     _RB5_InterruptHandlerLow:
   516                           	callstack 0
   517   000099                     	ds	2
   518   00009B                     _RB4_InterruptHandlerHigh:
   519                           	callstack 0
   520   00009B                     	ds	2
   521   00009D                     _RB4_InterruptHandlerLow:
   522                           	callstack 0
   523   00009D                     	ds	2
   524   00009F                     _INT2_InterruptHandler:
   525                           	callstack 0
   526   00009F                     	ds	2
   527   0000A1                     _adc_res_2_txt:
   528                           	callstack 0
   529   0000A1                     	ds	6
   530   0000A7                     _adc_res_1_txt:
   531                           	callstack 0
   532   0000A7                     	ds	6
   533                           
   534                           	psect	dataBANK0
   535   0000AD                     __pdataBANK0:
   536                           	callstack 0
   537   0000AD                     _port_register:
   538                           	callstack 0
   539   0000AD                     	ds	10
   540   0000B7                     _lat_register:
   541                           	callstack 0
   542   0000B7                     	ds	10
   543   0000C1                     _tris_register:
   544                           	callstack 0
   545   0000C1                     	ds	10
   546   0000CB                     _adc_1:
   547                           	callstack 0
   548   0000CB                     	ds	8
   549   0000D3                     _keypad:
   550                           	callstack 0
   551   0000D3                     	ds	8
   552   0000DB                     _lcd_1:
   553                           	callstack 0
   554   0000DB                     	ds	6
   555                           
   556                           	psect	bssBANK1
   557   000100                     __pbssBANK1:
   558                           	callstack 0
   559   000100                     _dbuf:
   560                           	callstack 0
   561   000100                     	ds	32
   562                           
   563                           	psect	cstackBANK0
   564   0000E1                     __pcstackBANK0:
   565                           	callstack 0
   566   0000E1                     ??___fltol:
   567   0000E1                     convert_short_to_string@temp:
   568                           	callstack 0
   569                           
   570                           ; 6 bytes @ 0x0
   571   0000E1                     	ds	4
   572   0000E5                     ___fltol@sign1:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x4
   576   0000E5                     	ds	1
   577   0000E6                     ___fltol@exp1:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581   0000E6                     	ds	1
   582   0000E7                     convert_short_to_string@ret:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x6
   586   0000E7                     	ds	1
   587   0000E8                     convert_short_to_string@l_counter:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x7
   591   0000E8                     	ds	1
   592   0000E9                     ??_main:
   593                           
   594                           ; 1 bytes @ 0x8
   595   0000E9                     	ds	2
   596                           
   597                           	psect	cstackCOMRAM
   598   000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600   000001                     ADC_GetConversionResult@adc:
   601                           	callstack 0
   602   000001                     RB4_ISR@source:
   603                           	callstack 0
   604   000001                     
   605                           ; 1 bytes @ 0x0
   606   000001                     	ds	1
   607   000002                     ADC_GetConversionResult@conversion_result:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x1
   611   000002                     	ds	1
   612   000003                     ??_ADC_GetConversionResult:
   613                           
   614                           ; 1 bytes @ 0x2
   615   000003                     	ds	2
   616   000005                     ??_InterruptManager:
   617                           
   618                           ; 1 bytes @ 0x4
   619   000005                     	ds	4
   620   000009                     ??_adc_input_channel_port_configure:
   621   000009                     ?___lwdiv:
   622                           	callstack 0
   623   000009                     ?___lwmod:
   624                           	callstack 0
   625   000009                     ?___xxtofl:
   626                           	callstack 0
   627   000009                     ADC_StartConversion@adc:
   628                           	callstack 0
   629   000009                     select_result_format@adc:
   630                           	callstack 0
   631   000009                     select_voltage_reference@adc:
   632                           	callstack 0
   633   000009                     gpio_pin_direction_initializion@pin_config:
   634                           	callstack 0
   635   000009                     gpio_pin_write_logic@pin_config:
   636                           	callstack 0
   637   000009                     ___lwdiv@dividend:
   638                           	callstack 0
   639   000009                     ___lwmod@dividend:
   640                           	callstack 0
   641   000009                     fputc@c:
   642                           	callstack 0
   643   000009                     ___xxtofl@val:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x8
   647   000009                     	ds	1
   648   00000A                     ??_gpio_pin_direction_initializion:
   649   00000A                     gpio_pin_write_logic@logic:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x9
   653   00000A                     	ds	1
   654   00000B                     ??_gpio_pin_write_logic:
   655   00000B                     adc_input_channel_port_configure@channel:
   656                           	callstack 0
   657   00000B                     fputc@fp:
   658                           	callstack 0
   659   00000B                     ___lwdiv@divisor:
   660                           	callstack 0
   661   00000B                     ___lwmod@divisor:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xA
   665   00000B                     	ds	1
   666   00000C                     ??_fputc:
   667   00000C                     ADC_init@adc:
   668                           	callstack 0
   669   00000C                     ADC_SelectChannel@adc:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xB
   673   00000C                     	ds	1
   674   00000D                     ??_ADC_init:
   675   00000D                     ??___xxtofl:
   676   00000D                     ADC_SelectChannel@channel:
   677                           	callstack 0
   678   00000D                     ___lwdiv@counter:
   679                           	callstack 0
   680   00000D                     ___lwmod@counter:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0xC
   684   00000D                     	ds	1
   685   00000E                     ??_ADC_SelectChannel:
   686   00000E                     ADC_init@ret:
   687                           	callstack 0
   688   00000E                     ___lwdiv@quotient:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0xD
   692   00000E                     	ds	1
   693   00000F                     ADC_StartConversion_Interrupt@adc:
   694                           	callstack 0
   695   00000F                     gpio_pin_direction_initializion@ret:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0xE
   699   00000F                     	ds	1
   700   000010                     ADC_StartConversion_Interrupt@channel:
   701                           	callstack 0
   702   000010                     gpio_pin_write_logic@ret:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0xF
   706   000010                     	ds	1
   707   000011                     lcd_send_4bit@lcd:
   708                           	callstack 0
   709   000011                     lcd_4bit_send_enable_signal@lcd:
   710                           	callstack 0
   711   000011                     motor_move_forward@motor:
   712                           	callstack 0
   713   000011                     motor_move_backward@motor:
   714                           	callstack 0
   715   000011                     ADC_StartConversion_Interrupt@ret:
   716                           	callstack 0
   717   000011                     gpio_pin_initialization@pin_config:
   718                           	callstack 0
   719   000011                     ___xxtofl@sign:
   720                           	callstack 0
   721   000011                     vfpfcnvrt@fp:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x10
   725   000011                     	ds	1
   726   000012                     ??_gpio_pin_initialization:
   727   000012                     lcd_send_4bit@_command:
   728                           	callstack 0
   729   000012                     lcd_4bit_send_enable_signal@ret:
   730                           	callstack 0
   731   000012                     ___xxtofl@exp:
   732                           	callstack 0
   733   000012                     vfpfcnvrt@fmt:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x11
   737   000012                     	ds	1
   738   000013                     lcd_send_4bit@ret:
   739                           	callstack 0
   740   000013                     gpio_pin_initialization@ret:
   741                           	callstack 0
   742   000013                     vfpfcnvrt@ap:
   743                           	callstack 0
   744   000013                     ___xxtofl@arg:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x12
   748   000013                     	ds	1
   749   000014                     ??_vfpfcnvrt:
   750   000014                     lcd_4bit_send_command@lcd:
   751                           	callstack 0
   752   000014                     lcd_4bit_send_char_data@lcd:
   753                           	callstack 0
   754   000014                     keypad_initialization@keypad:
   755                           	callstack 0
   756   000014                     led_initialization@led:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x13
   760   000014                     	ds	1
   761   000015                     ??_led_initialization:
   762   000015                     lcd_4bit_send_command@command:
   763                           	callstack 0
   764   000015                     lcd_4bit_send_char_data@data:
   765                           	callstack 0
   766   000015                     keypad_initialization@rows_counter:
   767                           	callstack 0
   768   000015                     vfpfcnvrt@convarg:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x14
   772   000015                     	ds	1
   773   000016                     lcd_4bit_send_command@ret:
   774                           	callstack 0
   775   000016                     lcd_4bit_send_char_data@ret:
   776                           	callstack 0
   777   000016                     keypad_initialization@columns_counter:
   778                           	callstack 0
   779   000016                     led_initialization@pin_obj:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x15
   783   000016                     	ds	1
   784   000017                     ?___flmul:
   785                           	callstack 0
   786   000017                     lcd_4bit_initialize@lcd:
   787                           	callstack 0
   788   000017                     lcd_4bit_set_cusrsor@lcd:
   789                           	callstack 0
   790   000017                     ___flmul@b:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x16
   794   000017                     	ds	1
   795   000018                     ??_lcd_4bit_initialize:
   796   000018                     lcd_4bit_set_cusrsor@row:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x17
   800   000018                     	ds	1
   801   000019                     lcd_4bit_set_cusrsor@col:
   802                           	callstack 0
   803   000019                     vfpfcnvrt@cp:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x18
   807   000019                     	ds	1
   808   00001A                     lcd_4bit_initialize@ret:
   809                           	callstack 0
   810   00001A                     lcd_4bit_set_cusrsor@ret:
   811                           	callstack 0
   812   00001A                     vfpfcnvrt@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x19
   816   00001A                     	ds	1
   817   00001B                     ?_vfprintf:
   818                           	callstack 0
   819   00001B                     lcd_4bit_initialize@l_counter:
   820                           	callstack 0
   821   00001B                     lcd_4bit_send_char_string_pos@lcd:
   822                           	callstack 0
   823   00001B                     vfprintf@fp:
   824                           	callstack 0
   825   00001B                     ___flmul@a:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x1A
   829   00001B                     	ds	1
   830   00001C                     lcd_4bit_send_char_string_pos@row:
   831                           	callstack 0
   832   00001C                     vfprintf@fmt:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x1B
   836   00001C                     	ds	1
   837   00001D                     lcd_4bit_send_char_string_pos@col:
   838                           	callstack 0
   839   00001D                     vfprintf@ap:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x1C
   843   00001D                     	ds	1
   844   00001E                     vfprintf@cfmt:
   845                           	callstack 0
   846   00001E                     lcd_4bit_send_char_string_pos@str:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x1D
   850   00001E                     	ds	1
   851   00001F                     ??___flmul:
   852   00001F                     ?_sprintf:
   853                           	callstack 0
   854   00001F                     sprintf@s:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x1E
   858   00001F                     	ds	1
   859   000020                     lcd_4bit_send_char_string_pos@ret:
   860                           	callstack 0
   861   000020                     sprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x1F
   865   000020                     	ds	3
   866   000023                     ___flmul@sign:
   867                           	callstack 0
   868   000023                     sprintf@ap:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x22
   872   000023                     	ds	1
   873   000024                     ___flmul@grs:
   874                           	callstack 0
   875   000024                     sprintf@f:
   876                           	callstack 0
   877                           
   878                           ; 12 bytes @ 0x23
   879   000024                     	ds	4
   880   000028                     ___flmul@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x27
   884   000028                     	ds	1
   885   000029                     ___flmul@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x28
   889   000029                     	ds	1
   890   00002A                     ___flmul@prod:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x29
   894   00002A                     	ds	4
   895   00002E                     ___flmul@temp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x2D
   899   00002E                     	ds	2
   900   000030                     ?___fltol:
   901                           	callstack 0
   902   000030                     convert_short_to_string@value:
   903                           	callstack 0
   904   000030                     ___fltol@f1:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x2F
   908   000030                     	ds	2
   909   000032                     convert_short_to_string@str:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x31
   913   000032                     	ds	1
   914   000033                     
   915                           ; 1 bytes @ 0x32
   916   000033                     	ds	1
   917                           
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 15 in file "application.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2  975[None  ] int 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels required when called: 10
   943 ;; This function calls:
   944 ;;		_ADC_StartConversion_Interrupt
   945 ;;		___flmul
   946 ;;		___fltol
   947 ;;		___lwdiv
   948 ;;		___xxtofl
   949 ;;		_application_initialize
   950 ;;		_convert_short_to_string
   951 ;;		_lcd_4bit_send_char_string_pos
   952 ;;		_lcd_4bit_send_command
   953 ;;		_motor_move_backward
   954 ;;		_motor_move_forward
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text0
   961   001458                     __ptext0:
   962                           	callstack 0
   963   001458                     _main:
   964                           	callstack 21
   965   001458                     
   966                           ;application.c: 16:     application_initialize();
   967   001458  ECAD  F014         	call	_application_initialize	;wreg free
   968   00145C                     
   969                           ;application.c: 17:     lcd_4bit_send_char_string_pos(&lcd_1, 1, 4, (uint8 *) "ADC TEST"
      +                          );
   970   00145C  0EDB               	movlw	low _lcd_1
   971   00145E  6E1B               	movwf	lcd_4bit_send_char_string_pos@lcd^0,c
   972   001460  0E01               	movlw	1
   973   001462  6E1C               	movwf	lcd_4bit_send_char_string_pos@row^0,c
   974   001464  0E04               	movlw	4
   975   001466  6E1D               	movwf	lcd_4bit_send_char_string_pos@col^0,c
   976   001468  0E11               	movlw	low STR_4
   977   00146A  6E1E               	movwf	lcd_4bit_send_char_string_pos@str^0,c
   978   00146C  501E               	movf	lcd_4bit_send_char_string_pos@str^0,w,c
   979   00146E  A4D8               	btfss	status,2,c
   980   001470  0E10               	movlw	high __smallconst
   981   001472  6E1F               	movwf	(lcd_4bit_send_char_string_pos@str+1)^0,c
   982   001474  ECAC  F010         	call	_lcd_4bit_send_char_string_pos	;wreg free
   983   001478                     
   984                           ;application.c: 18:     _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   985   001478  0E0B               	movlw	11
   986   00147A  0100               	movlb	0	; () banked
   987   00147C  6FEA               	movwf	(??_main+1)& (0+255),b
   988   00147E  0E26               	movlw	38
   989   001480  6FE9               	movwf	??_main& (0+255),b
   990   001482  0E5D               	movlw	93
   991   001484                     u5797:
   992   001484  2EE8               	decfsz	wreg,f,c
   993   001486  D7FE               	bra	u5797
   994   001488  2FE9               	decfsz	??_main& (0+255),f,b
   995   00148A  D7FC               	bra	u5797
   996   00148C  2FEA               	decfsz	(??_main+1)& (0+255),f,b
   997   00148E  D7FA               	bra	u5797
   998   001490  F000 F000          	nop2	
   999   001494                     
  1000                           ;application.c: 19:     lcd_4bit_send_command(&lcd_1, 0x01);
  1001   001494  0EDB               	movlw	low _lcd_1
  1002   001496  6E14               	movwf	lcd_4bit_send_command@lcd^0,c
  1003   001498  0E01               	movlw	1
  1004   00149A  6E15               	movwf	lcd_4bit_send_command@command^0,c
  1005   00149C  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  1006   0014A0                     
  1007                           ;application.c: 20:     ret = lcd_4bit_send_char_string_pos(&lcd_1, 1, 2, (uint8 *) " PO
      +                          T1: ");
  1008   0014A0  0EDB               	movlw	low _lcd_1
  1009   0014A2  6E1B               	movwf	lcd_4bit_send_char_string_pos@lcd^0,c
  1010   0014A4  0E01               	movlw	1
  1011   0014A6  6E1C               	movwf	lcd_4bit_send_char_string_pos@row^0,c
  1012   0014A8  0E02               	movlw	2
  1013   0014AA  6E1D               	movwf	lcd_4bit_send_char_string_pos@col^0,c
  1014   0014AC  0E1A               	movlw	low STR_5
  1015   0014AE  6E1E               	movwf	lcd_4bit_send_char_string_pos@str^0,c
  1016   0014B0  501E               	movf	lcd_4bit_send_char_string_pos@str^0,w,c
  1017   0014B2  A4D8               	btfss	status,2,c
  1018   0014B4  0E10               	movlw	high __smallconst
  1019   0014B6  6E1F               	movwf	(lcd_4bit_send_char_string_pos@str+1)^0,c
  1020   0014B8  ECAC  F010         	call	_lcd_4bit_send_char_string_pos	;wreg free
  1021   0014BC  6E4D               	movwf	_ret^0,c
  1022   0014BE                     
  1023                           ;application.c: 21:     ret = lcd_4bit_send_char_string_pos(&lcd_1, 2, 1, (uint8 *) "POT
      +                          2: ");
  1024   0014BE  0EDB               	movlw	low _lcd_1
  1025   0014C0  6E1B               	movwf	lcd_4bit_send_char_string_pos@lcd^0,c
  1026   0014C2  0E02               	movlw	2
  1027   0014C4  6E1C               	movwf	lcd_4bit_send_char_string_pos@row^0,c
  1028   0014C6  0E01               	movlw	1
  1029   0014C8  6E1D               	movwf	lcd_4bit_send_char_string_pos@col^0,c
  1030   0014CA  0E22               	movlw	low STR_6
  1031   0014CC  6E1E               	movwf	lcd_4bit_send_char_string_pos@str^0,c
  1032   0014CE  501E               	movf	lcd_4bit_send_char_string_pos@str^0,w,c
  1033   0014D0  A4D8               	btfss	status,2,c
  1034   0014D2  0E10               	movlw	high __smallconst
  1035   0014D4  6E1F               	movwf	(lcd_4bit_send_char_string_pos@str+1)^0,c
  1036   0014D6  ECAC  F010         	call	_lcd_4bit_send_char_string_pos	;wreg free
  1037   0014DA  6E4D               	movwf	_ret^0,c
  1038   0014DC                     l6532:
  1039                           
  1040                           ;application.c: 24:         if (ADC_flag == 0) {
  1041   0014DC  503E               	movf	_ADC_flag^0,w,c
  1042   0014DE  A4D8               	btfss	status,2,c
  1043   0014E0  EF74  F00A         	goto	u5741
  1044   0014E4  EF76  F00A         	goto	u5740
  1045   0014E8                     u5741:
  1046   0014E8  EF7F  F00A         	goto	l6536
  1047   0014EC                     u5740:
  1048   0014EC                     
  1049                           ;application.c: 25:             ret = ADC_StartConversion_Interrupt(&adc_1, ADC_CHANNEL_
      +                          AN0);
  1050   0014EC  0ECB               	movlw	low _adc_1
  1051   0014EE  6E0F               	movwf	ADC_StartConversion_Interrupt@adc^0,c
  1052   0014F0  0E00               	movlw	0
  1053   0014F2  6E10               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1054   0014F4  EC03  F014         	call	_ADC_StartConversion_Interrupt	;wreg free
  1055   0014F8  6E4D               	movwf	_ret^0,c
  1056                           
  1057                           ;application.c: 26:         } else if (ADC_flag == 1) {
  1058   0014FA  EFA0  F00A         	goto	l6544
  1059   0014FE                     l6536:
  1060   0014FE  043E               	decf	_ADC_flag^0,w,c
  1061   001500  A4D8               	btfss	status,2,c
  1062   001502  EF85  F00A         	goto	u5751
  1063   001506  EF87  F00A         	goto	u5750
  1064   00150A                     u5751:
  1065   00150A  EF90  F00A         	goto	l6540
  1066   00150E                     u5750:
  1067   00150E                     
  1068                           ;application.c: 27:             ret = ADC_StartConversion_Interrupt(&adc_1, ADC_CHANNEL_
      +                          AN1);
  1069   00150E  0ECB               	movlw	low _adc_1
  1070   001510  6E0F               	movwf	ADC_StartConversion_Interrupt@adc^0,c
  1071   001512  0E01               	movlw	1
  1072   001514  6E10               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1073   001516  EC03  F014         	call	_ADC_StartConversion_Interrupt	;wreg free
  1074   00151A  6E4D               	movwf	_ret^0,c
  1075                           
  1076                           ;application.c: 28:         } else if (ADC_flag == 2) {
  1077   00151C  EFA0  F00A         	goto	l6544
  1078   001520                     l6540:
  1079   001520  0E02               	movlw	2
  1080   001522  183E               	xorwf	_ADC_flag^0,w,c
  1081   001524  A4D8               	btfss	status,2,c
  1082   001526  EF97  F00A         	goto	u5761
  1083   00152A  EF99  F00A         	goto	u5760
  1084   00152E                     u5761:
  1085   00152E  EFA0  F00A         	goto	l6544
  1086   001532                     u5760:
  1087   001532                     
  1088                           ;application.c: 29:             ret = ADC_StartConversion_Interrupt(&adc_1, ADC_CHANNEL_
      +                          AN2);
  1089   001532  0ECB               	movlw	low _adc_1
  1090   001534  6E0F               	movwf	ADC_StartConversion_Interrupt@adc^0,c
  1091   001536  0E02               	movlw	2
  1092   001538  6E10               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1093   00153A  EC03  F014         	call	_ADC_StartConversion_Interrupt	;wreg free
  1094   00153E  6E4D               	movwf	_ret^0,c
  1095   001540                     l6544:
  1096                           
  1097                           ;application.c: 32:         ret = convert_short_to_string(adc_res_1, adc_res_1_txt);
  1098   001540  C04B  F030         	movff	_adc_res_1,convert_short_to_string@value
  1099   001544  C04C  F031         	movff	_adc_res_1+1,convert_short_to_string@value+1
  1100   001548  0EA7               	movlw	low _adc_res_1_txt
  1101   00154A  6E32               	movwf	convert_short_to_string@str^0,c
  1102   00154C  EC4D  F00F         	call	_convert_short_to_string	;wreg free
  1103   001550  6E4D               	movwf	_ret^0,c
  1104   001552                     
  1105                           ;application.c: 33:         ret = convert_short_to_string(adc_res_2, adc_res_2_txt);
  1106   001552  C049  F030         	movff	_adc_res_2,convert_short_to_string@value
  1107   001556  C04A  F031         	movff	_adc_res_2+1,convert_short_to_string@value+1
  1108   00155A  0EA1               	movlw	low _adc_res_2_txt
  1109   00155C  6E32               	movwf	convert_short_to_string@str^0,c
  1110   00155E  EC4D  F00F         	call	_convert_short_to_string	;wreg free
  1111   001562  6E4D               	movwf	_ret^0,c
  1112   001564                     
  1113                           ;application.c: 35:         ret = lcd_4bit_send_char_string_pos(&lcd_1, 1, 7, adc_res_1_
      +                          txt);
  1114   001564  0EDB               	movlw	low _lcd_1
  1115   001566  6E1B               	movwf	lcd_4bit_send_char_string_pos@lcd^0,c
  1116   001568  0E01               	movlw	1
  1117   00156A  6E1C               	movwf	lcd_4bit_send_char_string_pos@row^0,c
  1118   00156C  0E07               	movlw	7
  1119   00156E  6E1D               	movwf	lcd_4bit_send_char_string_pos@col^0,c
  1120   001570  0EA7               	movlw	low _adc_res_1_txt
  1121   001572  6E1E               	movwf	lcd_4bit_send_char_string_pos@str^0,c
  1122   001574  6A1F               	clrf	(lcd_4bit_send_char_string_pos@str+1)^0,c
  1123   001576  ECAC  F010         	call	_lcd_4bit_send_char_string_pos	;wreg free
  1124   00157A  6E4D               	movwf	_ret^0,c
  1125   00157C                     
  1126                           ;application.c: 36:         ret = lcd_4bit_send_char_string_pos(&lcd_1, 2, 7, adc_res_2_
      +                          txt);
  1127   00157C  0EDB               	movlw	low _lcd_1
  1128   00157E  6E1B               	movwf	lcd_4bit_send_char_string_pos@lcd^0,c
  1129   001580  0E02               	movlw	2
  1130   001582  6E1C               	movwf	lcd_4bit_send_char_string_pos@row^0,c
  1131   001584  0E07               	movlw	7
  1132   001586  6E1D               	movwf	lcd_4bit_send_char_string_pos@col^0,c
  1133   001588  0EA1               	movlw	low _adc_res_2_txt
  1134   00158A  6E1E               	movwf	lcd_4bit_send_char_string_pos@str^0,c
  1135   00158C  6A1F               	clrf	(lcd_4bit_send_char_string_pos@str+1)^0,c
  1136   00158E  ECAC  F010         	call	_lcd_4bit_send_char_string_pos	;wreg free
  1137   001592  6E4D               	movwf	_ret^0,c
  1138   001594                     
  1139                           ;application.c: 38:         lm35_res_celsuis_mv = (uint16) (lm35_res * 4.88f);
  1140   001594  0EF6               	movlw	246
  1141   001596  6E1B               	movwf	___flmul@a^0,c
  1142   001598  0E28               	movlw	40
  1143   00159A  6E1C               	movwf	(___flmul@a+1)^0,c
  1144   00159C  0E9C               	movlw	156
  1145   00159E  6E1D               	movwf	(___flmul@a+2)^0,c
  1146   0015A0  0E40               	movlw	64
  1147   0015A2  6E1E               	movwf	(___flmul@a+3)^0,c
  1148   0015A4  C047  F009         	movff	_lm35_res,___xxtofl@val
  1149   0015A8  C048  F00A         	movff	_lm35_res+1,___xxtofl@val+1
  1150   0015AC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1151   0015AE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1152   0015B0  0E00               	movlw	0
  1153   0015B2  EC2F  F00B         	call	___xxtofl
  1154   0015B6  C009  F017         	movff	?___xxtofl,___flmul@b
  1155   0015BA  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1156   0015BE  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1157   0015C2  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1158   0015C6  EC17  F008         	call	___flmul	;wreg free
  1159   0015CA  C017  F030         	movff	?___flmul,___fltol@f1
  1160   0015CE  C018  F031         	movff	?___flmul+1,___fltol@f1+1
  1161   0015D2  C019  F032         	movff	?___flmul+2,___fltol@f1+2
  1162   0015D6  C01A  F033         	movff	?___flmul+3,___fltol@f1+3
  1163   0015DA  ECD8  F00D         	call	___fltol	;wreg free
  1164   0015DE  C030  F034         	movff	?___fltol,_lm35_res_celsuis_mv
  1165   0015E2  C031  F035         	movff	?___fltol+1,_lm35_res_celsuis_mv+1
  1166   0015E6                     
  1167                           ;application.c: 39:         lm35_res_celsuis_mv /= 10;
  1168   0015E6  C034  F009         	movff	_lm35_res_celsuis_mv,___lwdiv@dividend
  1169   0015EA  C035  F00A         	movff	_lm35_res_celsuis_mv+1,___lwdiv@dividend+1
  1170   0015EE  0E00               	movlw	0
  1171   0015F0  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  1172   0015F2  0E0A               	movlw	10
  1173   0015F4  6E0B               	movwf	___lwdiv@divisor^0,c
  1174   0015F6  EC00  F011         	call	___lwdiv	;wreg free
  1175   0015FA  C009  F034         	movff	?___lwdiv,_lm35_res_celsuis_mv
  1176   0015FE  C00A  F035         	movff	?___lwdiv+1,_lm35_res_celsuis_mv+1
  1177   001602                     
  1178                           ;application.c: 43:         if (lm35_res_celsuis_mv > 25) {
  1179   001602  5035               	movf	(_lm35_res_celsuis_mv+1)^0,w,c
  1180   001604  E109               	bnz	u5770
  1181   001606  0E1A               	movlw	26
  1182   001608  5C34               	subwf	_lm35_res_celsuis_mv^0,w,c
  1183   00160A  A0D8               	btfss	status,0,c
  1184   00160C  EF0A  F00B         	goto	u5771
  1185   001610  EF0C  F00B         	goto	u5770
  1186   001614                     u5771:
  1187   001614  EF16  F00B         	goto	l6560
  1188   001618                     u5770:
  1189   001618                     
  1190                           ;application.c: 44:             motor_move_forward(&motor1);
  1191   001618  0E50               	movlw	low _motor1
  1192   00161A  6E11               	movwf	motor_move_forward@motor^0,c
  1193   00161C  EC4E  F014         	call	_motor_move_forward	;wreg free
  1194                           
  1195                           ;application.c: 45:             motor_move_forward(&motor2);
  1196   001620  0E4E               	movlw	low _motor2
  1197   001622  6E11               	movwf	motor_move_forward@motor^0,c
  1198   001624  EC4E  F014         	call	_motor_move_forward	;wreg free
  1199                           
  1200                           ;application.c: 46:         } else if (lm35_res_celsuis_mv <= 25) {
  1201   001628  EF6E  F00A         	goto	l6532
  1202   00162C                     l6560:
  1203   00162C  5035               	movf	(_lm35_res_celsuis_mv+1)^0,w,c
  1204   00162E  E107               	bnz	u5781
  1205   001630  0E1A               	movlw	26
  1206   001632  5C34               	subwf	_lm35_res_celsuis_mv^0,w,c
  1207   001634  B0D8               	btfsc	status,0,c
  1208   001636  EF1F  F00B         	goto	u5781
  1209   00163A  EF21  F00B         	goto	u5780
  1210   00163E                     u5781:
  1211   00163E  EF2B  F00B         	goto	l983
  1212   001642                     u5780:
  1213   001642                     
  1214                           ;application.c: 47:             motor_move_backward(&motor1);
  1215   001642  0E50               	movlw	low _motor1
  1216   001644  6E11               	movwf	motor_move_backward@motor^0,c
  1217   001646  EC65  F014         	call	_motor_move_backward	;wreg free
  1218                           
  1219                           ;application.c: 48:             motor_move_backward(&motor2);
  1220   00164A  0E4E               	movlw	low _motor2
  1221   00164C  6E11               	movwf	motor_move_backward@motor^0,c
  1222   00164E  EC65  F014         	call	_motor_move_backward	;wreg free
  1223                           
  1224                           ;application.c: 49:         } else {
  1225   001652  EF6E  F00A         	goto	l6532
  1226   001656                     l983:
  1227   001656  EF6E  F00A         	goto	l6532
  1228   00165A  EFB7  F000         	goto	start
  1229   00165E                     __end_of_main:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _motor_move_forward *****************
  1233 ;; Defined at:
  1234 ;;		line 31 in file "ECU_Layer/motor/ecu_motor.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  motor           1   16[COMRAM] PTR const struct .
  1237 ;;		 -> motor2(2), motor1(2), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  ret             1    0        unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      unsigned char 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;Total ram usage:        1 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 5
  1256 ;; This function calls:
  1257 ;;		_gpio_pin_write_logic
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text1
  1264   00289C                     __ptext1:
  1265                           	callstack 0
  1266   00289C                     _motor_move_forward:
  1267                           	callstack 25
  1268   00289C                     
  1269                           ;ECU_Layer/motor/ecu_motor.c: 33:     if (((void*)0) == motor) {
  1270   00289C  5011               	movf	motor_move_forward@motor^0,w,c
  1271   00289E  A4D8               	btfss	status,2,c
  1272   0028A0  EF54  F014         	goto	u3661
  1273   0028A4  EF56  F014         	goto	u3660
  1274   0028A8                     u3661:
  1275   0028A8  EF58  F014         	goto	l4942
  1276   0028AC                     u3660:
  1277   0028AC                     
  1278                           ;ECU_Layer/motor/ecu_motor.c: 35:     } else {
  1279   0028AC  EF64  F014         	goto	l311
  1280   0028B0                     l4942:
  1281                           
  1282                           ;ECU_Layer/motor/ecu_motor.c: 36:         gpio_pin_write_logic(&(motor->motor[0]), GPIO_
      +                          HIGH);
  1283   0028B0  C011  F009         	movff	motor_move_forward@motor,gpio_pin_write_logic@pin_config
  1284   0028B4  0E01               	movlw	1
  1285   0028B6  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  1286   0028B8  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  1287                           
  1288                           ;ECU_Layer/motor/ecu_motor.c: 37:         gpio_pin_write_logic(&(motor->motor[1]), GPIO_
      +                          LOW);
  1289   0028BC  2811               	incf	motor_move_forward@motor^0,w,c
  1290   0028BE  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  1291   0028C0  0E00               	movlw	0
  1292   0028C2  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  1293   0028C4  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  1294   0028C8                     l311:
  1295   0028C8  0012               	return		;funcret
  1296   0028CA                     __end_of_motor_move_forward:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _motor_move_backward *****************
  1300 ;; Defined at:
  1301 ;;		line 47 in file "ECU_Layer/motor/ecu_motor.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  motor           1   16[COMRAM] PTR const struct .
  1304 ;;		 -> motor2(2), motor1(2), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  ret             1    0        unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      unsigned char 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        1 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 5
  1323 ;; This function calls:
  1324 ;;		_gpio_pin_write_logic
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text2
  1331   0028CA                     __ptext2:
  1332                           	callstack 0
  1333   0028CA                     _motor_move_backward:
  1334                           	callstack 25
  1335   0028CA                     
  1336                           ;ECU_Layer/motor/ecu_motor.c: 49:     if (((void*)0) == motor) {
  1337   0028CA  5011               	movf	motor_move_backward@motor^0,w,c
  1338   0028CC  A4D8               	btfss	status,2,c
  1339   0028CE  EF6B  F014         	goto	u3671
  1340   0028D2  EF6D  F014         	goto	u3670
  1341   0028D6                     u3671:
  1342   0028D6  EF6F  F014         	goto	l4950
  1343   0028DA                     u3670:
  1344   0028DA                     
  1345                           ;ECU_Layer/motor/ecu_motor.c: 51:     } else {
  1346   0028DA  EF7B  F014         	goto	l316
  1347   0028DE                     l4950:
  1348                           
  1349                           ;ECU_Layer/motor/ecu_motor.c: 52:         gpio_pin_write_logic(&(motor->motor[0]), GPIO_
      +                          LOW);
  1350   0028DE  C011  F009         	movff	motor_move_backward@motor,gpio_pin_write_logic@pin_config
  1351   0028E2  0E00               	movlw	0
  1352   0028E4  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  1353   0028E6  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  1354                           
  1355                           ;ECU_Layer/motor/ecu_motor.c: 53:         gpio_pin_write_logic(&(motor->motor[1]), GPIO_
      +                          HIGH);
  1356   0028EA  2811               	incf	motor_move_backward@motor^0,w,c
  1357   0028EC  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  1358   0028EE  0E01               	movlw	1
  1359   0028F0  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  1360   0028F2  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  1361   0028F6                     l316:
  1362   0028F6  0012               	return		;funcret
  1363   0028F8                     __end_of_motor_move_backward:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _lcd_4bit_send_char_string_pos *****************
  1367 ;; Defined at:
  1368 ;;		line 100 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  lcd             1   26[COMRAM] PTR const struct .
  1371 ;;		 -> lcd_1(6), 
  1372 ;;  row             1   27[COMRAM] unsigned char 
  1373 ;;  col             1   28[COMRAM] unsigned char 
  1374 ;;  str             2   29[COMRAM] PTR unsigned char 
  1375 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), STR_6(7), STR_5(8), 
  1376 ;;		 -> STR_4(9), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  ret             1   31[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 8
  1395 ;; This function calls:
  1396 ;;		_lcd_4bit_send_char_data
  1397 ;;		_lcd_4bit_set_cusrsor
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text3
  1404   002158                     __ptext3:
  1405                           	callstack 0
  1406   002158                     _lcd_4bit_send_char_string_pos:
  1407                           	callstack 22
  1408   002158                     
  1409                           ;ECU_Layer/chr_lcd/chr_lcd.c: 102:     if ((((void*)0) == lcd) || (((void*)0) == str)) {
  1410   002158  501B               	movf	lcd_4bit_send_char_string_pos@lcd^0,w,c
  1411   00215A  B4D8               	btfsc	status,2,c
  1412   00215C  EFB2  F010         	goto	u3521
  1413   002160  EFB4  F010         	goto	u3520
  1414   002164                     u3521:
  1415   002164  EFBD  F010         	goto	l4852
  1416   002168                     u3520:
  1417   002168  501E               	movf	lcd_4bit_send_char_string_pos@str^0,w,c
  1418   00216A  101F               	iorwf	(lcd_4bit_send_char_string_pos@str+1)^0,w,c
  1419   00216C  A4D8               	btfss	status,2,c
  1420   00216E  EFBB  F010         	goto	u3531
  1421   002172  EFBD  F010         	goto	u3530
  1422   002176                     u3531:
  1423   002176  EFC1  F010         	goto	l4854
  1424   00217A                     u3530:
  1425   00217A                     l4852:
  1426                           
  1427                           ;ECU_Layer/chr_lcd/chr_lcd.c: 103:         ret = (STD_ReturnType)0x00;
  1428   00217A  0E00               	movlw	0
  1429   00217C  6E20               	movwf	lcd_4bit_send_char_string_pos@ret^0,c
  1430                           
  1431                           ;ECU_Layer/chr_lcd/chr_lcd.c: 104:     } else {
  1432   00217E  EFFE  F010         	goto	l4862
  1433   002182                     l4854:
  1434                           
  1435                           ;ECU_Layer/chr_lcd/chr_lcd.c: 105:         ret = lcd_4bit_set_cusrsor(lcd, row, col);
  1436   002182  C01B  F017         	movff	lcd_4bit_send_char_string_pos@lcd,lcd_4bit_set_cusrsor@lcd
  1437   002186  C01C  F018         	movff	lcd_4bit_send_char_string_pos@row,lcd_4bit_set_cusrsor@row
  1438   00218A  C01D  F019         	movff	lcd_4bit_send_char_string_pos@col,lcd_4bit_set_cusrsor@col
  1439   00218E  EC14  F012         	call	_lcd_4bit_set_cusrsor	;wreg free
  1440   002192  6E20               	movwf	lcd_4bit_send_char_string_pos@ret^0,c
  1441                           
  1442                           ;ECU_Layer/chr_lcd/chr_lcd.c: 106:         while (*str) {
  1443   002194  EFE5  F010         	goto	l4860
  1444   002198                     l4856:
  1445                           
  1446                           ;ECU_Layer/chr_lcd/chr_lcd.c: 107:             ret = lcd_4bit_send_char_data(lcd, *str++
      +                          );
  1447   002198  C01B  F014         	movff	lcd_4bit_send_char_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1448   00219C  C01E  FFF6         	movff	lcd_4bit_send_char_string_pos@str,tblptrl
  1449   0021A0  C01F  FFF7         	movff	lcd_4bit_send_char_string_pos@str+1,tblptrh
  1450   0021A4  0E00               	movlw	low (__smallconst shr (0+16))
  1451   0021A6  6EF8               	movwf	tblptru,c
  1452   0021A8  0E0F               	movlw	(high __ramtop+-1)
  1453   0021AA  64F7               	cpfsgt	tblptrh,c
  1454   0021AC  D003               	bra	u3547
  1455   0021AE  0008               	tblrd		*
  1456   0021B0  50F5               	movf	tablat,w,c
  1457   0021B2  D005               	bra	u3540
  1458   0021B4                     u3547:
  1459   0021B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1460   0021B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1461   0021BC  50EF               	movf	indf0,w,c
  1462   0021BE                     u3540:
  1463   0021BE  6E15               	movwf	lcd_4bit_send_char_data@data^0,c
  1464   0021C0  EC36  F013         	call	_lcd_4bit_send_char_data	;wreg free
  1465   0021C4  6E20               	movwf	lcd_4bit_send_char_string_pos@ret^0,c
  1466   0021C6  4A1E               	infsnz	lcd_4bit_send_char_string_pos@str^0,f,c
  1467   0021C8  2A1F               	incf	(lcd_4bit_send_char_string_pos@str+1)^0,f,c
  1468   0021CA                     l4860:
  1469                           
  1470                           ;ECU_Layer/chr_lcd/chr_lcd.c: 106:         while (*str) {
  1471   0021CA  C01E  FFF6         	movff	lcd_4bit_send_char_string_pos@str,tblptrl
  1472   0021CE  C01F  FFF7         	movff	lcd_4bit_send_char_string_pos@str+1,tblptrh
  1473   0021D2  0E00               	movlw	low (__smallconst shr (0+16))
  1474   0021D4  6EF8               	movwf	tblptru,c
  1475   0021D6  0E0F               	movlw	(high __ramtop+-1)
  1476   0021D8  64F7               	cpfsgt	tblptrh,c
  1477   0021DA  D003               	bra	u3557
  1478   0021DC  0008               	tblrd		*
  1479   0021DE  50F5               	movf	tablat,w,c
  1480   0021E0  D005               	bra	u3550
  1481   0021E2                     u3557:
  1482   0021E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1483   0021E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1484   0021EA  50EF               	movf	indf0,w,c
  1485   0021EC                     u3550:
  1486   0021EC  0900               	iorlw	0
  1487   0021EE  A4D8               	btfss	status,2,c
  1488   0021F0  EFFC  F010         	goto	u3561
  1489   0021F4  EFFE  F010         	goto	u3560
  1490   0021F8                     u3561:
  1491   0021F8  EFCC  F010         	goto	l4856
  1492   0021FC                     u3560:
  1493   0021FC                     l4862:
  1494                           
  1495                           ;ECU_Layer/chr_lcd/chr_lcd.c: 110:     return ret;
  1496   0021FC  5020               	movf	lcd_4bit_send_char_string_pos@ret^0,w,c
  1497   0021FE  0012               	return		;funcret
  1498   002200                     __end_of_lcd_4bit_send_char_string_pos:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _lcd_4bit_set_cusrsor *****************
  1502 ;; Defined at:
  1503 ;;		line 338 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  lcd             1   22[COMRAM] PTR const struct .
  1506 ;;		 -> lcd_1(6), 
  1507 ;;  row             1   23[COMRAM] unsigned char 
  1508 ;;  col             1   24[COMRAM] unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  ret             1   25[COMRAM] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      unsigned char 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1520 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;Total ram usage:        4 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 7
  1527 ;; This function calls:
  1528 ;;		_lcd_4bit_send_command
  1529 ;; This function is called by:
  1530 ;;		_lcd_4bit_send_char_string_pos
  1531 ;;		_lcd_4bit_send_char_data_pos
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text4
  1536   002428                     __ptext4:
  1537                           	callstack 0
  1538   002428                     _lcd_4bit_set_cusrsor:
  1539                           	callstack 22
  1540   002428                     
  1541                           ;ECU_Layer/chr_lcd/chr_lcd.c: 339:     STD_ReturnType ret = (STD_ReturnType)0x00;
  1542   002428  0E00               	movlw	0
  1543   00242A  6E1A               	movwf	lcd_4bit_set_cusrsor@ret^0,c
  1544                           
  1545                           ;ECU_Layer/chr_lcd/chr_lcd.c: 340:     if (((void*)0) == lcd) {
  1546   00242C  5017               	movf	lcd_4bit_set_cusrsor@lcd^0,w,c
  1547   00242E  A4D8               	btfss	status,2,c
  1548   002430  EF1C  F012         	goto	u3401
  1549   002434  EF1E  F012         	goto	u3400
  1550   002438                     u3401:
  1551   002438  EF22  F012         	goto	l4698
  1552   00243C                     u3400:
  1553   00243C                     
  1554                           ;ECU_Layer/chr_lcd/chr_lcd.c: 341:         ret = (STD_ReturnType)0x00;
  1555   00243C  0E00               	movlw	0
  1556   00243E  6E1A               	movwf	lcd_4bit_set_cusrsor@ret^0,c
  1557                           
  1558                           ;ECU_Layer/chr_lcd/chr_lcd.c: 342:     } else {
  1559   002440  EF44  F012         	goto	l4708
  1560   002444                     l4698:
  1561                           
  1562                           ;ECU_Layer/chr_lcd/chr_lcd.c: 343:         col--;
  1563   002444  0619               	decf	lcd_4bit_set_cusrsor@col^0,f,c
  1564                           
  1565                           ;ECU_Layer/chr_lcd/chr_lcd.c: 344:         switch (row) {
  1566   002446  EF39  F012         	goto	l4706
  1567   00244A                     l4700:
  1568                           
  1569                           ;ECU_Layer/chr_lcd/chr_lcd.c: 346:                 ret = lcd_4bit_send_command(lcd, (0x8
      +                          0 + col));
  1570   00244A  C017  F014         	movff	lcd_4bit_set_cusrsor@lcd,lcd_4bit_send_command@lcd
  1571   00244E  5019               	movf	lcd_4bit_set_cusrsor@col^0,w,c
  1572   002450  0F80               	addlw	128
  1573   002452  6E15               	movwf	lcd_4bit_send_command@command^0,c
  1574   002454  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  1575   002458  6E1A               	movwf	lcd_4bit_set_cusrsor@ret^0,c
  1576                           
  1577                           ;ECU_Layer/chr_lcd/chr_lcd.c: 347:                 break;
  1578   00245A  EF44  F012         	goto	l4708
  1579   00245E                     l4702:
  1580                           
  1581                           ;ECU_Layer/chr_lcd/chr_lcd.c: 349:                 ret = lcd_4bit_send_command(lcd, (0xC
      +                          0 + col));
  1582   00245E  C017  F014         	movff	lcd_4bit_set_cusrsor@lcd,lcd_4bit_send_command@lcd
  1583   002462  5019               	movf	lcd_4bit_set_cusrsor@col^0,w,c
  1584   002464  0FC0               	addlw	192
  1585   002466  6E15               	movwf	lcd_4bit_send_command@command^0,c
  1586   002468  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  1587   00246C  6E1A               	movwf	lcd_4bit_set_cusrsor@ret^0,c
  1588                           
  1589                           ;ECU_Layer/chr_lcd/chr_lcd.c: 350:                 break;
  1590   00246E  EF44  F012         	goto	l4708
  1591   002472                     l4706:
  1592   002472  5018               	movf	lcd_4bit_set_cusrsor@row^0,w,c
  1593                           
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 2, Range of values is 1 to 2
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte            7     4 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600   002474  0A01               	xorlw	1	; case 1
  1601   002476  B4D8               	btfsc	status,2,c
  1602   002478  EF25  F012         	goto	l4700
  1603   00247C  0A03               	xorlw	3	; case 2
  1604   00247E  B4D8               	btfsc	status,2,c
  1605   002480  EF2F  F012         	goto	l4702
  1606   002484  EF44  F012         	goto	l4708
  1607   002488                     l4708:
  1608                           
  1609                           ;ECU_Layer/chr_lcd/chr_lcd.c: 353:     return ret;
  1610   002488  501A               	movf	lcd_4bit_set_cusrsor@ret^0,w,c
  1611   00248A  0012               	return		;funcret
  1612   00248C                     __end_of_lcd_4bit_set_cusrsor:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _lcd_4bit_send_char_data *****************
  1616 ;; Defined at:
  1617 ;;		line 63 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  lcd             1   19[COMRAM] PTR const struct .
  1620 ;;		 -> lcd_1(6), 
  1621 ;;  data            1   20[COMRAM] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  ret             1   21[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:        3 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 6
  1640 ;; This function calls:
  1641 ;;		_gpio_pin_write_logic
  1642 ;;		_lcd_4bit_send_enable_signal
  1643 ;;		_lcd_send_4bit
  1644 ;; This function is called by:
  1645 ;;		_lcd_4bit_send_char_string_pos
  1646 ;;		_lcd_4bit_send_char_data_pos
  1647 ;;		_lcd_4bit_send_char_string
  1648 ;;		_lcd_4bit_send_custom_char
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text5
  1653   00266C                     __ptext5:
  1654                           	callstack 0
  1655   00266C                     _lcd_4bit_send_char_data:
  1656                           	callstack 23
  1657   00266C                     
  1658                           ;ECU_Layer/chr_lcd/chr_lcd.c: 65:     if (((void*)0) == lcd) {
  1659   00266C  5014               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1660   00266E  A4D8               	btfss	status,2,c
  1661   002670  EF3C  F013         	goto	u3391
  1662   002674  EF3E  F013         	goto	u3390
  1663   002678                     u3391:
  1664   002678  EF42  F013         	goto	l4688
  1665   00267C                     u3390:
  1666   00267C                     
  1667                           ;ECU_Layer/chr_lcd/chr_lcd.c: 66:         ret = (STD_ReturnType)0x00;
  1668   00267C  0E00               	movlw	0
  1669   00267E  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1670                           
  1671                           ;ECU_Layer/chr_lcd/chr_lcd.c: 67:     } else {
  1672   002680  EF62  F013         	goto	l4690
  1673   002684                     l4688:
  1674                           
  1675                           ;ECU_Layer/chr_lcd/chr_lcd.c: 68:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPI
      +                          O_HIGH);
  1676   002684  C014  F009         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1677   002688  0E01               	movlw	1
  1678   00268A  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  1679   00268C  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  1680   002690  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1681                           
  1682                           ;ECU_Layer/chr_lcd/chr_lcd.c: 69:         ret = lcd_send_4bit(lcd, data >> 4);
  1683   002692  C014  F011         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  1684   002696  3815               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1685   002698  0B0F               	andlw	15
  1686   00269A  6E12               	movwf	lcd_send_4bit@_command^0,c
  1687   00269C  ECAA  F011         	call	_lcd_send_4bit	;wreg free
  1688   0026A0  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1689                           
  1690                           ;ECU_Layer/chr_lcd/chr_lcd.c: 70:         ret = lcd_4bit_send_enable_signal(lcd);
  1691   0026A2  C014  F011         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1692   0026A6  ECB0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  1693   0026AA  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1694                           
  1695                           ;ECU_Layer/chr_lcd/chr_lcd.c: 71:         ret = lcd_send_4bit(lcd, data);
  1696   0026AC  C014  F011         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  1697   0026B0  C015  F012         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@_command
  1698   0026B4  ECAA  F011         	call	_lcd_send_4bit	;wreg free
  1699   0026B8  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1700                           
  1701                           ;ECU_Layer/chr_lcd/chr_lcd.c: 72:         ret = lcd_4bit_send_enable_signal(lcd);
  1702   0026BA  C014  F011         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1703   0026BE  ECB0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  1704   0026C2  6E16               	movwf	lcd_4bit_send_char_data@ret^0,c
  1705   0026C4                     l4690:
  1706                           
  1707                           ;ECU_Layer/chr_lcd/chr_lcd.c: 74:     return ret;
  1708   0026C4  5016               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1709   0026C6  0012               	return		;funcret
  1710   0026C8                     __end_of_lcd_4bit_send_char_data:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _convert_short_to_string *****************
  1714 ;; Defined at:
  1715 ;;		line 257 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  value           2   47[COMRAM] unsigned short 
  1718 ;;  str             1   49[COMRAM] PTR unsigned char 
  1719 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  temp            6    0[BANK0 ] unsigned char [6]
  1722 ;;  l_counter       1    7[BANK0 ] unsigned char 
  1723 ;;  ret             1    6[BANK0 ] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;Total ram usage:       11 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 9
  1740 ;; This function calls:
  1741 ;;		_sprintf
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text6
  1748   001E9A                     __ptext6:
  1749                           	callstack 0
  1750   001E9A                     _convert_short_to_string:
  1751                           	callstack 21
  1752   001E9A                     
  1753                           ;ECU_Layer/chr_lcd/chr_lcd.c: 259:     uint8 temp[6] = {0};
  1754   001E9A  EE20  F0E1         	lfsr	2,convert_short_to_string@temp
  1755   001E9E  0E05               	movlw	5
  1756   001EA0                     u5571:
  1757   001EA0  6ADE               	clrf	postinc2,c
  1758   001EA2  06E8               	decf	wreg,f,c
  1759   001EA4  E2FD               	bc	u5571
  1760   001EA6                     
  1761                           ;ECU_Layer/chr_lcd/chr_lcd.c: 260:     uint8 l_counter = 0;
  1762   001EA6  0E00               	movlw	0
  1763   001EA8  0100               	movlb	0	; () banked
  1764   001EAA  6FE8               	movwf	convert_short_to_string@l_counter& (0+255),b
  1765   001EAC                     
  1766                           ; BSR set to: 0
  1767                           ;ECU_Layer/chr_lcd/chr_lcd.c: 261:     if (((void*)0) == str) {
  1768   001EAC  5032               	movf	convert_short_to_string@str^0,w,c
  1769   001EAE  A4D8               	btfss	status,2,c
  1770   001EB0  EF5C  F00F         	goto	u5581
  1771   001EB4  EF5E  F00F         	goto	u5580
  1772   001EB8                     u5581:
  1773   001EB8  EF62  F00F         	goto	l6404
  1774   001EBC                     u5580:
  1775   001EBC                     
  1776                           ; BSR set to: 0
  1777                           ;ECU_Layer/chr_lcd/chr_lcd.c: 262:         ret = (STD_ReturnType)0x00;
  1778   001EBC  0E00               	movlw	0
  1779   001EBE  6FE7               	movwf	convert_short_to_string@ret& (0+255),b
  1780                           
  1781                           ;ECU_Layer/chr_lcd/chr_lcd.c: 263:     } else {
  1782   001EC0  EFA6  F00F         	goto	l6424
  1783   001EC4                     l6404:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;ECU_Layer/chr_lcd/chr_lcd.c: 264:         sprintf((char *) temp, "%u", value);
  1787   001EC4  0EE1               	movlw	low convert_short_to_string@temp
  1788   001EC6  6E1F               	movwf	sprintf@s^0,c
  1789   001EC8  0E29               	movlw	low STR_1
  1790   001ECA  6E20               	movwf	sprintf@fmt^0,c
  1791   001ECC  C030  F021         	movff	convert_short_to_string@value,?_sprintf+2
  1792   001ED0  C031  F022         	movff	convert_short_to_string@value+1,?_sprintf+3
  1793   001ED4  ECE9  F013         	call	_sprintf	;wreg free
  1794                           
  1795                           ;ECU_Layer/chr_lcd/chr_lcd.c: 265:         while ((temp[l_counter] != '\0') && (l_counte
      +                          r < 5)) {
  1796   001ED8  EF79  F00F         	goto	l6410
  1797   001EDC                     l6406:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;ECU_Layer/chr_lcd/chr_lcd.c: 266:             str[l_counter] = temp[l_counter];
  1801   001EDC  51E8               	movf	convert_short_to_string@l_counter& (0+255),w,b
  1802   001EDE  0FE1               	addlw	low convert_short_to_string@temp
  1803   001EE0  6ED9               	movwf	fsr2l,c
  1804   001EE2  6ADA               	clrf	fsr2h,c
  1805   001EE4  5032               	movf	convert_short_to_string@str^0,w,c
  1806   001EE6  25E8               	addwf	convert_short_to_string@l_counter& (0+255),w,b
  1807   001EE8  6EE1               	movwf	fsr1l,c
  1808   001EEA  6AE2               	clrf	fsr1h,c
  1809   001EEC  CFDF FFE7          	movff	indf2,indf1
  1810   001EF0                     
  1811                           ; BSR set to: 0
  1812                           ;ECU_Layer/chr_lcd/chr_lcd.c: 267:             l_counter++;
  1813   001EF0  2BE8               	incf	convert_short_to_string@l_counter& (0+255),f,b
  1814   001EF2                     l6410:
  1815                           
  1816                           ;ECU_Layer/chr_lcd/chr_lcd.c: 265:         while ((temp[l_counter] != '\0') && (l_counte
      +                          r < 5)) {
  1817   001EF2  0100               	movlb	0	; () banked
  1818   001EF4  51E8               	movf	convert_short_to_string@l_counter& (0+255),w,b
  1819   001EF6  0FE1               	addlw	low convert_short_to_string@temp
  1820   001EF8  6ED9               	movwf	fsr2l,c
  1821   001EFA  6ADA               	clrf	fsr2h,c
  1822   001EFC  50DF               	movf	indf2,w,c
  1823   001EFE  B4D8               	btfsc	status,2,c
  1824   001F00  EF84  F00F         	goto	u5591
  1825   001F04  EF86  F00F         	goto	u5590
  1826   001F08                     u5591:
  1827   001F08  EF97  F00F         	goto	l6418
  1828   001F0C                     u5590:
  1829   001F0C                     
  1830                           ; BSR set to: 0
  1831   001F0C  0E04               	movlw	4
  1832   001F0E  65E8               	cpfsgt	convert_short_to_string@l_counter& (0+255),b
  1833   001F10  EF8C  F00F         	goto	u5601
  1834   001F14  EF8E  F00F         	goto	u5600
  1835   001F18                     u5601:
  1836   001F18  EF6E  F00F         	goto	l6406
  1837   001F1C                     u5600:
  1838   001F1C  EF97  F00F         	goto	l6418
  1839   001F20                     l6414:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;ECU_Layer/chr_lcd/chr_lcd.c: 272:             str[l_counter] = ' ';
  1843   001F20  5032               	movf	convert_short_to_string@str^0,w,c
  1844   001F22  25E8               	addwf	convert_short_to_string@l_counter& (0+255),w,b
  1845   001F24  6ED9               	movwf	fsr2l,c
  1846   001F26  6ADA               	clrf	fsr2h,c
  1847   001F28  0E20               	movlw	32
  1848   001F2A  6EDF               	movwf	indf2,c
  1849   001F2C                     
  1850                           ; BSR set to: 0
  1851                           ;ECU_Layer/chr_lcd/chr_lcd.c: 273:             l_counter++;
  1852   001F2C  2BE8               	incf	convert_short_to_string@l_counter& (0+255),f,b
  1853   001F2E                     l6418:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;ECU_Layer/chr_lcd/chr_lcd.c: 271:         while (l_counter < 5) {
  1857   001F2E  0E04               	movlw	4
  1858   001F30  65E8               	cpfsgt	convert_short_to_string@l_counter& (0+255),b
  1859   001F32  EF9D  F00F         	goto	u5611
  1860   001F36  EF9F  F00F         	goto	u5610
  1861   001F3A                     u5611:
  1862   001F3A  EF90  F00F         	goto	l6414
  1863   001F3E                     u5610:
  1864   001F3E                     
  1865                           ; BSR set to: 0
  1866                           ;ECU_Layer/chr_lcd/chr_lcd.c: 276:         str[l_counter] = '\0';
  1867   001F3E  5032               	movf	convert_short_to_string@str^0,w,c
  1868   001F40  25E8               	addwf	convert_short_to_string@l_counter& (0+255),w,b
  1869   001F42  6ED9               	movwf	fsr2l,c
  1870   001F44  6ADA               	clrf	fsr2h,c
  1871   001F46  6ADF               	clrf	indf2,c
  1872   001F48                     
  1873                           ; BSR set to: 0
  1874                           ;ECU_Layer/chr_lcd/chr_lcd.c: 277:         ret = (STD_ReturnType)0x01;
  1875   001F48  0E01               	movlw	1
  1876   001F4A  6FE7               	movwf	convert_short_to_string@ret& (0+255),b
  1877   001F4C                     l6424:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;ECU_Layer/chr_lcd/chr_lcd.c: 279:     return ret;
  1881   001F4C  51E7               	movf	convert_short_to_string@ret& (0+255),w,b
  1882   001F4E                     
  1883                           ; BSR set to: 0
  1884   001F4E  0012               	return		;funcret
  1885   001F50                     __end_of_convert_short_to_string:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function _sprintf *****************
  1889 ;; Defined at:
  1890 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  s               1   30[COMRAM] PTR unsigned char 
  1893 ;;		 -> convert_int_to_string@temp(11), convert_short_to_string@temp(6), convert_byte_to_string@temp(4), 
  1894 ;;  fmt             1   31[COMRAM] PTR const unsigned char 
  1895 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  f              12   35[COMRAM] struct _IO_FILE
  1898 ;;  ret             2    0        int 
  1899 ;;  ap              1   34[COMRAM] PTR void [1]
  1900 ;;		 -> ?_sprintf(2), 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  2   30[COMRAM] int 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;Total ram usage:       17 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 8
  1917 ;; This function calls:
  1918 ;;		_vfprintf
  1919 ;; This function is called by:
  1920 ;;		_convert_short_to_string
  1921 ;;		_convert_byte_to_string
  1922 ;;		_convert_int_to_string
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text7
  1927   0027D2                     __ptext7:
  1928                           	callstack 0
  1929   0027D2                     _sprintf:
  1930                           	callstack 21
  1931   0027D2  0E21               	movlw	low (?_sprintf+2)
  1932   0027D4  6E23               	movwf	sprintf@ap^0,c
  1933   0027D6  C01F  F024         	movff	sprintf@s,sprintf@f
  1934   0027DA  0E00               	movlw	0
  1935   0027DC  6E28               	movwf	(sprintf@f+4)^0,c
  1936   0027DE  0E00               	movlw	0
  1937   0027E0  6E27               	movwf	(sprintf@f+3)^0,c
  1938   0027E2  0E00               	movlw	0
  1939   0027E4  6E2F               	movwf	(sprintf@f+11)^0,c
  1940   0027E6  0E00               	movlw	0
  1941   0027E8  6E2E               	movwf	(sprintf@f+10)^0,c
  1942   0027EA  0E24               	movlw	low sprintf@f
  1943   0027EC  6E1B               	movwf	vfprintf@fp^0,c
  1944   0027EE  C020  F01C         	movff	sprintf@fmt,vfprintf@fmt
  1945   0027F2  0E23               	movlw	low sprintf@ap
  1946   0027F4  6E1D               	movwf	vfprintf@ap^0,c
  1947   0027F6  EC90  F013         	call	_vfprintf	;wreg free
  1948   0027FA  501F               	movf	sprintf@s^0,w,c
  1949   0027FC  2427               	addwf	(sprintf@f+3)^0,w,c
  1950   0027FE  6ED9               	movwf	fsr2l,c
  1951   002800  6ADA               	clrf	fsr2h,c
  1952   002802  6ADF               	clrf	indf2,c
  1953   002804  0012               	return		;funcret
  1954   002806                     __end_of_sprintf:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _vfprintf *****************
  1958 ;; Defined at:
  1959 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  1962 ;;		 -> sprintf@f(12), 
  1963 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  1964 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1965 ;;  ap              1   28[COMRAM] PTR PTR void 
  1966 ;;		 -> sprintf@ap(1), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  cfmt            1   29[COMRAM] PTR unsigned char 
  1969 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2   26[COMRAM] int 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 7
  1986 ;; This function calls:
  1987 ;;		_vfpfcnvrt
  1988 ;; This function is called by:
  1989 ;;		_sprintf
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text8
  1994   002720                     __ptext8:
  1995                           	callstack 0
  1996   002720                     _vfprintf:
  1997                           	callstack 21
  1998   002720                     
  1999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2000   002720  C01C  F01E         	movff	vfprintf@fmt,vfprintf@cfmt
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2003   002724  EF9C  F013         	goto	l6376
  2004   002728                     l6374:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2007   002728  C01B  F011         	movff	vfprintf@fp,vfpfcnvrt@fp
  2008   00272C  0E1E               	movlw	low vfprintf@cfmt
  2009   00272E  6E12               	movwf	vfpfcnvrt@fmt^0,c
  2010   002730  C01D  F013         	movff	vfprintf@ap,vfpfcnvrt@ap
  2011   002734  EC09  F00C         	call	_vfpfcnvrt	;wreg free
  2012   002738                     l6376:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2015   002738  C01E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2016   00273C                     	if	1	;There is more than 1 active tblptr byte
  2017   00273C  0E10               	movlw	high __smallconst
  2018   00273E  6EF7               	movwf	tblptrh,c
  2019   002740                     	endif
  2020   002740                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2021   002740  6AF8               	clrf	tblptru,c
  2022   002742                     	endif
  2023   002742                     	if	0	;tblptru may be non-zero
  2024   002742                     	endif
  2025   002742  0008               	tblrd		*
  2026   002744  50F5               	movf	tablat,w,c
  2027   002746  0900               	iorlw	0
  2028   002748  A4D8               	btfss	status,2,c
  2029   00274A  EFA9  F013         	goto	u5561
  2030   00274E  EFAB  F013         	goto	u5560
  2031   002752                     u5561:
  2032   002752  EF94  F013         	goto	l6374
  2033   002756                     u5560:
  2034   002756                     
  2035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2036   002756  0E00               	movlw	0
  2037   002758  6E1C               	movwf	(?_vfprintf+1)^0,c
  2038   00275A  0E00               	movlw	0
  2039   00275C  6E1B               	movwf	?_vfprintf^0,c
  2040   00275E  0012               	return		;funcret
  2041   002760                     __end_of_vfprintf:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _vfpfcnvrt *****************
  2045 ;; Defined at:
  2046 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  2049 ;;		 -> sprintf@f(12), 
  2050 ;;  fmt             1   17[COMRAM] PTR PTR unsigned char 
  2051 ;;		 -> vfprintf@cfmt(1), 
  2052 ;;  ap              1   18[COMRAM] PTR PTR void 
  2053 ;;		 -> sprintf@ap(1), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  convarg         4   20[COMRAM] struct .
  2056 ;;  c               1   25[COMRAM] unsigned char 
  2057 ;;  cp              1   24[COMRAM] PTR unsigned char 
  2058 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2059 ;;  done            1    0        _Bool 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;Total ram usage:       10 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 6
  2076 ;; This function calls:
  2077 ;;		___lwdiv
  2078 ;;		___lwmod
  2079 ;;		_fputc
  2080 ;; This function is called by:
  2081 ;;		_vfprintf
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text9
  2086   001812                     __ptext9:
  2087                           	callstack 0
  2088   001812                     _vfpfcnvrt:
  2089                           	callstack 21
  2090   001812                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2092   001812  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2093   001814  6ED9               	movwf	fsr2l,c
  2094   001816  6ADA               	clrf	fsr2h,c
  2095   001818  CFDF FFF6          	movff	indf2,tblptrl
  2096   00181C                     	if	1	;There is more than 1 active tblptr byte
  2097   00181C  0E10               	movlw	high __smallconst
  2098   00181E  6EF7               	movwf	tblptrh,c
  2099   001820                     	endif
  2100   001820                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2101   001820  6AF8               	clrf	tblptru,c
  2102   001822                     	endif
  2103   001822                     	if	0	;tblptru may be non-zero
  2104   001822                     	endif
  2105   001822  0008               	tblrd		*
  2106   001824  50F5               	movf	tablat,w,c
  2107   001826  0A25               	xorlw	37
  2108   001828  A4D8               	btfss	status,2,c
  2109   00182A  EF19  F00C         	goto	u5511
  2110   00182E  EF1B  F00C         	goto	u5510
  2111   001832                     u5511:
  2112   001832  EFB4  F00C         	goto	l6366
  2113   001836                     u5510:
  2114   001836                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2116   001836  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2117   001838  6ED9               	movwf	fsr2l,c
  2118   00183A  6ADA               	clrf	fsr2h,c
  2119   00183C  2ADF               	incf	indf2,f,c
  2120   00183E                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2122   00183E  0E00               	movlw	0
  2123   001840  0100               	movlb	0	; () banked
  2124   001842  6F7C               	movwf	(_width+1)& (0+255),b
  2125   001844  0E00               	movlw	0
  2126   001846  6F7B               	movwf	_width& (0+255),b
  2127   001848  C07B  F03C         	movff	_width,_flags
  2128   00184C                     
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2131   00184C  697D               	setf	_prec& (0+255),b
  2132   00184E  697E               	setf	(_prec+1)& (0+255),b
  2133   001850                     
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2136   001850  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2137   001852  6ED9               	movwf	fsr2l,c
  2138   001854  6ADA               	clrf	fsr2h,c
  2139   001856  50DF               	movf	indf2,w,c
  2140   001858  6E19               	movwf	vfpfcnvrt@cp^0,c
  2141   00185A                     
  2142                           ; BSR set to: 0
  2143   00185A  C019  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2144   00185E                     	if	1	;There is more than 1 active tblptr byte
  2145   00185E  0E10               	movlw	high __smallconst
  2146   001860  6EF7               	movwf	tblptrh,c
  2147   001862                     	endif
  2148   001862                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2149   001862  6AF8               	clrf	tblptru,c
  2150   001864                     	endif
  2151   001864                     	if	0	;tblptru may be non-zero
  2152   001864                     	endif
  2153   001864  0008               	tblrd		*
  2154   001866  50F5               	movf	tablat,w,c
  2155   001868  0A75               	xorlw	117
  2156   00186A  A4D8               	btfss	status,2,c
  2157   00186C  EF3A  F00C         	goto	u5521
  2158   001870  EF3C  F00C         	goto	u5520
  2159   001874                     u5521:
  2160   001874  EFAE  F00C         	goto	l6362
  2161   001878                     u5520:
  2162   001878                     
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2165   001878  5013               	movf	vfpfcnvrt@ap^0,w,c
  2166   00187A  6ED9               	movwf	fsr2l,c
  2167   00187C  6ADA               	clrf	fsr2h,c
  2168   00187E  0E02               	movlw	2
  2169   001880  26DF               	addwf	indf2,f,c
  2170   001882  5CDF               	subwf	indf2,w,c
  2171   001884  6ED9               	movwf	fsr2l,c
  2172   001886  6ADA               	clrf	fsr2h,c
  2173   001888  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  2174   00188C  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  2175   001890                     
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2178   001890  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2179   001892  6ED9               	movwf	fsr2l,c
  2180   001894  6ADA               	clrf	fsr2h,c
  2181   001896  2819               	incf	vfpfcnvrt@cp^0,w,c
  2182   001898  6EDF               	movwf	indf2,c
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2185   00189A  EFA1  F00C         	goto	l6360
  2186   00189E                     l6342:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2190   00189E  0E20               	movlw	32
  2191   0018A0  6E1A               	movwf	vfpfcnvrt@c^0,c
  2192   0018A2                     l6344:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2195   0018A2  061A               	decf	vfpfcnvrt@c^0,f,c
  2196   0018A4  0E00               	movlw	low _dbuf
  2197   0018A6  241A               	addwf	vfpfcnvrt@c^0,w,c
  2198   0018A8  6ED9               	movwf	fsr2l,c
  2199   0018AA  6ADA               	clrf	fsr2h,c
  2200   0018AC  0E01               	movlw	high _dbuf
  2201   0018AE  22DA               	addwfc	fsr2h,f,c
  2202   0018B0  C015  F009         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2203   0018B4  C016  F00A         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2204   0018B8  0E00               	movlw	0
  2205   0018BA  6E0C               	movwf	(___lwmod@divisor+1)^0,c
  2206   0018BC  0E0A               	movlw	10
  2207   0018BE  6E0B               	movwf	___lwmod@divisor^0,c
  2208   0018C0  EC46  F012         	call	___lwmod	;wreg free
  2209   0018C4  5009               	movf	?___lwmod^0,w,c
  2210   0018C6  0F30               	addlw	48
  2211   0018C8  6EDF               	movwf	indf2,c
  2212   0018CA                     
  2213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2214   0018CA  C015  F009         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2215   0018CE  C016  F00A         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2216   0018D2  0E00               	movlw	0
  2217   0018D4  6E0C               	movwf	(___lwdiv@divisor+1)^0,c
  2218   0018D6  0E0A               	movlw	10
  2219   0018D8  6E0B               	movwf	___lwdiv@divisor^0,c
  2220   0018DA  EC00  F011         	call	___lwdiv	;wreg free
  2221   0018DE  C009  F015         	movff	?___lwdiv,vfpfcnvrt@convarg
  2222   0018E2  C00A  F016         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2223   0018E6                     
  2224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2225   0018E6  5015               	movf	vfpfcnvrt@convarg^0,w,c
  2226   0018E8  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2227   0018EA  B4D8               	btfsc	status,2,c
  2228   0018EC  EF7A  F00C         	goto	u5531
  2229   0018F0  EF7C  F00C         	goto	u5530
  2230   0018F4                     u5531:
  2231   0018F4  EF96  F00C         	goto	l6356
  2232   0018F8                     u5530:
  2233   0018F8  501A               	movf	vfpfcnvrt@c^0,w,c
  2234   0018FA  A4D8               	btfss	status,2,c
  2235   0018FC  EF82  F00C         	goto	u5541
  2236   001900  EF84  F00C         	goto	u5540
  2237   001904                     u5541:
  2238   001904  EF51  F00C         	goto	l6344
  2239   001908                     u5540:
  2240   001908  EF96  F00C         	goto	l6356
  2241   00190C                     l6352:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2244   00190C  0E00               	movlw	low _dbuf
  2245   00190E  241A               	addwf	vfpfcnvrt@c^0,w,c
  2246   001910  6ED9               	movwf	fsr2l,c
  2247   001912  6ADA               	clrf	fsr2h,c
  2248   001914  0E01               	movlw	high _dbuf
  2249   001916  22DA               	addwfc	fsr2h,f,c
  2250   001918  50DF               	movf	indf2,w,c
  2251   00191A  6E14               	movwf	??_vfpfcnvrt^0,c
  2252   00191C  5014               	movf	??_vfpfcnvrt^0,w,c
  2253   00191E  6E09               	movwf	fputc@c^0,c
  2254   001920  6A0A               	clrf	(fputc@c+1)^0,c
  2255   001922  C011  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2256   001926  EC57  F010         	call	_fputc	;wreg free
  2257   00192A  2A1A               	incf	vfpfcnvrt@c^0,f,c
  2258   00192C                     l6356:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2261   00192C  0E20               	movlw	32
  2262   00192E  181A               	xorwf	vfpfcnvrt@c^0,w,c
  2263   001930  A4D8               	btfss	status,2,c
  2264   001932  EF9D  F00C         	goto	u5551
  2265   001936  EF9F  F00C         	goto	u5550
  2266   00193A                     u5551:
  2267   00193A  EF86  F00C         	goto	l6352
  2268   00193E                     u5550:
  2269   00193E  EFC6  F00C         	goto	l1982
  2270   001942                     l6360:
  2271                           
  2272                           ; BSR set to: 0
  2273   001942  C019  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2274   001946                     	if	1	;There is more than 1 active tblptr byte
  2275   001946  0E10               	movlw	high __smallconst
  2276   001948  6EF7               	movwf	tblptrh,c
  2277   00194A                     	endif
  2278   00194A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2279   00194A  6AF8               	clrf	tblptru,c
  2280   00194C                     	endif
  2281   00194C                     	if	0	;tblptru may be non-zero
  2282   00194C                     	endif
  2283   00194C  0008               	tblrd		*
  2284   00194E  50F5               	movf	tablat,w,c
  2285                           
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 1, Range of values is 117 to 117
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            4     3 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292   001950  0A75               	xorlw	117	; case 117
  2293   001952  B4D8               	btfsc	status,2,c
  2294   001954  EF4F  F00C         	goto	l6342
  2295   001958  EFAE  F00C         	goto	l6362
  2296   00195C                     l6362:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2299   00195C  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2300   00195E  6ED9               	movwf	fsr2l,c
  2301   001960  6ADA               	clrf	fsr2h,c
  2302   001962  2ADF               	incf	indf2,f,c
  2303   001964  EFC6  F00C         	goto	l1982
  2304   001968                     l6366:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2307   001968  5012               	movf	vfpfcnvrt@fmt^0,w,c
  2308   00196A  6ED9               	movwf	fsr2l,c
  2309   00196C  6ADA               	clrf	fsr2h,c
  2310   00196E  CFDF FFF6          	movff	indf2,tblptrl
  2311   001972                     	if	1	;There is more than 1 active tblptr byte
  2312   001972  0E10               	movlw	high __smallconst
  2313   001974  6EF7               	movwf	tblptrh,c
  2314   001976                     	endif
  2315   001976                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2316   001976  6AF8               	clrf	tblptru,c
  2317   001978                     	endif
  2318   001978                     	if	0	;tblptru may be non-zero
  2319   001978                     	endif
  2320   001978  0008               	tblrd		*
  2321   00197A  50F5               	movf	tablat,w,c
  2322   00197C  6E09               	movwf	fputc@c^0,c
  2323   00197E  6A0A               	clrf	(fputc@c+1)^0,c
  2324   001980  C011  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2325   001984  EC57  F010         	call	_fputc	;wreg free
  2326   001988  EFAE  F00C         	goto	l6362
  2327   00198C                     l1982:
  2328   00198C  0012               	return		;funcret
  2329   00198E                     __end_of_vfpfcnvrt:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _fputc *****************
  2333 ;; Defined at:
  2334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  c               2    8[COMRAM] int 
  2337 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2338 ;;		 -> sprintf@f(12), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2    8[COMRAM] int 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;Total ram usage:        8 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 5
  2357 ;; This function calls:
  2358 ;;		_putch
  2359 ;; This function is called by:
  2360 ;;		_vfpfcnvrt
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text10
  2365   0020AE                     __ptext10:
  2366                           	callstack 0
  2367   0020AE                     _fputc:
  2368                           	callstack 21
  2369   0020AE  500B               	movf	fputc@fp^0,w,c
  2370   0020B0  B4D8               	btfsc	status,2,c
  2371   0020B2  EF5D  F010         	goto	u5471
  2372   0020B6  EF5F  F010         	goto	u5470
  2373   0020BA                     u5471:
  2374   0020BA  EF67  F010         	goto	l6316
  2375   0020BE                     u5470:
  2376   0020BE  500B               	movf	fputc@fp^0,w,c
  2377   0020C0  A4D8               	btfss	status,2,c
  2378   0020C2  EF65  F010         	goto	u5481
  2379   0020C6  EF67  F010         	goto	u5480
  2380   0020CA                     u5481:
  2381   0020CA  EF6C  F010         	goto	l6318
  2382   0020CE                     u5480:
  2383   0020CE                     l6316:
  2384   0020CE  5009               	movf	fputc@c^0,w,c
  2385   0020D0  ECC4  F014         	call	_putch
  2386   0020D4  EFAB  F010         	goto	l2001
  2387   0020D8                     l6318:
  2388   0020D8  500B               	movf	fputc@fp^0,w,c
  2389   0020DA  6ED9               	movwf	fsr2l,c
  2390   0020DC  6ADA               	clrf	fsr2h,c
  2391   0020DE  0E0A               	movlw	10
  2392   0020E0  26D9               	addwf	fsr2l,f,c
  2393   0020E2  50DE               	movf	postinc2,w,c
  2394   0020E4  10DE               	iorwf	postinc2,w,c
  2395   0020E6  B4D8               	btfsc	status,2,c
  2396   0020E8  EF78  F010         	goto	u5491
  2397   0020EC  EF7A  F010         	goto	u5490
  2398   0020F0                     u5491:
  2399   0020F0  EF93  F010         	goto	l6322
  2400   0020F4                     u5490:
  2401   0020F4  500B               	movf	fputc@fp^0,w,c
  2402   0020F6  6ED9               	movwf	fsr2l,c
  2403   0020F8  6ADA               	clrf	fsr2h,c
  2404   0020FA  0E0A               	movlw	10
  2405   0020FC  26D9               	addwf	fsr2l,f,c
  2406   0020FE  500B               	movf	fputc@fp^0,w,c
  2407   002100  6EE1               	movwf	fsr1l,c
  2408   002102  6AE2               	clrf	fsr1h,c
  2409   002104  0E03               	movlw	3
  2410   002106  26E1               	addwf	fsr1l,f,c
  2411   002108  50DE               	movf	postinc2,w,c
  2412   00210A  5CE6               	subwf	postinc1,w,c
  2413   00210C  50E6               	movf	postinc1,w,c
  2414   00210E  0A80               	xorlw	128
  2415   002110  6E10               	movwf	(??_fputc+4)^0,c
  2416   002112  50DE               	movf	postinc2,w,c
  2417   002114  0A80               	xorlw	128
  2418   002116  5810               	subwfb	(??_fputc+4)^0,w,c
  2419   002118  B0D8               	btfsc	status,0,c
  2420   00211A  EF91  F010         	goto	u5501
  2421   00211E  EF93  F010         	goto	u5500
  2422   002122                     u5501:
  2423   002122  EFAB  F010         	goto	l2001
  2424   002126                     u5500:
  2425   002126                     l6322:
  2426   002126  500B               	movf	fputc@fp^0,w,c
  2427   002128  6ED9               	movwf	fsr2l,c
  2428   00212A  6ADA               	clrf	fsr2h,c
  2429   00212C  0E03               	movlw	3
  2430   00212E  26D9               	addwf	fsr2l,f,c
  2431   002130  50DF               	movf	indf2,w,c
  2432   002132  6E0C               	movwf	??_fputc^0,c
  2433   002134  500B               	movf	fputc@fp^0,w,c
  2434   002136  6ED9               	movwf	fsr2l,c
  2435   002138  6ADA               	clrf	fsr2h,c
  2436   00213A  50DF               	movf	indf2,w,c
  2437   00213C  240C               	addwf	??_fputc^0,w,c
  2438   00213E  6ED9               	movwf	fsr2l,c
  2439   002140  6ADA               	clrf	fsr2h,c
  2440   002142  C009  FFDF         	movff	fputc@c,indf2
  2441   002146  500B               	movf	fputc@fp^0,w,c
  2442   002148  6ED9               	movwf	fsr2l,c
  2443   00214A  6ADA               	clrf	fsr2h,c
  2444   00214C  0E03               	movlw	3
  2445   00214E  26D9               	addwf	fsr2l,f,c
  2446   002150  2ADE               	incf	postinc2,f,c
  2447   002152  0E00               	movlw	0
  2448   002154  22DD               	addwfc	postdec2,f,c
  2449   002156                     l2001:
  2450   002156  0012               	return		;funcret
  2451   002158                     __end_of_fputc:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _putch *****************
  2455 ;; Defined at:
  2456 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  c               1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  c               1    0[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 4
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_fputc
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485   002988                     __ptext11:
  2486                           	callstack 0
  2487   002988                     _putch:
  2488                           	callstack 21
  2489   002988  0012               	return		;funcret
  2490   00298A                     __end_of_putch:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function ___lwmod *****************
  2494 ;; Defined at:
  2495 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  dividend        2    8[COMRAM] unsigned int 
  2498 ;;  divisor         2   10[COMRAM] unsigned int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  counter         1   12[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  2    8[COMRAM] unsigned int 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        5 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 4
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_vfpfcnvrt
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text12
  2525   00248C                     __ptext12:
  2526                           	callstack 0
  2527   00248C                     ___lwmod:
  2528                           	callstack 22
  2529   00248C  500B               	movf	___lwmod@divisor^0,w,c
  2530   00248E  100C               	iorwf	(___lwmod@divisor+1)^0,w,c
  2531   002490  B4D8               	btfsc	status,2,c
  2532   002492  EF4D  F012         	goto	u5441
  2533   002496  EF4F  F012         	goto	u5440
  2534   00249A                     u5441:
  2535   00249A  EF73  F012         	goto	l1762
  2536   00249E                     u5440:
  2537   00249E  0E01               	movlw	1
  2538   0024A0  6E0D               	movwf	___lwmod@counter^0,c
  2539   0024A2  EF57  F012         	goto	l6302
  2540   0024A6                     l6300:
  2541   0024A6  90D8               	bcf	status,0,c
  2542   0024A8  360B               	rlcf	___lwmod@divisor^0,f,c
  2543   0024AA  360C               	rlcf	(___lwmod@divisor+1)^0,f,c
  2544   0024AC  2A0D               	incf	___lwmod@counter^0,f,c
  2545   0024AE                     l6302:
  2546   0024AE  AE0C               	btfss	(___lwmod@divisor+1)^0,7,c
  2547   0024B0  EF5C  F012         	goto	u5451
  2548   0024B4  EF5E  F012         	goto	u5450
  2549   0024B8                     u5451:
  2550   0024B8  EF53  F012         	goto	l6300
  2551   0024BC                     u5450:
  2552   0024BC                     l6304:
  2553   0024BC  500B               	movf	___lwmod@divisor^0,w,c
  2554   0024BE  5C09               	subwf	___lwmod@dividend^0,w,c
  2555   0024C0  500C               	movf	(___lwmod@divisor+1)^0,w,c
  2556   0024C2  580A               	subwfb	(___lwmod@dividend+1)^0,w,c
  2557   0024C4  A0D8               	btfss	status,0,c
  2558   0024C6  EF67  F012         	goto	u5461
  2559   0024CA  EF69  F012         	goto	u5460
  2560   0024CE                     u5461:
  2561   0024CE  EF6D  F012         	goto	l6308
  2562   0024D2                     u5460:
  2563   0024D2  500B               	movf	___lwmod@divisor^0,w,c
  2564   0024D4  5E09               	subwf	___lwmod@dividend^0,f,c
  2565   0024D6  500C               	movf	(___lwmod@divisor+1)^0,w,c
  2566   0024D8  5A0A               	subwfb	(___lwmod@dividend+1)^0,f,c
  2567   0024DA                     l6308:
  2568   0024DA  90D8               	bcf	status,0,c
  2569   0024DC  320C               	rrcf	(___lwmod@divisor+1)^0,f,c
  2570   0024DE  320B               	rrcf	___lwmod@divisor^0,f,c
  2571   0024E0  2E0D               	decfsz	___lwmod@counter^0,f,c
  2572   0024E2  EF5E  F012         	goto	l6304
  2573   0024E6                     l1762:
  2574   0024E6  C009  F009         	movff	___lwmod@dividend,?___lwmod
  2575   0024EA  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  2576   0024EE  0012               	return		;funcret
  2577   0024F0                     __end_of___lwmod:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function ___lwdiv *****************
  2581 ;; Defined at:
  2582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  dividend        2    8[COMRAM] unsigned int 
  2585 ;;  divisor         2   10[COMRAM] unsigned int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  quotient        2   13[COMRAM] unsigned int 
  2588 ;;  counter         1   12[COMRAM] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2    8[COMRAM] unsigned int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 4
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;;		_vfpfcnvrt
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text13
  2614   002200                     __ptext13:
  2615                           	callstack 0
  2616   002200                     ___lwdiv:
  2617                           	callstack 22
  2618   002200  0E00               	movlw	0
  2619   002202  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  2620   002204  0E00               	movlw	0
  2621   002206  6E0E               	movwf	___lwdiv@quotient^0,c
  2622   002208  500B               	movf	___lwdiv@divisor^0,w,c
  2623   00220A  100C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2624   00220C  B4D8               	btfsc	status,2,c
  2625   00220E  EF0B  F011         	goto	u5411
  2626   002212  EF0D  F011         	goto	u5410
  2627   002216                     u5411:
  2628   002216  EF35  F011         	goto	l1752
  2629   00221A                     u5410:
  2630   00221A  0E01               	movlw	1
  2631   00221C  6E0D               	movwf	___lwdiv@counter^0,c
  2632   00221E  EF15  F011         	goto	l6282
  2633   002222                     l6280:
  2634   002222  90D8               	bcf	status,0,c
  2635   002224  360B               	rlcf	___lwdiv@divisor^0,f,c
  2636   002226  360C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2637   002228  2A0D               	incf	___lwdiv@counter^0,f,c
  2638   00222A                     l6282:
  2639   00222A  AE0C               	btfss	(___lwdiv@divisor+1)^0,7,c
  2640   00222C  EF1A  F011         	goto	u5421
  2641   002230  EF1C  F011         	goto	u5420
  2642   002234                     u5421:
  2643   002234  EF11  F011         	goto	l6280
  2644   002238                     u5420:
  2645   002238                     l6284:
  2646   002238  90D8               	bcf	status,0,c
  2647   00223A  360E               	rlcf	___lwdiv@quotient^0,f,c
  2648   00223C  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2649   00223E  500B               	movf	___lwdiv@divisor^0,w,c
  2650   002240  5C09               	subwf	___lwdiv@dividend^0,w,c
  2651   002242  500C               	movf	(___lwdiv@divisor+1)^0,w,c
  2652   002244  580A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2653   002246  A0D8               	btfss	status,0,c
  2654   002248  EF28  F011         	goto	u5431
  2655   00224C  EF2A  F011         	goto	u5430
  2656   002250                     u5431:
  2657   002250  EF2F  F011         	goto	l6292
  2658   002254                     u5430:
  2659   002254  500B               	movf	___lwdiv@divisor^0,w,c
  2660   002256  5E09               	subwf	___lwdiv@dividend^0,f,c
  2661   002258  500C               	movf	(___lwdiv@divisor+1)^0,w,c
  2662   00225A  5A0A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2663   00225C  800E               	bsf	___lwdiv@quotient^0,0,c
  2664   00225E                     l6292:
  2665   00225E  90D8               	bcf	status,0,c
  2666   002260  320C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2667   002262  320B               	rrcf	___lwdiv@divisor^0,f,c
  2668   002264  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2669   002266  EF1C  F011         	goto	l6284
  2670   00226A                     l1752:
  2671   00226A  C00E  F009         	movff	___lwdiv@quotient,?___lwdiv
  2672   00226E  C00F  F00A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2673   002272  0012               	return		;funcret
  2674   002274                     __end_of___lwdiv:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _application_initialize *****************
  2678 ;; Defined at:
  2679 ;;		line 55 in file "application.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 9
  2700 ;; This function calls:
  2701 ;;		_ADC_init
  2702 ;;		_ecu_layer_initialize
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text14
  2709   00295A                     __ptext14:
  2710                           	callstack 0
  2711   00295A                     _application_initialize:
  2712                           	callstack 21
  2713   00295A                     
  2714                           ;application.c: 56:     ecu_layer_initialize();
  2715   00295A  EC1D  F014         	call	_ecu_layer_initialize	;wreg free
  2716   00295E                     
  2717                           ;application.c: 57:     ret = ADC_init(&adc_1);
  2718   00295E  0ECB               	movlw	low _adc_1
  2719   002960  6E0C               	movwf	ADC_init@adc^0,c
  2720   002962  EC01  F010         	call	_ADC_init	;wreg free
  2721   002966  6E4D               	movwf	_ret^0,c
  2722   002968  0012               	return		;funcret
  2723   00296A                     __end_of_application_initialize:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _ecu_layer_initialize *****************
  2727 ;; Defined at:
  2728 ;;		line 181 in file "ECU_Layer/ecu_layer_init.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 8
  2749 ;; This function calls:
  2750 ;;		_keypad_initialization
  2751 ;;		_lcd_4bit_initialize
  2752 ;;		_led_initialization
  2753 ;; This function is called by:
  2754 ;;		_application_initialize
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text15
  2759   00283A                     __ptext15:
  2760                           	callstack 0
  2761   00283A                     _ecu_layer_initialize:
  2762                           	callstack 21
  2763   00283A                     
  2764                           ;ECU_Layer/ecu_layer_init.c: 182:     led_initialization(&led1);
  2765   00283A  0E55               	movlw	low _led1
  2766   00283C  6E14               	movwf	led_initialization@led^0,c
  2767   00283E  ECE1  F011         	call	_led_initialization	;wreg free
  2768                           
  2769                           ;ECU_Layer/ecu_layer_init.c: 183:     led_initialization(&led2);
  2770   002842  0E54               	movlw	low _led2
  2771   002844  6E14               	movwf	led_initialization@led^0,c
  2772   002846  ECE1  F011         	call	_led_initialization	;wreg free
  2773                           
  2774                           ;ECU_Layer/ecu_layer_init.c: 184:     led_initialization(&led3);
  2775   00284A  0E53               	movlw	low _led3
  2776   00284C  6E14               	movwf	led_initialization@led^0,c
  2777   00284E  ECE1  F011         	call	_led_initialization	;wreg free
  2778                           
  2779                           ;ECU_Layer/ecu_layer_init.c: 185:     led_initialization(&led4);
  2780   002852  0E52               	movlw	low _led4
  2781   002854  6E14               	movwf	led_initialization@led^0,c
  2782   002856  ECE1  F011         	call	_led_initialization	;wreg free
  2783                           
  2784                           ;ECU_Layer/ecu_layer_init.c: 186:     keypad_initialization(&keypad);
  2785   00285A  0ED3               	movlw	low _keypad
  2786   00285C  6E14               	movwf	keypad_initialization@keypad^0,c
  2787   00285E  ECA8  F012         	call	_keypad_initialization	;wreg free
  2788                           
  2789                           ;ECU_Layer/ecu_layer_init.c: 187:     lcd_4bit_initialize(&lcd_1);
  2790   002862  0EDB               	movlw	low _lcd_1
  2791   002864  6E17               	movwf	lcd_4bit_initialize@lcd^0,c
  2792   002866  ECD5  F00E         	call	_lcd_4bit_initialize	;wreg free
  2793   00286A  0012               	return		;funcret
  2794   00286C                     __end_of_ecu_layer_initialize:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _led_initialization *****************
  2798 ;; Defined at:
  2799 ;;		line 17 in file "ECU_Layer/LED/ecu_led.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  led             1   19[COMRAM] PTR const struct .
  2802 ;;		 -> led4(1), led3(1), led2(1), led1(1), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  pin_obj         1   21[COMRAM] struct .
  2805 ;;  ret             1    0        unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      unsigned char 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        3 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 6
  2822 ;; This function calls:
  2823 ;;		_gpio_pin_initialization
  2824 ;; This function is called by:
  2825 ;;		_ecu_layer_initialize
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text16
  2830   0023C2                     __ptext16:
  2831                           	callstack 0
  2832   0023C2                     _led_initialization:
  2833                           	callstack 22
  2834   0023C2                     
  2835                           ;ECU_Layer/LED/ecu_led.c: 19:     if (((void*)0) == led) {
  2836   0023C2  5014               	movf	led_initialization@led^0,w,c
  2837   0023C4  A4D8               	btfss	status,2,c
  2838   0023C6  EFE7  F011         	goto	u3251
  2839   0023CA  EFE9  F011         	goto	u3250
  2840   0023CE                     u3251:
  2841   0023CE  EFEB  F011         	goto	l272
  2842   0023D2                     u3250:
  2843   0023D2                     
  2844                           ;ECU_Layer/LED/ecu_led.c: 21:     } else {
  2845   0023D2  EF13  F012         	goto	l276
  2846   0023D6                     l272:
  2847                           
  2848                           ;ECU_Layer/LED/ecu_led.c: 22:         pin_config_t pin_obj = {
  2849   0023D6  C046  F016         	movff	led_initialization@F3310,led_initialization@pin_obj
  2850   0023DA  5014               	movf	led_initialization@led^0,w,c
  2851   0023DC  6ED9               	movwf	fsr2l,c
  2852   0023DE  6ADA               	clrf	fsr2h,c
  2853   0023E0  50DF               	movf	223,w,c
  2854   0023E2  0B0F               	andlw	15
  2855   0023E4  6E15               	movwf	??_led_initialization^0,c
  2856   0023E6  5016               	movf	led_initialization@pin_obj^0,w,c
  2857   0023E8  1815               	xorwf	??_led_initialization^0,w,c
  2858   0023EA  0BF8               	andlw	-8
  2859   0023EC  1815               	xorwf	??_led_initialization^0,w,c
  2860   0023EE  6E16               	movwf	led_initialization@pin_obj^0,c
  2861   0023F0  5014               	movf	led_initialization@led^0,w,c
  2862   0023F2  6ED9               	movwf	fsr2l,c
  2863   0023F4  6ADA               	clrf	fsr2h,c
  2864   0023F6  38DF               	swapf	223,w,c
  2865   0023F8  0B07               	andlw	7
  2866   0023FA  6E15               	movwf	??_led_initialization^0,c
  2867   0023FC  4615               	rlncf	??_led_initialization^0,f,c
  2868   0023FE  4615               	rlncf	??_led_initialization^0,f,c
  2869   002400  4615               	rlncf	??_led_initialization^0,f,c
  2870   002402  5016               	movf	led_initialization@pin_obj^0,w,c
  2871   002404  1815               	xorwf	??_led_initialization^0,w,c
  2872   002406  0BC7               	andlw	-57
  2873   002408  1815               	xorwf	??_led_initialization^0,w,c
  2874   00240A  6E16               	movwf	led_initialization@pin_obj^0,c
  2875   00240C  9C16               	bcf	led_initialization@pin_obj^0,6,c
  2876   00240E  5014               	movf	led_initialization@led^0,w,c
  2877   002410  6ED9               	movwf	fsr2l,c
  2878   002412  6ADA               	clrf	fsr2h,c
  2879   002414  AEDF               	btfss	indf2,7,c
  2880   002416  D002               	bra	u3265
  2881   002418  8E16               	bsf	led_initialization@pin_obj^0,7,c
  2882   00241A  D001               	bra	u3267
  2883   00241C                     u3265:
  2884   00241C  9E16               	bcf	led_initialization@pin_obj^0,7,c
  2885   00241E                     u3267:
  2886   00241E                     
  2887                           ;ECU_Layer/LED/ecu_led.c: 28:         gpio_pin_initialization(&pin_obj);
  2888   00241E  0E16               	movlw	low led_initialization@pin_obj
  2889   002420  6E11               	movwf	gpio_pin_initialization@pin_config^0,c
  2890   002422  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  2891   002426                     l276:
  2892   002426  0012               	return		;funcret
  2893   002428                     __end_of_led_initialization:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _lcd_4bit_initialize *****************
  2897 ;; Defined at:
  2898 ;;		line 21 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  lcd             1   22[COMRAM] PTR const struct .
  2901 ;;		 -> lcd_1(6), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  l_counter       1   26[COMRAM] unsigned char 
  2904 ;;  ret             1   25[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      unsigned char 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        5 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 7
  2921 ;; This function calls:
  2922 ;;		_gpio_pin_initialization
  2923 ;;		_lcd_4bit_send_command
  2924 ;; This function is called by:
  2925 ;;		_ecu_layer_initialize
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text17
  2930   001DAA                     __ptext17:
  2931                           	callstack 0
  2932   001DAA                     _lcd_4bit_initialize:
  2933                           	callstack 21
  2934   001DAA                     
  2935                           ;ECU_Layer/chr_lcd/chr_lcd.c: 23:     uint8 l_counter = 0;
  2936   001DAA  0E00               	movlw	0
  2937   001DAC  6E1B               	movwf	lcd_4bit_initialize@l_counter^0,c
  2938                           
  2939                           ;ECU_Layer/chr_lcd/chr_lcd.c: 24:     if (((void*)0) == lcd) {
  2940   001DAE  5017               	movf	lcd_4bit_initialize@lcd^0,w,c
  2941   001DB0  A4D8               	btfss	status,2,c
  2942   001DB2  EFDD  F00E         	goto	u3201
  2943   001DB6  EFDF  F00E         	goto	u3200
  2944   001DBA                     u3201:
  2945   001DBA  EFE1  F00E         	goto	l4518
  2946   001DBE                     u3200:
  2947   001DBE                     
  2948                           ;ECU_Layer/chr_lcd/chr_lcd.c: 26:     } else {
  2949   001DBE  EF4C  F00F         	goto	l66
  2950   001DC2                     l4518:
  2951                           
  2952                           ;ECU_Layer/chr_lcd/chr_lcd.c: 27:         ret = gpio_pin_initialization(&(lcd->lcd_rs));
  2953   001DC2  C017  F011         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialization@pin_config
  2954   001DC6  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  2955   001DCA  6E1A               	movwf	lcd_4bit_initialize@ret^0,c
  2956                           
  2957                           ;ECU_Layer/chr_lcd/chr_lcd.c: 28:         ret = gpio_pin_initialization(&(lcd->lcd_en));
  2958   001DCC  2817               	incf	lcd_4bit_initialize@lcd^0,w,c
  2959   001DCE  6E11               	movwf	gpio_pin_initialization@pin_config^0,c
  2960   001DD0  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  2961   001DD4  6E1A               	movwf	lcd_4bit_initialize@ret^0,c
  2962   001DD6                     
  2963                           ;ECU_Layer/chr_lcd/chr_lcd.c: 29:         for (l_counter = 0; l_counter < 4; l_counter++
      +                          ) {
  2964   001DD6  0E00               	movlw	0
  2965   001DD8  6E1B               	movwf	lcd_4bit_initialize@l_counter^0,c
  2966   001DDA                     l4526:
  2967   001DDA  5017               	movf	lcd_4bit_initialize@lcd^0,w,c
  2968   001DDC  241B               	addwf	lcd_4bit_initialize@l_counter^0,w,c
  2969   001DDE  0F02               	addlw	2
  2970   001DE0  6E11               	movwf	gpio_pin_initialization@pin_config^0,c
  2971   001DE2  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  2972   001DE6                     
  2973                           ;ECU_Layer/chr_lcd/chr_lcd.c: 31:         }
  2974   001DE6  2A1B               	incf	lcd_4bit_initialize@l_counter^0,f,c
  2975   001DE8  0E03               	movlw	3
  2976   001DEA  641B               	cpfsgt	lcd_4bit_initialize@l_counter^0,c
  2977   001DEC  EFFA  F00E         	goto	u3211
  2978   001DF0  EFFC  F00E         	goto	u3210
  2979   001DF4                     u3211:
  2980   001DF4  EFED  F00E         	goto	l4526
  2981   001DF8                     u3210:
  2982   001DF8                     
  2983                           ;ECU_Layer/chr_lcd/chr_lcd.c: 32:         _delay((unsigned long)((20)*(8000000UL/4000.0)
      +                          ));
  2984   001DF8  0E34               	movlw	52
  2985   001DFA  6E18               	movwf	??_lcd_4bit_initialize^0,c
  2986   001DFC  0EF2               	movlw	242
  2987   001DFE                     u5807:
  2988   001DFE  2EE8               	decfsz	wreg,f,c
  2989   001E00  D7FE               	bra	u5807
  2990   001E02  2E18               	decfsz	??_lcd_4bit_initialize^0,f,c
  2991   001E04  D7FC               	bra	u5807
  2992   001E06  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2993   001E0A  0E38               	movlw	56
  2994   001E0C  6E15               	movwf	lcd_4bit_send_command@command^0,c
  2995   001E0E  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  2996   001E12                     
  2997                           ;ECU_Layer/chr_lcd/chr_lcd.c: 34:         _delay((unsigned long)((5)*(8000000UL/4000.0))
      +                          );
  2998   001E12  0E0D               	movlw	13
  2999   001E14  6E18               	movwf	??_lcd_4bit_initialize^0,c
  3000   001E16  0EFC               	movlw	252
  3001   001E18                     u5817:
  3002   001E18  2EE8               	decfsz	wreg,f,c
  3003   001E1A  D7FE               	bra	u5817
  3004   001E1C  2E18               	decfsz	??_lcd_4bit_initialize^0,f,c
  3005   001E1E  D7FC               	bra	u5817
  3006   001E20  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3007   001E24  0E38               	movlw	56
  3008   001E26  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3009   001E28  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3010   001E2C                     
  3011                           ;ECU_Layer/chr_lcd/chr_lcd.c: 36:         _delay((unsigned long)((150)*(8000000UL/4000.0
      +                          )));
  3012   001E2C  0E02               	movlw	2
  3013   001E2E  6E19               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3014   001E30  0E86               	movlw	134
  3015   001E32  6E18               	movwf	??_lcd_4bit_initialize^0,c
  3016   001E34  0E99               	movlw	153
  3017   001E36                     u5827:
  3018   001E36  2EE8               	decfsz	wreg,f,c
  3019   001E38  D7FE               	bra	u5827
  3020   001E3A  2E18               	decfsz	??_lcd_4bit_initialize^0,f,c
  3021   001E3C  D7FC               	bra	u5827
  3022   001E3E  2E19               	decfsz	(??_lcd_4bit_initialize+1)^0,f,c
  3023   001E40  D7FA               	bra	u5827
  3024   001E42  0000               	nop	
  3025   001E44  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3026   001E48  0E38               	movlw	56
  3027   001E4A  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3028   001E4C  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3029   001E50  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3030   001E54  0E01               	movlw	1
  3031   001E56  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3032   001E58  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3033   001E5C  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3034   001E60  0E02               	movlw	2
  3035   001E62  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3036   001E64  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3037   001E68  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3038   001E6C  0E06               	movlw	6
  3039   001E6E  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3040   001E70  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3041   001E74  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3042   001E78  0E0C               	movlw	12
  3043   001E7A  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3044   001E7C  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3045   001E80  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3046   001E84  0E28               	movlw	40
  3047   001E86  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3048   001E88  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3049   001E8C  C017  F014         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3050   001E90  0E80               	movlw	128
  3051   001E92  6E15               	movwf	lcd_4bit_send_command@command^0,c
  3052   001E94  EC78  F012         	call	_lcd_4bit_send_command	;wreg free
  3053   001E98                     l66:
  3054   001E98  0012               	return		;funcret
  3055   001E9A                     __end_of_lcd_4bit_initialize:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _lcd_4bit_send_command *****************
  3059 ;; Defined at:
  3060 ;;		line 48 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  lcd             1   19[COMRAM] PTR const struct .
  3063 ;;		 -> lcd_1(6), 
  3064 ;;  command         1   20[COMRAM] unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  ret             1   21[COMRAM] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      unsigned char 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;Total ram usage:        3 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 6
  3083 ;; This function calls:
  3084 ;;		_gpio_pin_write_logic
  3085 ;;		_lcd_4bit_send_enable_signal
  3086 ;;		_lcd_send_4bit
  3087 ;; This function is called by:
  3088 ;;		_lcd_4bit_initialize
  3089 ;;		_lcd_4bit_set_cusrsor
  3090 ;;		_main
  3091 ;;		_lcd_4bit_send_custom_char
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text18
  3096   0024F0                     __ptext18:
  3097                           	callstack 0
  3098   0024F0                     _lcd_4bit_send_command:
  3099                           	callstack 24
  3100   0024F0                     
  3101                           ;ECU_Layer/chr_lcd/chr_lcd.c: 50:     if (((void*)0) == lcd) {
  3102   0024F0  5014               	movf	lcd_4bit_send_command@lcd^0,w,c
  3103   0024F2  A4D8               	btfss	status,2,c
  3104   0024F4  EF7E  F012         	goto	u3141
  3105   0024F8  EF80  F012         	goto	u3140
  3106   0024FC                     u3141:
  3107   0024FC  EF84  F012         	goto	l4460
  3108   002500                     u3140:
  3109   002500                     
  3110                           ;ECU_Layer/chr_lcd/chr_lcd.c: 51:         ret = (STD_ReturnType)0x00;
  3111   002500  0E00               	movlw	0
  3112   002502  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3113                           
  3114                           ;ECU_Layer/chr_lcd/chr_lcd.c: 52:     } else {
  3115   002504  EFA6  F012         	goto	l4464
  3116   002508                     l4460:
  3117                           
  3118                           ;ECU_Layer/chr_lcd/chr_lcd.c: 53:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPI
      +                          O_LOW);
  3119   002508  C014  F009         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  3120   00250C  0E00               	movlw	0
  3121   00250E  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3122   002510  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3123   002514  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3124                           
  3125                           ;ECU_Layer/chr_lcd/chr_lcd.c: 54:         ret = lcd_send_4bit(lcd, command >> 4);
  3126   002516  C014  F011         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  3127   00251A  3815               	swapf	lcd_4bit_send_command@command^0,w,c
  3128   00251C  0B0F               	andlw	15
  3129   00251E  6E12               	movwf	lcd_send_4bit@_command^0,c
  3130   002520  ECAA  F011         	call	_lcd_send_4bit	;wreg free
  3131   002524  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3132                           
  3133                           ;ECU_Layer/chr_lcd/chr_lcd.c: 55:         ret = lcd_4bit_send_enable_signal(lcd);
  3134   002526  C014  F011         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3135   00252A  ECB0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3136   00252E  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3137                           
  3138                           ;ECU_Layer/chr_lcd/chr_lcd.c: 56:         ret = lcd_send_4bit(lcd, command);
  3139   002530  C014  F011         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  3140   002534  C015  F012         	movff	lcd_4bit_send_command@command,lcd_send_4bit@_command
  3141   002538  ECAA  F011         	call	_lcd_send_4bit	;wreg free
  3142   00253C  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3143                           
  3144                           ;ECU_Layer/chr_lcd/chr_lcd.c: 57:         ret = lcd_4bit_send_enable_signal(lcd);
  3145   00253E  C014  F011         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3146   002542  ECB0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3147   002546  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3148   002548                     
  3149                           ;ECU_Layer/chr_lcd/chr_lcd.c: 58:         ret = (STD_ReturnType)0x01;
  3150   002548  0E01               	movlw	1
  3151   00254A  6E16               	movwf	lcd_4bit_send_command@ret^0,c
  3152   00254C                     l4464:
  3153                           
  3154                           ;ECU_Layer/chr_lcd/chr_lcd.c: 60:     return ret;
  3155   00254C  5016               	movf	lcd_4bit_send_command@ret^0,w,c
  3156   00254E  0012               	return		;funcret
  3157   002550                     __end_of_lcd_4bit_send_command:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _lcd_send_4bit *****************
  3161 ;; Defined at:
  3162 ;;		line 301 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  lcd             1   16[COMRAM] PTR const struct .
  3165 ;;		 -> lcd_1(6), 
  3166 ;;  _command        1   17[COMRAM] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  ret             1   18[COMRAM] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      unsigned char 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        3 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 5
  3185 ;; This function calls:
  3186 ;;		_gpio_pin_write_logic
  3187 ;; This function is called by:
  3188 ;;		_lcd_4bit_send_command
  3189 ;;		_lcd_4bit_send_char_data
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text19
  3194   002354                     __ptext19:
  3195                           	callstack 0
  3196   002354                     _lcd_send_4bit:
  3197                           	callstack 24
  3198   002354                     
  3199                           ;ECU_Layer/chr_lcd/chr_lcd.c: 303:     if (((void*)0) == lcd) {
  3200   002354  5011               	movf	lcd_send_4bit@lcd^0,w,c
  3201   002356  A4D8               	btfss	status,2,c
  3202   002358  EFB0  F011         	goto	u3001
  3203   00235C  EFB2  F011         	goto	u3000
  3204   002360                     u3001:
  3205   002360  EFB6  F011         	goto	l4372
  3206   002364                     u3000:
  3207   002364                     
  3208                           ;ECU_Layer/chr_lcd/chr_lcd.c: 304:         ret = (STD_ReturnType)0x00;
  3209   002364  0E00               	movlw	0
  3210   002366  6E13               	movwf	lcd_send_4bit@ret^0,c
  3211                           
  3212                           ;ECU_Layer/chr_lcd/chr_lcd.c: 305:     } else {
  3213   002368  EFDF  F011         	goto	l4374
  3214   00236C                     l4372:
  3215                           
  3216                           ;ECU_Layer/chr_lcd/chr_lcd.c: 306:         ret = gpio_pin_write_logic(&(lcd->lcd_data[0]
      +                          ), (_command >> 0) & (uint8) 0x01);
  3217   00236C  5011               	movf	lcd_send_4bit@lcd^0,w,c
  3218   00236E  0F02               	addlw	2
  3219   002370  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3220   002372  5012               	movf	lcd_send_4bit@_command^0,w,c
  3221   002374  0B01               	andlw	1
  3222   002376  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3223   002378  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3224   00237C  6E13               	movwf	lcd_send_4bit@ret^0,c
  3225                           
  3226                           ;ECU_Layer/chr_lcd/chr_lcd.c: 307:         ret = gpio_pin_write_logic(&(lcd->lcd_data[1]
      +                          ), (_command >> 1) & (uint8) 0x01);
  3227   00237E  5011               	movf	lcd_send_4bit@lcd^0,w,c
  3228   002380  0F03               	addlw	3
  3229   002382  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3230   002384  90D8               	bcf	status,0,c
  3231   002386  3012               	rrcf	lcd_send_4bit@_command^0,w,c
  3232   002388  0B01               	andlw	1
  3233   00238A  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3234   00238C  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3235   002390  6E13               	movwf	lcd_send_4bit@ret^0,c
  3236                           
  3237                           ;ECU_Layer/chr_lcd/chr_lcd.c: 308:         ret = gpio_pin_write_logic(&(lcd->lcd_data[2]
      +                          ), (_command >> 2) & (uint8) 0x01);
  3238   002392  5011               	movf	lcd_send_4bit@lcd^0,w,c
  3239   002394  0F04               	addlw	4
  3240   002396  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3241   002398  4012               	rrncf	lcd_send_4bit@_command^0,w,c
  3242   00239A  42E8               	rrncf	wreg,f,c
  3243   00239C  0B3F               	andlw	63
  3244   00239E  0B01               	andlw	1
  3245   0023A0  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3246   0023A2  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3247   0023A6  6E13               	movwf	lcd_send_4bit@ret^0,c
  3248                           
  3249                           ;ECU_Layer/chr_lcd/chr_lcd.c: 309:         ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_command >> 3) & (uint8) 0x01);
  3250   0023A8  5011               	movf	lcd_send_4bit@lcd^0,w,c
  3251   0023AA  0F05               	addlw	5
  3252   0023AC  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3253   0023AE  3812               	swapf	lcd_send_4bit@_command^0,w,c
  3254   0023B0  46E8               	rlncf	wreg,f,c
  3255   0023B2  0B1F               	andlw	31
  3256   0023B4  0B01               	andlw	1
  3257   0023B6  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3258   0023B8  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3259   0023BC  6E13               	movwf	lcd_send_4bit@ret^0,c
  3260   0023BE                     l4374:
  3261                           
  3262                           ;ECU_Layer/chr_lcd/chr_lcd.c: 311:     return ret;
  3263   0023BE  5013               	movf	lcd_send_4bit@ret^0,w,c
  3264   0023C0  0012               	return		;funcret
  3265   0023C2                     __end_of_lcd_send_4bit:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3269 ;; Defined at:
  3270 ;;		line 314 in file "ECU_Layer/chr_lcd/chr_lcd.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  lcd             1   16[COMRAM] PTR const struct .
  3273 ;;		 -> lcd_1(6), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  ret             1   17[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 5
  3292 ;; This function calls:
  3293 ;;		_gpio_pin_write_logic
  3294 ;; This function is called by:
  3295 ;;		_lcd_4bit_send_command
  3296 ;;		_lcd_4bit_send_char_data
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text20
  3301   002760                     __ptext20:
  3302                           	callstack 0
  3303   002760                     _lcd_4bit_send_enable_signal:
  3304                           	callstack 24
  3305   002760                     
  3306                           ;ECU_Layer/chr_lcd/chr_lcd.c: 316:     if (((void*)0) == lcd) {
  3307   002760  5011               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3308   002762  A4D8               	btfss	status,2,c
  3309   002764  EFB6  F013         	goto	u3011
  3310   002768  EFB8  F013         	goto	u3010
  3311   00276C                     u3011:
  3312   00276C  EFBC  F013         	goto	l4382
  3313   002770                     u3010:
  3314   002770                     
  3315                           ;ECU_Layer/chr_lcd/chr_lcd.c: 317:         ret = (STD_ReturnType)0x00;
  3316   002770  0E00               	movlw	0
  3317   002772  6E12               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3318                           
  3319                           ;ECU_Layer/chr_lcd/chr_lcd.c: 318:     } else {
  3320   002774  EFCD  F013         	goto	l4388
  3321   002778                     l4382:
  3322   002778  2811               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3323   00277A  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3324   00277C  0E01               	movlw	1
  3325   00277E  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3326   002780  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3327   002784                     
  3328                           ;ECU_Layer/chr_lcd/chr_lcd.c: 320:         _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  3329   002784  0E03               	movlw	3
  3330   002786                     u5837:
  3331   002786  2EE8               	decfsz	wreg,f,c
  3332   002788  D7FE               	bra	u5837
  3333   00278A  0000               	nop	
  3334   00278C                     
  3335                           ;ECU_Layer/chr_lcd/chr_lcd.c: 321:         ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  3336   00278C  2811               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3337   00278E  6E09               	movwf	gpio_pin_write_logic@pin_config^0,c
  3338   002790  0E00               	movlw	0
  3339   002792  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3340   002794  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3341   002798  6E12               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3342   00279A                     l4388:
  3343                           
  3344                           ;ECU_Layer/chr_lcd/chr_lcd.c: 323:     return ret;
  3345   00279A  5012               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3346   00279C  0012               	return		;funcret
  3347   00279E                     __end_of_lcd_4bit_send_enable_signal:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _keypad_initialization *****************
  3351 ;; Defined at:
  3352 ;;		line 17 in file "ECU_Layer/keypad/ecu_keypad.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  keypad          1   19[COMRAM] PTR const struct .
  3355 ;;		 -> keypad(8), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  columns_coun    1   21[COMRAM] unsigned char 
  3358 ;;  rows_counter    1   20[COMRAM] unsigned char 
  3359 ;;  ret             1    0        unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 6
  3376 ;; This function calls:
  3377 ;;		_gpio_pin_initialization
  3378 ;; This function is called by:
  3379 ;;		_ecu_layer_initialize
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text21
  3384   002550                     __ptext21:
  3385                           	callstack 0
  3386   002550                     _keypad_initialization:
  3387                           	callstack 22
  3388   002550                     
  3389                           ;ECU_Layer/keypad/ecu_keypad.c: 19:     uint8 rows_counter = 0, columns_counter = 0;
  3390   002550  0E00               	movlw	0
  3391   002552  6E15               	movwf	keypad_initialization@rows_counter^0,c
  3392   002554  0E00               	movlw	0
  3393   002556  6E16               	movwf	keypad_initialization@columns_counter^0,c
  3394                           
  3395                           ;ECU_Layer/keypad/ecu_keypad.c: 20:     if (((void*)0) == keypad) {
  3396   002558  5014               	movf	keypad_initialization@keypad^0,w,c
  3397   00255A  A4D8               	btfss	status,2,c
  3398   00255C  EFB2  F012         	goto	u3221
  3399   002560  EFB4  F012         	goto	u3220
  3400   002564                     u3221:
  3401   002564  EFB6  F012         	goto	l4560
  3402   002568                     u3220:
  3403   002568                     
  3404                           ;ECU_Layer/keypad/ecu_keypad.c: 22:     } else {
  3405   002568  EFD7  F012         	goto	l248
  3406   00256C                     l4560:
  3407                           
  3408                           ;ECU_Layer/keypad/ecu_keypad.c: 23:         for (rows_counter = 0; rows_counter < 4; row
      +                          s_counter++) {
  3409   00256C  0E00               	movlw	0
  3410   00256E  6E15               	movwf	keypad_initialization@rows_counter^0,c
  3411   002570                     l4566:
  3412                           
  3413                           ;ECU_Layer/keypad/ecu_keypad.c: 24:             gpio_pin_initialization(&(keypad->keypad
      +                          _rows_pin[rows_counter]));
  3414   002570  5014               	movf	keypad_initialization@keypad^0,w,c
  3415   002572  2415               	addwf	keypad_initialization@rows_counter^0,w,c
  3416   002574  6E11               	movwf	gpio_pin_initialization@pin_config^0,c
  3417   002576  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  3418   00257A                     
  3419                           ;ECU_Layer/keypad/ecu_keypad.c: 25:         }
  3420   00257A  2A15               	incf	keypad_initialization@rows_counter^0,f,c
  3421   00257C  0E03               	movlw	3
  3422   00257E  6415               	cpfsgt	keypad_initialization@rows_counter^0,c
  3423   002580  EFC4  F012         	goto	u3231
  3424   002584  EFC6  F012         	goto	u3230
  3425   002588                     u3231:
  3426   002588  EFB8  F012         	goto	l4566
  3427   00258C                     u3230:
  3428   00258C                     
  3429                           ;ECU_Layer/keypad/ecu_keypad.c: 26:         for (columns_counter = 0; columns_counter < 
      +                          4; columns_counter++) {
  3430   00258C  0E00               	movlw	0
  3431   00258E  6E16               	movwf	keypad_initialization@columns_counter^0,c
  3432   002590                     l4578:
  3433                           
  3434                           ;ECU_Layer/keypad/ecu_keypad.c: 27:             gpio_pin_initialization(&(keypad->keypad
      +                          _columns_pins[columns_counter]));
  3435   002590  5014               	movf	keypad_initialization@keypad^0,w,c
  3436   002592  2416               	addwf	keypad_initialization@columns_counter^0,w,c
  3437   002594  0F04               	addlw	4
  3438   002596  6E11               	movwf	gpio_pin_initialization@pin_config^0,c
  3439   002598  ECD8  F012         	call	_gpio_pin_initialization	;wreg free
  3440   00259C                     
  3441                           ;ECU_Layer/keypad/ecu_keypad.c: 28:         }
  3442   00259C  2A16               	incf	keypad_initialization@columns_counter^0,f,c
  3443   00259E  0E03               	movlw	3
  3444   0025A0  6416               	cpfsgt	keypad_initialization@columns_counter^0,c
  3445   0025A2  EFD5  F012         	goto	u3241
  3446   0025A6  EFD7  F012         	goto	u3240
  3447   0025AA                     u3241:
  3448   0025AA  EFC8  F012         	goto	l4578
  3449   0025AE                     u3240:
  3450   0025AE                     l248:
  3451   0025AE  0012               	return		;funcret
  3452   0025B0                     __end_of_keypad_initialization:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _gpio_pin_initialization *****************
  3456 ;; Defined at:
  3457 ;;		line 132 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  pin_config      1   16[COMRAM] PTR const struct .
  3460 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad$keypad_columns_pins(4), keypad$keypad_rows_pin(4), 
  3461 ;;		 -> keypad(8), relay_initialization@pin_obj(1), led_initialization@pin_obj(1), 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  ret             1   18[COMRAM] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      unsigned char 
  3466 ;; Registers used:
  3467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;Total ram usage:        3 bytes
  3478 ;; Hardware stack levels used: 1
  3479 ;; Hardware stack levels required when called: 5
  3480 ;; This function calls:
  3481 ;;		_gpio_pin_direction_initializion
  3482 ;;		_gpio_pin_write_logic
  3483 ;; This function is called by:
  3484 ;;		_lcd_4bit_initialize
  3485 ;;		_keypad_initialization
  3486 ;;		_led_initialization
  3487 ;;		_seven_segment_initialize
  3488 ;;		_lcd_8bit_initialize
  3489 ;;		_motor_initialization
  3490 ;;		_relay_initialization
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text22
  3495   0025B0                     __ptext22:
  3496                           	callstack 0
  3497   0025B0                     _gpio_pin_initialization:
  3498                           	callstack 22
  3499   0025B0                     
  3500                           ;MCAL_Layer/GPIO/hal_gpio.c: 133:     STD_ReturnType ret = (STD_ReturnType)0x01;
  3501   0025B0  0E01               	movlw	1
  3502   0025B2  6E13               	movwf	gpio_pin_initialization@ret^0,c
  3503                           
  3504                           ;MCAL_Layer/GPIO/hal_gpio.c: 134:     if ((((void*)0) == pin_config) || (pin_config->pin
      +                           > 8 - 1)) {
  3505   0025B4  5011               	movf	gpio_pin_initialization@pin_config^0,w,c
  3506   0025B6  B4D8               	btfsc	status,2,c
  3507   0025B8  EFE0  F012         	goto	u3121
  3508   0025BC  EFE2  F012         	goto	u3120
  3509   0025C0                     u3121:
  3510   0025C0  EFF2  F012         	goto	l4448
  3511   0025C4                     u3120:
  3512   0025C4  5011               	movf	gpio_pin_initialization@pin_config^0,w,c
  3513   0025C6  6ED9               	movwf	fsr2l,c
  3514   0025C8  6ADA               	clrf	fsr2h,c
  3515   0025CA  30DF               	rrcf	223,w,c
  3516   0025CC  32E8               	rrcf	wreg,f,c
  3517   0025CE  32E8               	rrcf	wreg,f,c
  3518   0025D0  0B07               	andlw	7
  3519   0025D2  6E12               	movwf	??_gpio_pin_initialization^0,c
  3520   0025D4  0E07               	movlw	7
  3521   0025D6  6412               	cpfsgt	??_gpio_pin_initialization^0,c
  3522   0025D8  EFF0  F012         	goto	u3131
  3523   0025DC  EFF2  F012         	goto	u3130
  3524   0025E0                     u3131:
  3525   0025E0  EFF6  F012         	goto	l4450
  3526   0025E4                     u3130:
  3527   0025E4                     l4448:
  3528                           
  3529                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:         ret = (STD_ReturnType)0x00;
  3530   0025E4  0E00               	movlw	0
  3531   0025E6  6E13               	movwf	gpio_pin_initialization@ret^0,c
  3532                           
  3533                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     } else {
  3534   0025E8  EF05  F013         	goto	l4452
  3535   0025EC                     l4450:
  3536                           
  3537                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         gpio_pin_direction_initializion(pin_config);
  3538   0025EC  C011  F009         	movff	gpio_pin_initialization@pin_config,gpio_pin_direction_initializion@pin_config
  3539   0025F0  ECC7  F00C         	call	_gpio_pin_direction_initializion	;wreg free
  3540                           
  3541                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:         gpio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
  3542   0025F4  C011  F009         	movff	gpio_pin_initialization@pin_config,gpio_pin_write_logic@pin_config
  3543   0025F8  5011               	movf	gpio_pin_initialization@pin_config^0,w,c
  3544   0025FA  6ED9               	movwf	fsr2l,c
  3545   0025FC  6ADA               	clrf	fsr2h,c
  3546   0025FE  0E00               	movlw	0
  3547   002600  BEDF               	btfsc	indf2,7,c
  3548   002602  0E01               	movlw	1
  3549   002604  6E0A               	movwf	gpio_pin_write_logic@logic^0,c
  3550   002606  EC50  F00D         	call	_gpio_pin_write_logic	;wreg free
  3551   00260A                     l4452:
  3552                           
  3553                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:     return ret;
  3554   00260A  5013               	movf	gpio_pin_initialization@ret^0,w,c
  3555   00260C  0012               	return		;funcret
  3556   00260E                     __end_of_gpio_pin_initialization:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _gpio_pin_write_logic *****************
  3560 ;; Defined at:
  3561 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  pin_config      1    8[COMRAM] PTR const struct .
  3564 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad$keypad_columns_pins(4), keypad$keypad_rows_pin(4), 
  3565 ;;		 -> keypad(8), motor2$motor(2), motor2(2), motor1$motor(2), 
  3566 ;;		 -> motor1(2), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialization@pin_obj(1), 
  3567 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialization@pin_obj(1), 
  3568 ;;  logic           1    9[COMRAM] enum E3230
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  ret             1   15[COMRAM] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      unsigned char 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;Total ram usage:        8 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 4
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_lcd_4bit_send_command
  3591 ;;		_lcd_4bit_send_char_data
  3592 ;;		_lcd_send_4bit
  3593 ;;		_lcd_4bit_send_enable_signal
  3594 ;;		_motor_move_forward
  3595 ;;		_motor_move_backward
  3596 ;;		_gpio_pin_initialization
  3597 ;;		_seven_segment_write_number
  3598 ;;		_lcd_8bit_send_command
  3599 ;;		_lcd_8bit_send_char_data
  3600 ;;		_lcd_8bit_send_enable_signal
  3601 ;;		_keypad_get_value
  3602 ;;		_led_turn_on
  3603 ;;		_led_turn_off
  3604 ;;		_motor_stop
  3605 ;;		_relay_turn_on
  3606 ;;		_relay_turn_off
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text23
  3611   001AA0                     __ptext23:
  3612                           	callstack 0
  3613   001AA0                     _gpio_pin_write_logic:
  3614                           	callstack 25
  3615   001AA0                     
  3616                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     STD_ReturnType ret = (STD_ReturnType)0x01;
  3617   001AA0  0E01               	movlw	1
  3618   001AA2  6E10               	movwf	gpio_pin_write_logic@ret^0,c
  3619                           
  3620                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  3621   001AA4  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3622   001AA6  B4D8               	btfsc	status,2,c
  3623   001AA8  EF58  F00D         	goto	u2911
  3624   001AAC  EF5A  F00D         	goto	u2910
  3625   001AB0                     u2911:
  3626   001AB0  EF6A  F00D         	goto	l4332
  3627   001AB4                     u2910:
  3628   001AB4  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3629   001AB6  6ED9               	movwf	fsr2l,c
  3630   001AB8  6ADA               	clrf	fsr2h,c
  3631   001ABA  30DF               	rrcf	223,w,c
  3632   001ABC  32E8               	rrcf	wreg,f,c
  3633   001ABE  32E8               	rrcf	wreg,f,c
  3634   001AC0  0B07               	andlw	7
  3635   001AC2  6E0B               	movwf	??_gpio_pin_write_logic^0,c
  3636   001AC4  0E07               	movlw	7
  3637   001AC6  640B               	cpfsgt	??_gpio_pin_write_logic^0,c
  3638   001AC8  EF68  F00D         	goto	u2921
  3639   001ACC  EF6A  F00D         	goto	u2920
  3640   001AD0                     u2921:
  3641   001AD0  EFC1  F00D         	goto	l4340
  3642   001AD4                     u2920:
  3643   001AD4                     l4332:
  3644                           
  3645                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (STD_ReturnType)0x00;
  3646   001AD4  0E00               	movlw	0
  3647   001AD6  6E10               	movwf	gpio_pin_write_logic@ret^0,c
  3648                           
  3649                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     } else {
  3650   001AD8  EFD6  F00D         	goto	l4342
  3651   001ADC                     l4334:
  3652                           
  3653                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:                 (*lat_register[pin_config->port] &= ~(1
      +                           << pin_config->pin));
  3654   001ADC  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3655   001ADE  6ED9               	movwf	fsr2l,c
  3656   001AE0  6ADA               	clrf	fsr2h,c
  3657   001AE2  30DF               	rrcf	223,w,c
  3658   001AE4  32E8               	rrcf	wreg,f,c
  3659   001AE6  32E8               	rrcf	wreg,f,c
  3660   001AE8  0B07               	andlw	7
  3661   001AEA  6E0B               	movwf	??_gpio_pin_write_logic^0,c
  3662   001AEC  0E01               	movlw	1
  3663   001AEE  6E0C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3664   001AF0  2A0B               	incf	??_gpio_pin_write_logic^0,f,c
  3665   001AF2  EF7D  F00D         	goto	u2934
  3666   001AF6                     u2935:
  3667   001AF6  90D8               	bcf	status,0,c
  3668   001AF8  360C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3669   001AFA                     u2934:
  3670   001AFA  2E0B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3671   001AFC  EF7B  F00D         	goto	u2935
  3672   001B00  500C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3673   001B02  0AFF               	xorlw	255
  3674   001B04  6E0D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3675   001B06  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3676   001B08  6ED9               	movwf	fsr2l,c
  3677   001B0A  6ADA               	clrf	fsr2h,c
  3678   001B0C  50DF               	movf	223,w,c
  3679   001B0E  0B07               	andlw	7
  3680   001B10  0D02               	mullw	2
  3681   001B12  50F3               	movf	243,w,c
  3682   001B14  0FB7               	addlw	low _lat_register
  3683   001B16  6ED9               	movwf	fsr2l,c
  3684   001B18  6ADA               	clrf	fsr2h,c
  3685   001B1A  CFDE F00E          	movff	postinc2,??_gpio_pin_write_logic+3
  3686   001B1E  CFDD F00F          	movff	postdec2,??_gpio_pin_write_logic+4
  3687   001B22  C00E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3688   001B26  C00F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3689   001B2A  500D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3690   001B2C  16DF               	andwf	indf2,f,c
  3691                           
  3692                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 break;
  3693   001B2E  EFD6  F00D         	goto	l4342
  3694   001B32                     l4336:
  3695                           
  3696                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 (*lat_register[pin_config->port] |= (1 
      +                          << pin_config->pin));
  3697   001B32  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3698   001B34  6ED9               	movwf	fsr2l,c
  3699   001B36  6ADA               	clrf	fsr2h,c
  3700   001B38  30DF               	rrcf	223,w,c
  3701   001B3A  32E8               	rrcf	wreg,f,c
  3702   001B3C  32E8               	rrcf	wreg,f,c
  3703   001B3E  0B07               	andlw	7
  3704   001B40  6E0B               	movwf	??_gpio_pin_write_logic^0,c
  3705   001B42  0E01               	movlw	1
  3706   001B44  6E0C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3707   001B46  2A0B               	incf	??_gpio_pin_write_logic^0,f,c
  3708   001B48  EFA8  F00D         	goto	u2944
  3709   001B4C                     u2945:
  3710   001B4C  90D8               	bcf	status,0,c
  3711   001B4E  360C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3712   001B50                     u2944:
  3713   001B50  2E0B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3714   001B52  EFA6  F00D         	goto	u2945
  3715   001B56  5009               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3716   001B58  6ED9               	movwf	fsr2l,c
  3717   001B5A  6ADA               	clrf	fsr2h,c
  3718   001B5C  50DF               	movf	223,w,c
  3719   001B5E  0B07               	andlw	7
  3720   001B60  0D02               	mullw	2
  3721   001B62  50F3               	movf	243,w,c
  3722   001B64  0FB7               	addlw	low _lat_register
  3723   001B66  6ED9               	movwf	fsr2l,c
  3724   001B68  6ADA               	clrf	fsr2h,c
  3725   001B6A  CFDE F00D          	movff	postinc2,??_gpio_pin_write_logic+2
  3726   001B6E  CFDD F00E          	movff	postdec2,??_gpio_pin_write_logic+3
  3727   001B72  C00D  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3728   001B76  C00E  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3729   001B7A  500C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3730   001B7C  12DF               	iorwf	indf2,f,c
  3731                           
  3732                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 break;
  3733   001B7E  EFD6  F00D         	goto	l4342
  3734   001B82                     l4340:
  3735   001B82  500A               	movf	gpio_pin_write_logic@logic^0,w,c
  3736   001B84  6E0B               	movwf	??_gpio_pin_write_logic^0,c
  3737   001B86  6A0C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3738                           
  3739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 1, Range of values is 0 to 0
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte            4     3 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746   001B88  500C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3747   001B8A  0A00               	xorlw	0	; case 0
  3748   001B8C  B4D8               	btfsc	status,2,c
  3749   001B8E  EFCB  F00D         	goto	l6604
  3750   001B92  EF6A  F00D         	goto	l4332
  3751   001B96                     l6604:
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 2, Range of values is 0 to 1
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            7     4 (average)
  3758                           ;	Chosen strategy is simple_byte
  3759   001B96  500B               	movf	??_gpio_pin_write_logic^0,w,c
  3760   001B98  0A00               	xorlw	0	; case 0
  3761   001B9A  B4D8               	btfsc	status,2,c
  3762   001B9C  EF6E  F00D         	goto	l4334
  3763   001BA0  0A01               	xorlw	1	; case 1
  3764   001BA2  B4D8               	btfsc	status,2,c
  3765   001BA4  EF99  F00D         	goto	l4336
  3766   001BA8  EF6A  F00D         	goto	l4332
  3767   001BAC                     l4342:
  3768                           
  3769                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:     return ret;
  3770   001BAC  5010               	movf	gpio_pin_write_logic@ret^0,w,c
  3771   001BAE  0012               	return		;funcret
  3772   001BB0                     __end_of_gpio_pin_write_logic:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _gpio_pin_direction_initializion *****************
  3776 ;; Defined at:
  3777 ;;		line 23 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  pin_config      1    8[COMRAM] PTR const struct .
  3780 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad$keypad_columns_pins(4), keypad$keypad_rows_pin(4), 
  3781 ;;		 -> keypad(8), relay_initialization@pin_obj(1), led_initialization@pin_obj(1), 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  ret             1   14[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        7 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_gpio_pin_initialization
  3804 ;;		_button_initialization
  3805 ;;		_interrupt_intx_pin_init
  3806 ;;		_interrupt_RBx_pin_init
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text24
  3811   00198E                     __ptext24:
  3812                           	callstack 0
  3813   00198E                     _gpio_pin_direction_initializion:
  3814                           	callstack 22
  3815   00198E                     
  3816                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     STD_ReturnType ret = (STD_ReturnType)0x01;
  3817   00198E  0E01               	movlw	1
  3818   001990  6E0F               	movwf	gpio_pin_direction_initializion@ret^0,c
  3819                           
  3820                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  3821   001992  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3822   001994  B4D8               	btfsc	status,2,c
  3823   001996  EFCF  F00C         	goto	u2951
  3824   00199A  EFD1  F00C         	goto	u2950
  3825   00199E                     u2951:
  3826   00199E  EFE1  F00C         	goto	l4354
  3827   0019A2                     u2950:
  3828   0019A2  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3829   0019A4  6ED9               	movwf	fsr2l,c
  3830   0019A6  6ADA               	clrf	fsr2h,c
  3831   0019A8  30DF               	rrcf	223,w,c
  3832   0019AA  32E8               	rrcf	wreg,f,c
  3833   0019AC  32E8               	rrcf	wreg,f,c
  3834   0019AE  0B07               	andlw	7
  3835   0019B0  6E0A               	movwf	??_gpio_pin_direction_initializion^0,c
  3836   0019B2  0E07               	movlw	7
  3837   0019B4  640A               	cpfsgt	??_gpio_pin_direction_initializion^0,c
  3838   0019B6  EFDF  F00C         	goto	u2961
  3839   0019BA  EFE1  F00C         	goto	u2960
  3840   0019BE                     u2961:
  3841   0019BE  EF38  F00D         	goto	l4362
  3842   0019C2                     u2960:
  3843   0019C2                     l4354:
  3844                           
  3845                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (STD_ReturnType)0x00;
  3846   0019C2  0E00               	movlw	0
  3847   0019C4  6E0F               	movwf	gpio_pin_direction_initializion@ret^0,c
  3848                           
  3849                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     } else {
  3850   0019C6  EF4E  F00D         	goto	l4364
  3851   0019CA                     l4356:
  3852                           
  3853                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 (*tris_register[pin_config->port] &= ~(
      +                          1 << pin_config->pin));
  3854   0019CA  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3855   0019CC  6ED9               	movwf	fsr2l,c
  3856   0019CE  6ADA               	clrf	fsr2h,c
  3857   0019D0  30DF               	rrcf	223,w,c
  3858   0019D2  32E8               	rrcf	wreg,f,c
  3859   0019D4  32E8               	rrcf	wreg,f,c
  3860   0019D6  0B07               	andlw	7
  3861   0019D8  6E0A               	movwf	??_gpio_pin_direction_initializion^0,c
  3862   0019DA  0E01               	movlw	1
  3863   0019DC  6E0B               	movwf	(??_gpio_pin_direction_initializion+1)^0,c
  3864   0019DE  2A0A               	incf	??_gpio_pin_direction_initializion^0,f,c
  3865   0019E0  EFF4  F00C         	goto	u2974
  3866   0019E4                     u2975:
  3867   0019E4  90D8               	bcf	status,0,c
  3868   0019E6  360B               	rlcf	(??_gpio_pin_direction_initializion+1)^0,f,c
  3869   0019E8                     u2974:
  3870   0019E8  2E0A               	decfsz	??_gpio_pin_direction_initializion^0,f,c
  3871   0019EA  EFF2  F00C         	goto	u2975
  3872   0019EE  500B               	movf	(??_gpio_pin_direction_initializion+1)^0,w,c
  3873   0019F0  0AFF               	xorlw	255
  3874   0019F2  6E0C               	movwf	(??_gpio_pin_direction_initializion+2)^0,c
  3875   0019F4  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3876   0019F6  6ED9               	movwf	fsr2l,c
  3877   0019F8  6ADA               	clrf	fsr2h,c
  3878   0019FA  50DF               	movf	223,w,c
  3879   0019FC  0B07               	andlw	7
  3880   0019FE  0D02               	mullw	2
  3881   001A00  50F3               	movf	243,w,c
  3882   001A02  0FC1               	addlw	low _tris_register
  3883   001A04  6ED9               	movwf	fsr2l,c
  3884   001A06  6ADA               	clrf	fsr2h,c
  3885   001A08  CFDE F00D          	movff	postinc2,??_gpio_pin_direction_initializion+3
  3886   001A0C  CFDD F00E          	movff	postdec2,??_gpio_pin_direction_initializion+4
  3887   001A10  C00D  FFD9         	movff	??_gpio_pin_direction_initializion+3,fsr2l
  3888   001A14  C00E  FFDA         	movff	??_gpio_pin_direction_initializion+4,fsr2h
  3889   001A18  500C               	movf	(??_gpio_pin_direction_initializion+2)^0,w,c
  3890   001A1A  16DF               	andwf	indf2,f,c
  3891                           
  3892                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 break;
  3893   001A1C  EF4E  F00D         	goto	l4364
  3894   001A20                     l4358:
  3895                           
  3896                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_register[pin_config->port] |= (1
      +                           << pin_config->pin));
  3897   001A20  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3898   001A22  6ED9               	movwf	fsr2l,c
  3899   001A24  6ADA               	clrf	fsr2h,c
  3900   001A26  30DF               	rrcf	223,w,c
  3901   001A28  32E8               	rrcf	wreg,f,c
  3902   001A2A  32E8               	rrcf	wreg,f,c
  3903   001A2C  0B07               	andlw	7
  3904   001A2E  6E0A               	movwf	??_gpio_pin_direction_initializion^0,c
  3905   001A30  0E01               	movlw	1
  3906   001A32  6E0B               	movwf	(??_gpio_pin_direction_initializion+1)^0,c
  3907   001A34  2A0A               	incf	??_gpio_pin_direction_initializion^0,f,c
  3908   001A36  EF1F  F00D         	goto	u2984
  3909   001A3A                     u2985:
  3910   001A3A  90D8               	bcf	status,0,c
  3911   001A3C  360B               	rlcf	(??_gpio_pin_direction_initializion+1)^0,f,c
  3912   001A3E                     u2984:
  3913   001A3E  2E0A               	decfsz	??_gpio_pin_direction_initializion^0,f,c
  3914   001A40  EF1D  F00D         	goto	u2985
  3915   001A44  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3916   001A46  6ED9               	movwf	fsr2l,c
  3917   001A48  6ADA               	clrf	fsr2h,c
  3918   001A4A  50DF               	movf	223,w,c
  3919   001A4C  0B07               	andlw	7
  3920   001A4E  0D02               	mullw	2
  3921   001A50  50F3               	movf	243,w,c
  3922   001A52  0FC1               	addlw	low _tris_register
  3923   001A54  6ED9               	movwf	fsr2l,c
  3924   001A56  6ADA               	clrf	fsr2h,c
  3925   001A58  CFDE F00C          	movff	postinc2,??_gpio_pin_direction_initializion+2
  3926   001A5C  CFDD F00D          	movff	postdec2,??_gpio_pin_direction_initializion+3
  3927   001A60  C00C  FFD9         	movff	??_gpio_pin_direction_initializion+2,fsr2l
  3928   001A64  C00D  FFDA         	movff	??_gpio_pin_direction_initializion+3,fsr2h
  3929   001A68  500B               	movf	(??_gpio_pin_direction_initializion+1)^0,w,c
  3930   001A6A  12DF               	iorwf	indf2,f,c
  3931                           
  3932                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  3933   001A6C  EF4E  F00D         	goto	l4364
  3934   001A70                     l4362:
  3935   001A70  5009               	movf	gpio_pin_direction_initializion@pin_config^0,w,c
  3936   001A72  6ED9               	movwf	fsr2l,c
  3937   001A74  6ADA               	clrf	fsr2h,c
  3938   001A76  BCDF               	btfsc	indf2,6,c
  3939   001A78  EF40  F00D         	goto	u2991
  3940   001A7C  EF43  F00D         	goto	u2990
  3941   001A80                     u2991:
  3942   001A80  0E01               	movlw	1
  3943   001A82  EF44  F00D         	goto	u2996
  3944   001A86                     u2990:
  3945   001A86  0E00               	movlw	0
  3946   001A88                     u2996:
  3947                           
  3948                           ; Switch size 1, requested type "simple"
  3949                           ; Number of cases is 2, Range of values is 0 to 1
  3950                           ; switch strategies available:
  3951                           ; Name         Instructions Cycles
  3952                           ; simple_byte            7     4 (average)
  3953                           ;	Chosen strategy is simple_byte
  3954   001A88  0A00               	xorlw	0	; case 0
  3955   001A8A  B4D8               	btfsc	status,2,c
  3956   001A8C  EFE5  F00C         	goto	l4356
  3957   001A90  0A01               	xorlw	1	; case 1
  3958   001A92  B4D8               	btfsc	status,2,c
  3959   001A94  EF10  F00D         	goto	l4358
  3960   001A98  EFE1  F00C         	goto	l4354
  3961   001A9C                     l4364:
  3962                           
  3963                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:     return ret;
  3964   001A9C  500F               	movf	gpio_pin_direction_initializion@ret^0,w,c
  3965   001A9E  0012               	return		;funcret
  3966   001AA0                     __end_of_gpio_pin_direction_initializion:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _ADC_init *****************
  3970 ;; Defined at:
  3971 ;;		line 19 in file "MCAL_Layer/ADC/hal_adc.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  adc             1   11[COMRAM] PTR const struct .
  3974 ;;		 -> adc_1(8), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  ret             1   13[COMRAM] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      unsigned char 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        3 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 5
  3993 ;; This function calls:
  3994 ;;		_adc_input_channel_port_configure
  3995 ;;		_select_result_format
  3996 ;;		_select_voltage_reference
  3997 ;; This function is called by:
  3998 ;;		_application_initialize
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text25
  4003   002002                     __ptext25:
  4004                           	callstack 0
  4005   002002                     _ADC_init:
  4006                           	callstack 24
  4007   002002                     
  4008                           ;MCAL_Layer/ADC/hal_adc.c: 21:     if (((void*)0) == adc) {
  4009   002002  500C               	movf	ADC_init@adc^0,w,c
  4010   002004  A4D8               	btfss	status,2,c
  4011   002006  EF07  F010         	goto	u3451
  4012   00200A  EF09  F010         	goto	u3450
  4013   00200E                     u3451:
  4014   00200E  EF0D  F010         	goto	l408
  4015   002012                     u3450:
  4016   002012                     
  4017                           ;MCAL_Layer/ADC/hal_adc.c: 22:         ret = (STD_ReturnType)0x00;
  4018   002012  0E00               	movlw	0
  4019   002014  6E0E               	movwf	ADC_init@ret^0,c
  4020                           
  4021                           ;MCAL_Layer/ADC/hal_adc.c: 23:     } else {
  4022   002016  EF55  F010         	goto	l4796
  4023   00201A                     l408:
  4024                           
  4025                           ;MCAL_Layer/ADC/hal_adc.c: 25:         (ADCON0bits.ADON = 0);
  4026   00201A  90C2               	bcf	194,0,c	;volatile
  4027   00201C                     
  4028                           ;MCAL_Layer/ADC/hal_adc.c: 27:         ADCON2bits.ACQT = adc->Aquisition_time;
  4029   00201C  500C               	movf	ADC_init@adc^0,w,c
  4030   00201E  6ED9               	movwf	fsr2l,c
  4031   002020  6ADA               	clrf	fsr2h,c
  4032   002022  0E03               	movlw	3
  4033   002024  26D9               	addwf	fsr2l,f,c
  4034   002026  50DF               	movf	indf2,w,c
  4035   002028  6E0D               	movwf	??_ADC_init^0,c
  4036   00202A  460D               	rlncf	??_ADC_init^0,f,c
  4037   00202C  460D               	rlncf	??_ADC_init^0,f,c
  4038   00202E  460D               	rlncf	??_ADC_init^0,f,c
  4039   002030  50C0               	movf	192,w,c	;volatile
  4040   002032  180D               	xorwf	??_ADC_init^0,w,c
  4041   002034  0BC7               	andlw	-57
  4042   002036  180D               	xorwf	??_ADC_init^0,w,c
  4043   002038  6EC0               	movwf	192,c	;volatile
  4044                           
  4045                           ;MCAL_Layer/ADC/hal_adc.c: 29:         ADCON2bits.ADCS = adc->Conversion_Clock;
  4046   00203A  500C               	movf	ADC_init@adc^0,w,c
  4047   00203C  6ED9               	movwf	fsr2l,c
  4048   00203E  6ADA               	clrf	fsr2h,c
  4049   002040  0E04               	movlw	4
  4050   002042  26D9               	addwf	fsr2l,f,c
  4051   002044  50DF               	movf	indf2,w,c
  4052   002046  6E0D               	movwf	??_ADC_init^0,c
  4053   002048  50C0               	movf	192,w,c	;volatile
  4054   00204A  180D               	xorwf	??_ADC_init^0,w,c
  4055   00204C  0BF8               	andlw	-8
  4056   00204E  180D               	xorwf	??_ADC_init^0,w,c
  4057   002050  6EC0               	movwf	192,c	;volatile
  4058                           
  4059                           ;MCAL_Layer/ADC/hal_adc.c: 31:         ADCON0bits.CHS = adc->Channel_Select;
  4060   002052  500C               	movf	ADC_init@adc^0,w,c
  4061   002054  6ED9               	movwf	fsr2l,c
  4062   002056  6ADA               	clrf	fsr2h,c
  4063   002058  0E05               	movlw	5
  4064   00205A  26D9               	addwf	fsr2l,f,c
  4065   00205C  50DF               	movf	indf2,w,c
  4066   00205E  6E0D               	movwf	??_ADC_init^0,c
  4067   002060  460D               	rlncf	??_ADC_init^0,f,c
  4068   002062  460D               	rlncf	??_ADC_init^0,f,c
  4069   002064  50C2               	movf	194,w,c	;volatile
  4070   002066  180D               	xorwf	??_ADC_init^0,w,c
  4071   002068  0BC3               	andlw	-61
  4072   00206A  180D               	xorwf	??_ADC_init^0,w,c
  4073   00206C  6EC2               	movwf	194,c	;volatile
  4074   00206E                     
  4075                           ;MCAL_Layer/ADC/hal_adc.c: 32:         adc_input_channel_port_configure(adc->Channel_Sel
      +                          ect);
  4076   00206E  500C               	movf	ADC_init@adc^0,w,c
  4077   002070  6ED9               	movwf	fsr2l,c
  4078   002072  6ADA               	clrf	fsr2h,c
  4079   002074  0E05               	movlw	5
  4080   002076  26D9               	addwf	fsr2l,f,c
  4081   002078  50DF               	movf	indf2,w,c
  4082   00207A  EC5C  F00E         	call	_adc_input_channel_port_configure
  4083   00207E                     
  4084                           ;MCAL_Layer/ADC/hal_adc.c: 35:         (PIE1bits.ADIE = 1);
  4085   00207E  8C9D               	bsf	157,6,c	;volatile
  4086   002080                     
  4087                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (PIR1bits.ADIF = 0);
  4088   002080  9C9E               	bcf	158,6,c	;volatile
  4089   002082                     
  4090                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (INTCONbits.GIE = 1);
  4091   002082  8EF2               	bsf	242,7,c	;volatile
  4092   002084                     
  4093                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (INTCONbits.PEIE = 1);
  4094   002084  8CF2               	bsf	242,6,c	;volatile
  4095   002086                     
  4096                           ;MCAL_Layer/ADC/hal_adc.c: 51:         ADC_Interrupt_Handler = adc->InterruptHandler;
  4097   002086  500C               	movf	ADC_init@adc^0,w,c
  4098   002088  6ED9               	movwf	fsr2l,c
  4099   00208A  6ADA               	clrf	fsr2h,c
  4100   00208C  CFDE F03A          	movff	postinc2,_ADC_Interrupt_Handler
  4101   002090  CFDD F03B          	movff	postdec2,_ADC_Interrupt_Handler+1
  4102   002094                     
  4103                           ;MCAL_Layer/ADC/hal_adc.c: 54:         select_result_format(adc);
  4104   002094  C00C  F009         	movff	ADC_init@adc,select_result_format@adc
  4105   002098  EC64  F013         	call	_select_result_format	;wreg free
  4106   00209C                     
  4107                           ;MCAL_Layer/ADC/hal_adc.c: 56:         select_voltage_reference(adc);
  4108   00209C  C00C  F009         	movff	ADC_init@adc,select_voltage_reference@adc
  4109   0020A0  EC07  F013         	call	_select_voltage_reference	;wreg free
  4110   0020A4                     
  4111                           ;MCAL_Layer/ADC/hal_adc.c: 58:         (ADCON0bits.ADON = 1);
  4112   0020A4  80C2               	bsf	194,0,c	;volatile
  4113   0020A6                     
  4114                           ;MCAL_Layer/ADC/hal_adc.c: 59:         ret = (STD_ReturnType)0x01;
  4115   0020A6  0E01               	movlw	1
  4116   0020A8  6E0E               	movwf	ADC_init@ret^0,c
  4117   0020AA                     l4796:
  4118                           
  4119                           ;MCAL_Layer/ADC/hal_adc.c: 61:     return ret;
  4120   0020AA  500E               	movf	ADC_init@ret^0,w,c
  4121   0020AC  0012               	return		;funcret
  4122   0020AE                     __end_of_ADC_init:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function _select_voltage_reference *****************
  4126 ;; Defined at:
  4127 ;;		line 238 in file "MCAL_Layer/ADC/hal_adc.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  adc             1    8[COMRAM] PTR const struct .
  4130 ;;		 -> adc_1(8), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  ret             1    0        unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4142 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;Total ram usage:        2 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 4
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_ADC_init
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text26
  4157   00260E                     __ptext26:
  4158                           	callstack 0
  4159   00260E                     _select_voltage_reference:
  4160                           	callstack 24
  4161   00260E                     
  4162                           ;MCAL_Layer/ADC/hal_adc.c: 240:     if (((void*)0) == adc) {
  4163   00260E  5009               	movf	select_voltage_reference@adc^0,w,c
  4164   002610  A4D8               	btfss	status,2,c
  4165   002612  EF0D  F013         	goto	u3301
  4166   002616  EF0F  F013         	goto	u3300
  4167   00261A                     u3301:
  4168   00261A  EF11  F013         	goto	l4650
  4169   00261E                     u3300:
  4170   00261E                     
  4171                           ;MCAL_Layer/ADC/hal_adc.c: 242:     } else {
  4172   00261E  EF35  F013         	goto	l500
  4173   002622                     l4650:
  4174                           
  4175                           ;MCAL_Layer/ADC/hal_adc.c: 243:         if (0x01U == adc->voltage_reference) {
  4176   002622  5009               	movf	select_voltage_reference@adc^0,w,c
  4177   002624  6ED9               	movwf	fsr2l,c
  4178   002626  6ADA               	clrf	fsr2h,c
  4179   002628  0E06               	movlw	6
  4180   00262A  26D9               	addwf	fsr2l,f,c
  4181   00262C  04DE               	decf	postinc2,w,c
  4182   00262E  A4D8               	btfss	status,2,c
  4183   002630  EF1C  F013         	goto	u3311
  4184   002634  EF1E  F013         	goto	u3310
  4185   002638                     u3311:
  4186   002638  EF22  F013         	goto	l4652
  4187   00263C                     u3310:
  4188   00263C  8AC1               	bsf	193,5,c	;volatile
  4189   00263E  88C1               	bsf	193,4,c	;volatile
  4190   002640  EF35  F013         	goto	l500
  4191   002644                     l4652:
  4192   002644  5009               	movf	select_voltage_reference@adc^0,w,c
  4193   002646  6ED9               	movwf	fsr2l,c
  4194   002648  6ADA               	clrf	fsr2h,c
  4195   00264A  0E06               	movlw	6
  4196   00264C  26D9               	addwf	fsr2l,f,c
  4197   00264E  50DF               	movf	indf2,w,c
  4198   002650  A4D8               	btfss	status,2,c
  4199   002652  EF2D  F013         	goto	u3321
  4200   002656  EF2F  F013         	goto	u3320
  4201   00265A                     u3321:
  4202   00265A  EF33  F013         	goto	l498
  4203   00265E                     u3320:
  4204   00265E  9AC1               	bcf	193,5,c	;volatile
  4205   002660  98C1               	bcf	193,4,c	;volatile
  4206   002662  EF35  F013         	goto	l500
  4207   002666                     l498:
  4208   002666  9AC1               	bcf	193,5,c	;volatile
  4209   002668  98C1               	bcf	193,4,c	;volatile
  4210   00266A                     l500:
  4211   00266A  0012               	return		;funcret
  4212   00266C                     __end_of_select_voltage_reference:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _select_result_format *****************
  4216 ;; Defined at:
  4217 ;;		line 222 in file "MCAL_Layer/ADC/hal_adc.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  adc             1    8[COMRAM] PTR const struct .
  4220 ;;		 -> adc_1(8), 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  ret             1    0        unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        2 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 4
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_ADC_init
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text27
  4247   0026C8                     __ptext27:
  4248                           	callstack 0
  4249   0026C8                     _select_result_format:
  4250                           	callstack 24
  4251   0026C8                     
  4252                           ;MCAL_Layer/ADC/hal_adc.c: 224:     if (((void*)0) == adc) {
  4253   0026C8  5009               	movf	select_result_format@adc^0,w,c
  4254   0026CA  A4D8               	btfss	status,2,c
  4255   0026CC  EF6A  F013         	goto	u3271
  4256   0026D0  EF6C  F013         	goto	u3270
  4257   0026D4                     u3271:
  4258   0026D4  EF6E  F013         	goto	l4638
  4259   0026D8                     u3270:
  4260   0026D8                     
  4261                           ;MCAL_Layer/ADC/hal_adc.c: 226:     } else {
  4262   0026D8  EF8F  F013         	goto	l485
  4263   0026DC                     l4638:
  4264                           
  4265                           ;MCAL_Layer/ADC/hal_adc.c: 227:         if (0x01U == adc->result_format) {
  4266   0026DC  5009               	movf	select_result_format@adc^0,w,c
  4267   0026DE  6ED9               	movwf	fsr2l,c
  4268   0026E0  6ADA               	clrf	fsr2h,c
  4269   0026E2  0E07               	movlw	7
  4270   0026E4  26D9               	addwf	fsr2l,f,c
  4271   0026E6  04DE               	decf	postinc2,w,c
  4272   0026E8  A4D8               	btfss	status,2,c
  4273   0026EA  EF79  F013         	goto	u3281
  4274   0026EE  EF7B  F013         	goto	u3280
  4275   0026F2                     u3281:
  4276   0026F2  EF7E  F013         	goto	l4642
  4277   0026F6                     u3280:
  4278   0026F6                     
  4279                           ;MCAL_Layer/ADC/hal_adc.c: 228:             (ADCON2bits.ADFM = 1);
  4280   0026F6  8EC0               	bsf	192,7,c	;volatile
  4281                           
  4282                           ;MCAL_Layer/ADC/hal_adc.c: 229:         } else if (0x00U == adc->result_format) {
  4283   0026F8  EF8F  F013         	goto	l485
  4284   0026FC                     l4642:
  4285   0026FC  5009               	movf	select_result_format@adc^0,w,c
  4286   0026FE  6ED9               	movwf	fsr2l,c
  4287   002700  6ADA               	clrf	fsr2h,c
  4288   002702  0E07               	movlw	7
  4289   002704  26D9               	addwf	fsr2l,f,c
  4290   002706  50DF               	movf	indf2,w,c
  4291   002708  A4D8               	btfss	status,2,c
  4292   00270A  EF89  F013         	goto	u3291
  4293   00270E  EF8B  F013         	goto	u3290
  4294   002712                     u3291:
  4295   002712  EF8E  F013         	goto	l483
  4296   002716                     u3290:
  4297   002716                     
  4298                           ;MCAL_Layer/ADC/hal_adc.c: 230:             (ADCON2bits.ADFM = 0);
  4299   002716  9EC0               	bcf	192,7,c	;volatile
  4300                           
  4301                           ;MCAL_Layer/ADC/hal_adc.c: 231:         } else {
  4302   002718  EF8F  F013         	goto	l485
  4303   00271C                     l483:
  4304                           
  4305                           ;MCAL_Layer/ADC/hal_adc.c: 233:             (ADCON2bits.ADFM = 1);
  4306   00271C  8EC0               	bsf	192,7,c	;volatile
  4307   00271E                     l485:
  4308   00271E  0012               	return		;funcret
  4309   002720                     __end_of_select_result_format:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function ___xxtofl *****************
  4313 ;; Defined at:
  4314 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  sign            1    wreg     unsigned char 
  4317 ;;  val             4    8[COMRAM] long 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  sign            1   16[COMRAM] unsigned char 
  4320 ;;  arg             4   18[COMRAM] unsigned long 
  4321 ;;  exp             1   17[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  4    8[COMRAM] unsigned char 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:       14 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 4
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_main
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text28
  4346   00165E                     __ptext28:
  4347                           	callstack 0
  4348   00165E                     ___xxtofl:
  4349                           	callstack 26
  4350                           
  4351                           ;incstack = 0
  4352                           ;___xxtofl@sign stored from wreg
  4353   00165E  6E11               	movwf	___xxtofl@sign^0,c
  4354   001660  5011               	movf	___xxtofl@sign^0,w,c
  4355   001662  B4D8               	btfsc	status,2,c
  4356   001664  EF36  F00B         	goto	u3991
  4357   001668  EF38  F00B         	goto	u3990
  4358   00166C                     u3991:
  4359   00166C  EF5A  F00B         	goto	l1916
  4360   001670                     u3990:
  4361   001670  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  4362   001672  EF3F  F00B         	goto	u4000
  4363   001676  EF3D  F00B         	goto	u4001
  4364   00167A                     u4001:
  4365   00167A  EF5A  F00B         	goto	l1916
  4366   00167E                     u4000:
  4367   00167E  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  4368   001682  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  4369   001686  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  4370   00168A  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  4371   00168E  1E0D               	comf	??___xxtofl^0,f,c
  4372   001690  1E0E               	comf	(??___xxtofl+1)^0,f,c
  4373   001692  1E0F               	comf	(??___xxtofl+2)^0,f,c
  4374   001694  1E10               	comf	(??___xxtofl+3)^0,f,c
  4375   001696  2A0D               	incf	??___xxtofl^0,f,c
  4376   001698  0E00               	movlw	0
  4377   00169A  220E               	addwfc	(??___xxtofl+1)^0,f,c
  4378   00169C  220F               	addwfc	(??___xxtofl+2)^0,f,c
  4379   00169E  2210               	addwfc	(??___xxtofl+3)^0,f,c
  4380   0016A0  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  4381   0016A4  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  4382   0016A8  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  4383   0016AC  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  4384   0016B0  EF62  F00B         	goto	l5202
  4385   0016B4                     l1916:
  4386   0016B4  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  4387   0016B8  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4388   0016BC  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4389   0016C0  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4390   0016C4                     l5202:
  4391   0016C4  5009               	movf	___xxtofl@val^0,w,c
  4392   0016C6  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  4393   0016C8  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  4394   0016CA  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  4395   0016CC  A4D8               	btfss	status,2,c
  4396   0016CE  EF6B  F00B         	goto	u4011
  4397   0016D2  EF6D  F00B         	goto	u4010
  4398   0016D6                     u4011:
  4399   0016D6  EF77  F00B         	goto	l5208
  4400   0016DA                     u4010:
  4401   0016DA  0E00               	movlw	0
  4402   0016DC  6E09               	movwf	?___xxtofl^0,c
  4403   0016DE  0E00               	movlw	0
  4404   0016E0  6E0A               	movwf	(?___xxtofl+1)^0,c
  4405   0016E2  0E00               	movlw	0
  4406   0016E4  6E0B               	movwf	(?___xxtofl+2)^0,c
  4407   0016E6  0E00               	movlw	0
  4408   0016E8  6E0C               	movwf	(?___xxtofl+3)^0,c
  4409   0016EA  EF08  F00C         	goto	l1919
  4410   0016EE                     l5208:
  4411   0016EE  0E96               	movlw	150
  4412   0016F0  6E12               	movwf	___xxtofl@exp^0,c
  4413   0016F2  EF81  F00B         	goto	l5212
  4414   0016F6                     l5210:
  4415   0016F6  2A12               	incf	___xxtofl@exp^0,f,c
  4416   0016F8  90D8               	bcf	status,0,c
  4417   0016FA  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  4418   0016FC  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  4419   0016FE  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  4420   001700  3213               	rrcf	___xxtofl@arg^0,f,c
  4421   001702                     l5212:
  4422   001702  0E00               	movlw	0
  4423   001704  1413               	andwf	___xxtofl@arg^0,w,c
  4424   001706  6E0D               	movwf	??___xxtofl^0,c
  4425   001708  0E00               	movlw	0
  4426   00170A  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  4427   00170C  6E0E               	movwf	(??___xxtofl+1)^0,c
  4428   00170E  0E00               	movlw	0
  4429   001710  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  4430   001712  6E0F               	movwf	(??___xxtofl+2)^0,c
  4431   001714  0EFE               	movlw	254
  4432   001716  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  4433   001718  6E10               	movwf	(??___xxtofl+3)^0,c
  4434   00171A  500D               	movf	??___xxtofl^0,w,c
  4435   00171C  100E               	iorwf	(??___xxtofl+1)^0,w,c
  4436   00171E  100F               	iorwf	(??___xxtofl+2)^0,w,c
  4437   001720  1010               	iorwf	(??___xxtofl+3)^0,w,c
  4438   001722  A4D8               	btfss	status,2,c
  4439   001724  EF96  F00B         	goto	u4021
  4440   001728  EF98  F00B         	goto	u4020
  4441   00172C                     u4021:
  4442   00172C  EF7B  F00B         	goto	l5210
  4443   001730                     u4020:
  4444   001730  EFA6  F00B         	goto	l1923
  4445   001734                     l5214:
  4446   001734  2A12               	incf	___xxtofl@exp^0,f,c
  4447   001736  0E01               	movlw	1
  4448   001738  2613               	addwf	___xxtofl@arg^0,f,c
  4449   00173A  0E00               	movlw	0
  4450   00173C  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  4451   00173E  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  4452   001740  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  4453   001742  90D8               	bcf	status,0,c
  4454   001744  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  4455   001746  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  4456   001748  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  4457   00174A  3213               	rrcf	___xxtofl@arg^0,f,c
  4458   00174C                     l1923:
  4459   00174C  0E00               	movlw	0
  4460   00174E  1413               	andwf	___xxtofl@arg^0,w,c
  4461   001750  6E0D               	movwf	??___xxtofl^0,c
  4462   001752  0E00               	movlw	0
  4463   001754  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  4464   001756  6E0E               	movwf	(??___xxtofl+1)^0,c
  4465   001758  0E00               	movlw	0
  4466   00175A  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  4467   00175C  6E0F               	movwf	(??___xxtofl+2)^0,c
  4468   00175E  0EFF               	movlw	255
  4469   001760  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  4470   001762  6E10               	movwf	(??___xxtofl+3)^0,c
  4471   001764  500D               	movf	??___xxtofl^0,w,c
  4472   001766  100E               	iorwf	(??___xxtofl+1)^0,w,c
  4473   001768  100F               	iorwf	(??___xxtofl+2)^0,w,c
  4474   00176A  1010               	iorwf	(??___xxtofl+3)^0,w,c
  4475   00176C  A4D8               	btfss	status,2,c
  4476   00176E  EFBB  F00B         	goto	u4031
  4477   001772  EFBD  F00B         	goto	u4030
  4478   001776                     u4031:
  4479   001776  EF9A  F00B         	goto	l5214
  4480   00177A                     u4030:
  4481   00177A  EFC5  F00B         	goto	l5222
  4482   00177E                     l5220:
  4483   00177E  0612               	decf	___xxtofl@exp^0,f,c
  4484   001780  90D8               	bcf	status,0,c
  4485   001782  3613               	rlcf	___xxtofl@arg^0,f,c
  4486   001784  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  4487   001786  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  4488   001788  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  4489   00178A                     l5222:
  4490   00178A  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  4491   00178C  EFCA  F00B         	goto	u4041
  4492   001790  EFCC  F00B         	goto	u4040
  4493   001794                     u4041:
  4494   001794  EFD4  F00B         	goto	l1930
  4495   001798                     u4040:
  4496   001798  0E02               	movlw	2
  4497   00179A  6012               	cpfslt	___xxtofl@exp^0,c
  4498   00179C  EFD2  F00B         	goto	u4051
  4499   0017A0  EFD4  F00B         	goto	u4050
  4500   0017A4                     u4051:
  4501   0017A4  EFBF  F00B         	goto	l5220
  4502   0017A8                     u4050:
  4503   0017A8                     l1930:
  4504   0017A8  B012               	btfsc	___xxtofl@exp^0,0,c
  4505   0017AA  EFD9  F00B         	goto	u4061
  4506   0017AE  EFDB  F00B         	goto	u4060
  4507   0017B2                     u4061:
  4508   0017B2  EFDC  F00B         	goto	l5228
  4509   0017B6                     u4060:
  4510   0017B6  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  4511   0017B8                     l5228:
  4512   0017B8  90D8               	bcf	status,0,c
  4513   0017BA  3212               	rrcf	___xxtofl@exp^0,f,c
  4514   0017BC  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  4515   0017C0  6A0E               	clrf	(??___xxtofl+1)^0,c
  4516   0017C2  6A0F               	clrf	(??___xxtofl+2)^0,c
  4517   0017C4  6A10               	clrf	(??___xxtofl+3)^0,c
  4518   0017C6  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  4519   0017CA  6A0F               	clrf	(??___xxtofl+2)^0,c
  4520   0017CC  6A0E               	clrf	(??___xxtofl+1)^0,c
  4521   0017CE  6A0D               	clrf	??___xxtofl^0,c
  4522   0017D0  500D               	movf	??___xxtofl^0,w,c
  4523   0017D2  1213               	iorwf	___xxtofl@arg^0,f,c
  4524   0017D4  500E               	movf	(??___xxtofl+1)^0,w,c
  4525   0017D6  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  4526   0017D8  500F               	movf	(??___xxtofl+2)^0,w,c
  4527   0017DA  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  4528   0017DC  5010               	movf	(??___xxtofl+3)^0,w,c
  4529   0017DE  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  4530   0017E0  5011               	movf	___xxtofl@sign^0,w,c
  4531   0017E2  B4D8               	btfsc	status,2,c
  4532   0017E4  EFF6  F00B         	goto	u4071
  4533   0017E8  EFF8  F00B         	goto	u4070
  4534   0017EC                     u4071:
  4535   0017EC  EF00  F00C         	goto	l5238
  4536   0017F0                     u4070:
  4537   0017F0  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  4538   0017F2  EFFF  F00B         	goto	u4080
  4539   0017F6  EFFD  F00B         	goto	u4081
  4540   0017FA                     u4081:
  4541   0017FA  EF00  F00C         	goto	l5238
  4542   0017FE                     u4080:
  4543   0017FE  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  4544   001800                     l5238:
  4545   001800  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  4546   001804  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  4547   001808  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  4548   00180C  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  4549   001810                     l1919:
  4550   001810  0012               	return		;funcret
  4551   001812                     __end_of___xxtofl:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function ___fltol *****************
  4555 ;; Defined at:
  4556 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  f1              4   47[COMRAM] unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  exp1            1    5[BANK0 ] unsigned char 
  4561 ;;  sign1           1    4[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4   47[COMRAM] long 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:       10 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 4
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text29
  4586   001BB0                     __ptext29:
  4587                           	callstack 0
  4588   001BB0                     ___fltol:
  4589                           	callstack 26
  4590   001BB0  3432               	rlcf	(___fltol@f1+2)^0,w,c
  4591   001BB2  3433               	rlcf	(___fltol@f1+3)^0,w,c
  4592   001BB4  0100               	movlb	0	; () banked
  4593   001BB6  6FE6               	movwf	___fltol@exp1& (0+255),b
  4594   001BB8  51E6               	movf	___fltol@exp1& (0+255),w,b
  4595   001BBA  A4D8               	btfss	status,2,c
  4596   001BBC  EFE2  F00D         	goto	u5621
  4597   001BC0  EFE4  F00D         	goto	u5620
  4598   001BC4                     u5621:
  4599   001BC4  EFEE  F00D         	goto	l6434
  4600   001BC8                     u5620:
  4601   001BC8                     l6430:
  4602                           
  4603                           ; BSR set to: 0
  4604   001BC8  0E00               	movlw	0
  4605   001BCA  6E30               	movwf	?___fltol^0,c
  4606   001BCC  0E00               	movlw	0
  4607   001BCE  6E31               	movwf	(?___fltol+1)^0,c
  4608   001BD0  0E00               	movlw	0
  4609   001BD2  6E32               	movwf	(?___fltol+2)^0,c
  4610   001BD4  0E00               	movlw	0
  4611   001BD6  6E33               	movwf	(?___fltol+3)^0,c
  4612   001BD8  EF5B  F00E         	goto	l1558
  4613   001BDC                     l6434:
  4614                           
  4615                           ; BSR set to: 0
  4616   001BDC  C030  F0E1         	movff	___fltol@f1,??___fltol
  4617   001BE0  C031  F0E2         	movff	___fltol@f1+1,??___fltol+1
  4618   001BE4  C032  F0E3         	movff	___fltol@f1+2,??___fltol+2
  4619   001BE8  C033  F0E4         	movff	___fltol@f1+3,??___fltol+3
  4620   001BEC  0E20               	movlw	32
  4621   001BEE  EFFE  F00D         	goto	u5630
  4622   001BF2                     u5635:
  4623   001BF2  90D8               	bcf	status,0,c
  4624   001BF4  33E4               	rrcf	(??___fltol+3)& (0+255),f,b
  4625   001BF6  33E3               	rrcf	(??___fltol+2)& (0+255),f,b
  4626   001BF8  33E2               	rrcf	(??___fltol+1)& (0+255),f,b
  4627   001BFA  33E1               	rrcf	??___fltol& (0+255),f,b
  4628   001BFC                     u5630:
  4629   001BFC  2EE8               	decfsz	wreg,f,c
  4630   001BFE  EFF9  F00D         	goto	u5635
  4631   001C02  51E1               	movf	??___fltol& (0+255),w,b
  4632   001C04  6FE5               	movwf	___fltol@sign1& (0+255),b
  4633   001C06                     
  4634                           ; BSR set to: 0
  4635   001C06  8E32               	bsf	(___fltol@f1+2)^0,7,c
  4636   001C08                     
  4637                           ; BSR set to: 0
  4638   001C08  0EFF               	movlw	255
  4639   001C0A  1630               	andwf	___fltol@f1^0,f,c
  4640   001C0C  0EFF               	movlw	255
  4641   001C0E  1631               	andwf	(___fltol@f1+1)^0,f,c
  4642   001C10  0EFF               	movlw	255
  4643   001C12  1632               	andwf	(___fltol@f1+2)^0,f,c
  4644   001C14  0E00               	movlw	0
  4645   001C16  1633               	andwf	(___fltol@f1+3)^0,f,c
  4646   001C18                     
  4647                           ; BSR set to: 0
  4648   001C18  0E96               	movlw	150
  4649   001C1A  5FE6               	subwf	___fltol@exp1& (0+255),f,b
  4650   001C1C                     
  4651                           ; BSR set to: 0
  4652   001C1C  BFE6               	btfsc	___fltol@exp1& (0+255),7,b
  4653   001C1E  EF15  F00E         	goto	u5640
  4654   001C22  EF13  F00E         	goto	u5641
  4655   001C26                     u5641:
  4656   001C26  EF2B  F00E         	goto	l6454
  4657   001C2A                     u5640:
  4658   001C2A                     
  4659                           ; BSR set to: 0
  4660   001C2A  51E6               	movf	___fltol@exp1& (0+255),w,b
  4661   001C2C  0A80               	xorlw	128
  4662   001C2E  0F97               	addlw	151
  4663   001C30  B0D8               	btfsc	status,0,c
  4664   001C32  EF1D  F00E         	goto	u5651
  4665   001C36  EF1F  F00E         	goto	u5650
  4666   001C3A                     u5651:
  4667   001C3A  EF21  F00E         	goto	l6450
  4668   001C3E                     u5650:
  4669   001C3E  EFE4  F00D         	goto	l6430
  4670   001C42                     l6450:
  4671                           
  4672                           ; BSR set to: 0
  4673   001C42  90D8               	bcf	status,0,c
  4674   001C44  3233               	rrcf	(___fltol@f1+3)^0,f,c
  4675   001C46  3232               	rrcf	(___fltol@f1+2)^0,f,c
  4676   001C48  3231               	rrcf	(___fltol@f1+1)^0,f,c
  4677   001C4A  3230               	rrcf	___fltol@f1^0,f,c
  4678   001C4C                     
  4679                           ; BSR set to: 0
  4680   001C4C  3FE6               	incfsz	___fltol@exp1& (0+255),f,b
  4681   001C4E  EF21  F00E         	goto	l6450
  4682   001C52  EF43  F00E         	goto	l6464
  4683   001C56                     l6454:
  4684                           
  4685                           ; BSR set to: 0
  4686   001C56  0E1F               	movlw	31
  4687   001C58  65E6               	cpfsgt	___fltol@exp1& (0+255),b
  4688   001C5A  EF31  F00E         	goto	u5661
  4689   001C5E  EF33  F00E         	goto	u5660
  4690   001C62                     u5661:
  4691   001C62  EF3B  F00E         	goto	l6462
  4692   001C66                     u5660:
  4693   001C66  EFE4  F00D         	goto	l6430
  4694   001C6A                     l6460:
  4695                           
  4696                           ; BSR set to: 0
  4697   001C6A  90D8               	bcf	status,0,c
  4698   001C6C  3630               	rlcf	___fltol@f1^0,f,c
  4699   001C6E  3631               	rlcf	(___fltol@f1+1)^0,f,c
  4700   001C70  3632               	rlcf	(___fltol@f1+2)^0,f,c
  4701   001C72  3633               	rlcf	(___fltol@f1+3)^0,f,c
  4702   001C74  07E6               	decf	___fltol@exp1& (0+255),f,b
  4703   001C76                     l6462:
  4704                           
  4705                           ; BSR set to: 0
  4706   001C76  51E6               	movf	___fltol@exp1& (0+255),w,b
  4707   001C78  A4D8               	btfss	status,2,c
  4708   001C7A  EF41  F00E         	goto	u5671
  4709   001C7E  EF43  F00E         	goto	u5670
  4710   001C82                     u5671:
  4711   001C82  EF35  F00E         	goto	l6460
  4712   001C86                     u5670:
  4713   001C86                     l6464:
  4714                           
  4715                           ; BSR set to: 0
  4716   001C86  51E5               	movf	___fltol@sign1& (0+255),w,b
  4717   001C88  B4D8               	btfsc	status,2,c
  4718   001C8A  EF49  F00E         	goto	u5681
  4719   001C8E  EF4B  F00E         	goto	u5680
  4720   001C92                     u5681:
  4721   001C92  EF53  F00E         	goto	l6468
  4722   001C96                     u5680:
  4723   001C96                     
  4724                           ; BSR set to: 0
  4725   001C96  1E33               	comf	(___fltol@f1+3)^0,f,c
  4726   001C98  1E32               	comf	(___fltol@f1+2)^0,f,c
  4727   001C9A  1E31               	comf	(___fltol@f1+1)^0,f,c
  4728   001C9C  6C30               	negf	___fltol@f1^0,c
  4729   001C9E  0E00               	movlw	0
  4730   001CA0  2231               	addwfc	(___fltol@f1+1)^0,f,c
  4731   001CA2  2232               	addwfc	(___fltol@f1+2)^0,f,c
  4732   001CA4  2233               	addwfc	(___fltol@f1+3)^0,f,c
  4733   001CA6                     l6468:
  4734                           
  4735                           ; BSR set to: 0
  4736   001CA6  C030  F030         	movff	___fltol@f1,?___fltol
  4737   001CAA  C031  F031         	movff	___fltol@f1+1,?___fltol+1
  4738   001CAE  C032  F032         	movff	___fltol@f1+2,?___fltol+2
  4739   001CB2  C033  F033         	movff	___fltol@f1+3,?___fltol+3
  4740   001CB6                     l1558:
  4741                           
  4742                           ; BSR set to: 0
  4743   001CB6  0012               	return		;funcret
  4744   001CB8                     __end_of___fltol:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function ___flmul *****************
  4748 ;; Defined at:
  4749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  b               4   22[COMRAM] long 
  4752 ;;  a               4   26[COMRAM] long 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  prod            4   41[COMRAM] struct .
  4755 ;;  grs             4   35[COMRAM] unsigned long 
  4756 ;;  temp            2   45[COMRAM] struct .
  4757 ;;  bexp            1   40[COMRAM] unsigned char 
  4758 ;;  aexp            1   39[COMRAM] unsigned char 
  4759 ;;  sign            1   34[COMRAM] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4   22[COMRAM] unsigned char 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, prodl, prodh
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:       25 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 4
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text30
  4784   00102E                     __ptext30:
  4785                           	callstack 0
  4786   00102E                     ___flmul:
  4787                           	callstack 26
  4788   00102E  501A               	movf	(___flmul@b+3)^0,w,c
  4789   001030  0B80               	andlw	128
  4790   001032  6E23               	movwf	___flmul@sign^0,c
  4791   001034  501A               	movf	(___flmul@b+3)^0,w,c
  4792   001036  241A               	addwf	(___flmul@b+3)^0,w,c
  4793   001038  6E29               	movwf	___flmul@bexp^0,c
  4794   00103A  AE19               	btfss	(___flmul@b+2)^0,7,c
  4795   00103C  EF22  F008         	goto	u3731
  4796   001040  EF24  F008         	goto	u3730
  4797   001044                     u3731:
  4798   001044  EF25  F008         	goto	l5028
  4799   001048                     u3730:
  4800   001048  8029               	bsf	___flmul@bexp^0,0,c
  4801   00104A                     l5028:
  4802   00104A  5029               	movf	___flmul@bexp^0,w,c
  4803   00104C  B4D8               	btfsc	status,2,c
  4804   00104E  EF2B  F008         	goto	u3741
  4805   001052  EF2D  F008         	goto	u3740
  4806   001056                     u3741:
  4807   001056  EF40  F008         	goto	l5036
  4808   00105A                     u3740:
  4809   00105A  2829               	incf	___flmul@bexp^0,w,c
  4810   00105C  A4D8               	btfss	status,2,c
  4811   00105E  EF33  F008         	goto	u3751
  4812   001062  EF35  F008         	goto	u3750
  4813   001066                     u3751:
  4814   001066  EF3D  F008         	goto	l5034
  4815   00106A                     u3750:
  4816   00106A  0E00               	movlw	0
  4817   00106C  6E17               	movwf	___flmul@b^0,c
  4818   00106E  0E00               	movlw	0
  4819   001070  6E18               	movwf	(___flmul@b+1)^0,c
  4820   001072  0E00               	movlw	0
  4821   001074  6E19               	movwf	(___flmul@b+2)^0,c
  4822   001076  0E00               	movlw	0
  4823   001078  6E1A               	movwf	(___flmul@b+3)^0,c
  4824   00107A                     l5034:
  4825   00107A  8E19               	bsf	(___flmul@b+2)^0,7,c
  4826   00107C  EF48  F008         	goto	l5038
  4827   001080                     l5036:
  4828   001080  0E00               	movlw	0
  4829   001082  6E17               	movwf	___flmul@b^0,c
  4830   001084  0E00               	movlw	0
  4831   001086  6E18               	movwf	(___flmul@b+1)^0,c
  4832   001088  0E00               	movlw	0
  4833   00108A  6E19               	movwf	(___flmul@b+2)^0,c
  4834   00108C  0E00               	movlw	0
  4835   00108E  6E1A               	movwf	(___flmul@b+3)^0,c
  4836   001090                     l5038:
  4837   001090  501E               	movf	(___flmul@a+3)^0,w,c
  4838   001092  0B80               	andlw	128
  4839   001094  1A23               	xorwf	___flmul@sign^0,f,c
  4840   001096  501E               	movf	(___flmul@a+3)^0,w,c
  4841   001098  241E               	addwf	(___flmul@a+3)^0,w,c
  4842   00109A  6E28               	movwf	___flmul@aexp^0,c
  4843   00109C  AE1D               	btfss	(___flmul@a+2)^0,7,c
  4844   00109E  EF53  F008         	goto	u3761
  4845   0010A2  EF55  F008         	goto	u3760
  4846   0010A6                     u3761:
  4847   0010A6  EF56  F008         	goto	l5046
  4848   0010AA                     u3760:
  4849   0010AA  8028               	bsf	___flmul@aexp^0,0,c
  4850   0010AC                     l5046:
  4851   0010AC  5028               	movf	___flmul@aexp^0,w,c
  4852   0010AE  B4D8               	btfsc	status,2,c
  4853   0010B0  EF5C  F008         	goto	u3771
  4854   0010B4  EF5E  F008         	goto	u3770
  4855   0010B8                     u3771:
  4856   0010B8  EF71  F008         	goto	l5054
  4857   0010BC                     u3770:
  4858   0010BC  2828               	incf	___flmul@aexp^0,w,c
  4859   0010BE  A4D8               	btfss	status,2,c
  4860   0010C0  EF64  F008         	goto	u3781
  4861   0010C4  EF66  F008         	goto	u3780
  4862   0010C8                     u3781:
  4863   0010C8  EF6E  F008         	goto	l5052
  4864   0010CC                     u3780:
  4865   0010CC  0E00               	movlw	0
  4866   0010CE  6E1B               	movwf	___flmul@a^0,c
  4867   0010D0  0E00               	movlw	0
  4868   0010D2  6E1C               	movwf	(___flmul@a+1)^0,c
  4869   0010D4  0E00               	movlw	0
  4870   0010D6  6E1D               	movwf	(___flmul@a+2)^0,c
  4871   0010D8  0E00               	movlw	0
  4872   0010DA  6E1E               	movwf	(___flmul@a+3)^0,c
  4873   0010DC                     l5052:
  4874   0010DC  8E1D               	bsf	(___flmul@a+2)^0,7,c
  4875   0010DE  EF79  F008         	goto	l1875
  4876   0010E2                     l5054:
  4877   0010E2  0E00               	movlw	0
  4878   0010E4  6E1B               	movwf	___flmul@a^0,c
  4879   0010E6  0E00               	movlw	0
  4880   0010E8  6E1C               	movwf	(___flmul@a+1)^0,c
  4881   0010EA  0E00               	movlw	0
  4882   0010EC  6E1D               	movwf	(___flmul@a+2)^0,c
  4883   0010EE  0E00               	movlw	0
  4884   0010F0  6E1E               	movwf	(___flmul@a+3)^0,c
  4885   0010F2                     l1875:
  4886   0010F2  5028               	movf	___flmul@aexp^0,w,c
  4887   0010F4  B4D8               	btfsc	status,2,c
  4888   0010F6  EF7F  F008         	goto	u3791
  4889   0010FA  EF81  F008         	goto	u3790
  4890   0010FE                     u3791:
  4891   0010FE  EF89  F008         	goto	l5058
  4892   001102                     u3790:
  4893   001102  5029               	movf	___flmul@bexp^0,w,c
  4894   001104  A4D8               	btfss	status,2,c
  4895   001106  EF87  F008         	goto	u3801
  4896   00110A  EF89  F008         	goto	u3800
  4897   00110E                     u3801:
  4898   00110E  EF93  F008         	goto	l5062
  4899   001112                     u3800:
  4900   001112                     l5058:
  4901   001112  0E00               	movlw	0
  4902   001114  6E17               	movwf	?___flmul^0,c
  4903   001116  0E00               	movlw	0
  4904   001118  6E18               	movwf	(?___flmul+1)^0,c
  4905   00111A  0E00               	movlw	0
  4906   00111C  6E19               	movwf	(?___flmul+2)^0,c
  4907   00111E  0E00               	movlw	0
  4908   001120  6E1A               	movwf	(?___flmul+3)^0,c
  4909   001122  EF2B  F00A         	goto	l1879
  4910   001126                     l5062:
  4911   001126  501D               	movf	(___flmul@a+2)^0,w,c
  4912   001128  0217               	mulwf	___flmul@b^0,c
  4913   00112A  CFF3 F02E          	movff	prodl,___flmul@temp
  4914   00112E  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4915   001132  502E               	movf	___flmul@temp^0,w,c
  4916   001134  6E24               	movwf	___flmul@grs^0,c
  4917   001136  6A25               	clrf	(___flmul@grs+1)^0,c
  4918   001138  6A26               	clrf	(___flmul@grs+2)^0,c
  4919   00113A  6A27               	clrf	(___flmul@grs+3)^0,c
  4920   00113C  502F               	movf	(___flmul@temp+1)^0,w,c
  4921   00113E  6E2A               	movwf	___flmul@prod^0,c
  4922   001140  6A2B               	clrf	(___flmul@prod+1)^0,c
  4923   001142  6A2C               	clrf	(___flmul@prod+2)^0,c
  4924   001144  6A2D               	clrf	(___flmul@prod+3)^0,c
  4925   001146  501C               	movf	(___flmul@a+1)^0,w,c
  4926   001148  0218               	mulwf	(___flmul@b+1)^0,c
  4927   00114A  CFF3 F02E          	movff	prodl,___flmul@temp
  4928   00114E  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4929   001152  502E               	movf	___flmul@temp^0,w,c
  4930   001154  2624               	addwf	___flmul@grs^0,f,c
  4931   001156  0E00               	movlw	0
  4932   001158  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4933   00115A  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4934   00115C  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4935   00115E  502F               	movf	(___flmul@temp+1)^0,w,c
  4936   001160  262A               	addwf	___flmul@prod^0,f,c
  4937   001162  0E00               	movlw	0
  4938   001164  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4939   001166  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4940   001168  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4941   00116A  501B               	movf	___flmul@a^0,w,c
  4942   00116C  0219               	mulwf	(___flmul@b+2)^0,c
  4943   00116E  CFF3 F02E          	movff	prodl,___flmul@temp
  4944   001172  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4945   001176  502E               	movf	___flmul@temp^0,w,c
  4946   001178  2624               	addwf	___flmul@grs^0,f,c
  4947   00117A  0E00               	movlw	0
  4948   00117C  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4949   00117E  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4950   001180  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4951   001182  502F               	movf	(___flmul@temp+1)^0,w,c
  4952   001184  262A               	addwf	___flmul@prod^0,f,c
  4953   001186  0E00               	movlw	0
  4954   001188  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4955   00118A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4956   00118C  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4957   00118E  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  4958   001192  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  4959   001196  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  4960   00119A  6A24               	clrf	___flmul@grs^0,c
  4961   00119C  501B               	movf	___flmul@a^0,w,c
  4962   00119E  0218               	mulwf	(___flmul@b+1)^0,c
  4963   0011A0  CFF3 F02E          	movff	prodl,___flmul@temp
  4964   0011A4  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4965   0011A8  502E               	movf	___flmul@temp^0,w,c
  4966   0011AA  2624               	addwf	___flmul@grs^0,f,c
  4967   0011AC  502F               	movf	(___flmul@temp+1)^0,w,c
  4968   0011AE  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4969   0011B0  0E00               	movlw	0
  4970   0011B2  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4971   0011B4  0E00               	movlw	0
  4972   0011B6  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4973   0011B8  501C               	movf	(___flmul@a+1)^0,w,c
  4974   0011BA  0217               	mulwf	___flmul@b^0,c
  4975   0011BC  CFF3 F02E          	movff	prodl,___flmul@temp
  4976   0011C0  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4977   0011C4  502E               	movf	___flmul@temp^0,w,c
  4978   0011C6  2624               	addwf	___flmul@grs^0,f,c
  4979   0011C8  502F               	movf	(___flmul@temp+1)^0,w,c
  4980   0011CA  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4981   0011CC  0E00               	movlw	0
  4982   0011CE  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4983   0011D0  0E00               	movlw	0
  4984   0011D2  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4985   0011D4  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  4986   0011D8  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  4987   0011DC  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  4988   0011E0  6A24               	clrf	___flmul@grs^0,c
  4989   0011E2  501B               	movf	___flmul@a^0,w,c
  4990   0011E4  0217               	mulwf	___flmul@b^0,c
  4991   0011E6  CFF3 F02E          	movff	prodl,___flmul@temp
  4992   0011EA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4993   0011EE  502E               	movf	___flmul@temp^0,w,c
  4994   0011F0  2624               	addwf	___flmul@grs^0,f,c
  4995   0011F2  502F               	movf	(___flmul@temp+1)^0,w,c
  4996   0011F4  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4997   0011F6  0E00               	movlw	0
  4998   0011F8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4999   0011FA  0E00               	movlw	0
  5000   0011FC  2227               	addwfc	(___flmul@grs+3)^0,f,c
  5001   0011FE  501D               	movf	(___flmul@a+2)^0,w,c
  5002   001200  0218               	mulwf	(___flmul@b+1)^0,c
  5003   001202  CFF3 F02E          	movff	prodl,___flmul@temp
  5004   001206  CFF4 F02F          	movff	prodh,___flmul@temp+1
  5005   00120A  502E               	movf	___flmul@temp^0,w,c
  5006   00120C  262A               	addwf	___flmul@prod^0,f,c
  5007   00120E  502F               	movf	(___flmul@temp+1)^0,w,c
  5008   001210  222B               	addwfc	(___flmul@prod+1)^0,f,c
  5009   001212  0E00               	movlw	0
  5010   001214  222C               	addwfc	(___flmul@prod+2)^0,f,c
  5011   001216  0E00               	movlw	0
  5012   001218  222D               	addwfc	(___flmul@prod+3)^0,f,c
  5013   00121A  501C               	movf	(___flmul@a+1)^0,w,c
  5014   00121C  0219               	mulwf	(___flmul@b+2)^0,c
  5015   00121E  CFF3 F02E          	movff	prodl,___flmul@temp
  5016   001222  CFF4 F02F          	movff	prodh,___flmul@temp+1
  5017   001226  502E               	movf	___flmul@temp^0,w,c
  5018   001228  262A               	addwf	___flmul@prod^0,f,c
  5019   00122A  502F               	movf	(___flmul@temp+1)^0,w,c
  5020   00122C  222B               	addwfc	(___flmul@prod+1)^0,f,c
  5021   00122E  0E00               	movlw	0
  5022   001230  222C               	addwfc	(___flmul@prod+2)^0,f,c
  5023   001232  0E00               	movlw	0
  5024   001234  222D               	addwfc	(___flmul@prod+3)^0,f,c
  5025   001236  501D               	movf	(___flmul@a+2)^0,w,c
  5026   001238  0219               	mulwf	(___flmul@b+2)^0,c
  5027   00123A  CFF3 F02E          	movff	prodl,___flmul@temp
  5028   00123E  CFF4 F02F          	movff	prodh,___flmul@temp+1
  5029   001242  502E               	movf	___flmul@temp^0,w,c
  5030   001244  6E1F               	movwf	??___flmul^0,c
  5031   001246  502F               	movf	(___flmul@temp+1)^0,w,c
  5032   001248  6E20               	movwf	(??___flmul+1)^0,c
  5033   00124A  6A21               	clrf	(??___flmul+2)^0,c
  5034   00124C  6A22               	clrf	(??___flmul+3)^0,c
  5035   00124E  C021  F022         	movff	??___flmul+2,??___flmul+3
  5036   001252  C020  F021         	movff	??___flmul+1,??___flmul+2
  5037   001256  C01F  F020         	movff	??___flmul,??___flmul+1
  5038   00125A  6A1F               	clrf	??___flmul^0,c
  5039   00125C  501F               	movf	??___flmul^0,w,c
  5040   00125E  262A               	addwf	___flmul@prod^0,f,c
  5041   001260  5020               	movf	(??___flmul+1)^0,w,c
  5042   001262  222B               	addwfc	(___flmul@prod+1)^0,f,c
  5043   001264  5021               	movf	(??___flmul+2)^0,w,c
  5044   001266  222C               	addwfc	(___flmul@prod+2)^0,f,c
  5045   001268  5022               	movf	(??___flmul+3)^0,w,c
  5046   00126A  222D               	addwfc	(___flmul@prod+3)^0,f,c
  5047   00126C  C024  F01F         	movff	___flmul@grs,??___flmul
  5048   001270  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  5049   001274  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  5050   001278  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  5051   00127C  0E19               	movlw	25
  5052   00127E  EF46  F009         	goto	u3810
  5053   001282                     u3815:
  5054   001282  90D8               	bcf	status,0,c
  5055   001284  3222               	rrcf	(??___flmul+3)^0,f,c
  5056   001286  3221               	rrcf	(??___flmul+2)^0,f,c
  5057   001288  3220               	rrcf	(??___flmul+1)^0,f,c
  5058   00128A  321F               	rrcf	??___flmul^0,f,c
  5059   00128C                     u3810:
  5060   00128C  2EE8               	decfsz	wreg,f,c
  5061   00128E  EF41  F009         	goto	u3815
  5062   001292  501F               	movf	??___flmul^0,w,c
  5063   001294  262A               	addwf	___flmul@prod^0,f,c
  5064   001296  5020               	movf	(??___flmul+1)^0,w,c
  5065   001298  222B               	addwfc	(___flmul@prod+1)^0,f,c
  5066   00129A  5021               	movf	(??___flmul+2)^0,w,c
  5067   00129C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  5068   00129E  5022               	movf	(??___flmul+3)^0,w,c
  5069   0012A0  222D               	addwfc	(___flmul@prod+3)^0,f,c
  5070   0012A2  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  5071   0012A6  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  5072   0012AA  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  5073   0012AE  6A24               	clrf	___flmul@grs^0,c
  5074   0012B0  5028               	movf	___flmul@aexp^0,w,c
  5075   0012B2  C029  F01F         	movff	___flmul@bexp,??___flmul
  5076   0012B6  6A20               	clrf	(??___flmul+1)^0,c
  5077   0012B8  261F               	addwf	??___flmul^0,f,c
  5078   0012BA  0E00               	movlw	0
  5079   0012BC  2220               	addwfc	(??___flmul+1)^0,f,c
  5080   0012BE  0E82               	movlw	130
  5081   0012C0  241F               	addwf	??___flmul^0,w,c
  5082   0012C2  6E2E               	movwf	___flmul@temp^0,c
  5083   0012C4  0EFF               	movlw	255
  5084   0012C6  2020               	addwfc	(??___flmul+1)^0,w,c
  5085   0012C8  6E2F               	movwf	(___flmul@temp+1)^0,c
  5086   0012CA  EF7C  F009         	goto	l5110
  5087   0012CE                     l5104:
  5088   0012CE  90D8               	bcf	status,0,c
  5089   0012D0  362A               	rlcf	___flmul@prod^0,f,c
  5090   0012D2  362B               	rlcf	(___flmul@prod+1)^0,f,c
  5091   0012D4  362C               	rlcf	(___flmul@prod+2)^0,f,c
  5092   0012D6  362D               	rlcf	(___flmul@prod+3)^0,f,c
  5093   0012D8  AE27               	btfss	(___flmul@grs+3)^0,7,c
  5094   0012DA  EF71  F009         	goto	u3821
  5095   0012DE  EF73  F009         	goto	u3820
  5096   0012E2                     u3821:
  5097   0012E2  EF74  F009         	goto	l1882
  5098   0012E6                     u3820:
  5099   0012E6  802A               	bsf	___flmul@prod^0,0,c
  5100   0012E8                     l1882:
  5101   0012E8  90D8               	bcf	status,0,c
  5102   0012EA  3624               	rlcf	___flmul@grs^0,f,c
  5103   0012EC  3625               	rlcf	(___flmul@grs+1)^0,f,c
  5104   0012EE  3626               	rlcf	(___flmul@grs+2)^0,f,c
  5105   0012F0  3627               	rlcf	(___flmul@grs+3)^0,f,c
  5106   0012F2  062E               	decf	___flmul@temp^0,f,c
  5107   0012F4  A0D8               	btfss	status,0,c
  5108   0012F6  062F               	decf	(___flmul@temp+1)^0,f,c
  5109   0012F8                     l5110:
  5110   0012F8  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  5111   0012FA  EF81  F009         	goto	u3831
  5112   0012FE  EF83  F009         	goto	u3830
  5113   001302                     u3831:
  5114   001302  EF67  F009         	goto	l5104
  5115   001306                     u3830:
  5116   001306  0E00               	movlw	0
  5117   001308  6E28               	movwf	___flmul@aexp^0,c
  5118   00130A  AE27               	btfss	(___flmul@grs+3)^0,7,c
  5119   00130C  EF8A  F009         	goto	u3841
  5120   001310  EF8C  F009         	goto	u3840
  5121   001314                     u3841:
  5122   001314  EFB0  F009         	goto	l1884
  5123   001318                     u3840:
  5124   001318  0EFF               	movlw	255
  5125   00131A  1424               	andwf	___flmul@grs^0,w,c
  5126   00131C  6E1F               	movwf	??___flmul^0,c
  5127   00131E  0EFF               	movlw	255
  5128   001320  1425               	andwf	(___flmul@grs+1)^0,w,c
  5129   001322  6E20               	movwf	(??___flmul+1)^0,c
  5130   001324  0EFF               	movlw	255
  5131   001326  1426               	andwf	(___flmul@grs+2)^0,w,c
  5132   001328  6E21               	movwf	(??___flmul+2)^0,c
  5133   00132A  0E7F               	movlw	127
  5134   00132C  1427               	andwf	(___flmul@grs+3)^0,w,c
  5135   00132E  6E22               	movwf	(??___flmul+3)^0,c
  5136   001330  501F               	movf	??___flmul^0,w,c
  5137   001332  1020               	iorwf	(??___flmul+1)^0,w,c
  5138   001334  1021               	iorwf	(??___flmul+2)^0,w,c
  5139   001336  1022               	iorwf	(??___flmul+3)^0,w,c
  5140   001338  B4D8               	btfsc	status,2,c
  5141   00133A  EFA1  F009         	goto	u3851
  5142   00133E  EFA3  F009         	goto	u3850
  5143   001342                     u3851:
  5144   001342  EFA7  F009         	goto	l1885
  5145   001346                     u3850:
  5146   001346                     l5118:
  5147   001346  0E01               	movlw	1
  5148   001348  6E28               	movwf	___flmul@aexp^0,c
  5149   00134A  EFB0  F009         	goto	l1884
  5150   00134E                     l1885:
  5151   00134E  A02A               	btfss	___flmul@prod^0,0,c
  5152   001350  EFAC  F009         	goto	u3861
  5153   001354  EFAE  F009         	goto	u3860
  5154   001358                     u3861:
  5155   001358  EFB0  F009         	goto	l1884
  5156   00135C                     u3860:
  5157   00135C  EFA3  F009         	goto	l5118
  5158   001360                     l1884:
  5159   001360  5028               	movf	___flmul@aexp^0,w,c
  5160   001362  B4D8               	btfsc	status,2,c
  5161   001364  EFB6  F009         	goto	u3871
  5162   001368  EFB8  F009         	goto	u3870
  5163   00136C                     u3871:
  5164   00136C  EFDC  F009         	goto	l5130
  5165   001370                     u3870:
  5166   001370  0E01               	movlw	1
  5167   001372  262A               	addwf	___flmul@prod^0,f,c
  5168   001374  0E00               	movlw	0
  5169   001376  222B               	addwfc	(___flmul@prod+1)^0,f,c
  5170   001378  222C               	addwfc	(___flmul@prod+2)^0,f,c
  5171   00137A  222D               	addwfc	(___flmul@prod+3)^0,f,c
  5172   00137C  A02D               	btfss	(___flmul@prod+3)^0,0,c
  5173   00137E  EFC3  F009         	goto	u3881
  5174   001382  EFC5  F009         	goto	u3880
  5175   001386                     u3881:
  5176   001386  EFDC  F009         	goto	l5130
  5177   00138A                     u3880:
  5178   00138A  C02A  F01F         	movff	___flmul@prod,??___flmul
  5179   00138E  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  5180   001392  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  5181   001396  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  5182   00139A  3422               	rlcf	(??___flmul+3)^0,w,c
  5183   00139C  3222               	rrcf	(??___flmul+3)^0,f,c
  5184   00139E  3221               	rrcf	(??___flmul+2)^0,f,c
  5185   0013A0  3220               	rrcf	(??___flmul+1)^0,f,c
  5186   0013A2  321F               	rrcf	??___flmul^0,f,c
  5187   0013A4  C01F  F02A         	movff	??___flmul,___flmul@prod
  5188   0013A8  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  5189   0013AC  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  5190   0013B0  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  5191   0013B4  4A2E               	infsnz	___flmul@temp^0,f,c
  5192   0013B6  2A2F               	incf	(___flmul@temp+1)^0,f,c
  5193   0013B8                     l5130:
  5194   0013B8  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  5195   0013BA  EFE7  F009         	goto	u3891
  5196   0013BE  502F               	movf	(___flmul@temp+1)^0,w,c
  5197   0013C0  E108               	bnz	u3890
  5198   0013C2  282E               	incf	___flmul@temp^0,w,c
  5199   0013C4  A0D8               	btfss	status,0,c
  5200   0013C6  EFE7  F009         	goto	u3891
  5201   0013CA  EFE9  F009         	goto	u3890
  5202   0013CE                     u3891:
  5203   0013CE  EFF3  F009         	goto	l5134
  5204   0013D2                     u3890:
  5205   0013D2  0E00               	movlw	0
  5206   0013D4  6E2A               	movwf	___flmul@prod^0,c
  5207   0013D6  0E00               	movlw	0
  5208   0013D8  6E2B               	movwf	(___flmul@prod+1)^0,c
  5209   0013DA  0E80               	movlw	128
  5210   0013DC  6E2C               	movwf	(___flmul@prod+2)^0,c
  5211   0013DE  0E7F               	movlw	127
  5212   0013E0  6E2D               	movwf	(___flmul@prod+3)^0,c
  5213   0013E2  EF21  F00A         	goto	l5146
  5214   0013E6                     l5134:
  5215   0013E6  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  5216   0013E8  EF00  F00A         	goto	u3900
  5217   0013EC  502F               	movf	(___flmul@temp+1)^0,w,c
  5218   0013EE  E106               	bnz	u3901
  5219   0013F0  042E               	decf	___flmul@temp^0,w,c
  5220   0013F2  B0D8               	btfsc	status,0,c
  5221   0013F4  EFFE  F009         	goto	u3901
  5222   0013F8  EF00  F00A         	goto	u3900
  5223   0013FC                     u3901:
  5224   0013FC  EF0C  F00A         	goto	l1892
  5225   001400                     u3900:
  5226   001400  0E00               	movlw	0
  5227   001402  6E2A               	movwf	___flmul@prod^0,c
  5228   001404  0E00               	movlw	0
  5229   001406  6E2B               	movwf	(___flmul@prod+1)^0,c
  5230   001408  0E00               	movlw	0
  5231   00140A  6E2C               	movwf	(___flmul@prod+2)^0,c
  5232   00140C  0E00               	movlw	0
  5233   00140E  6E2D               	movwf	(___flmul@prod+3)^0,c
  5234   001410  0E00               	movlw	0
  5235   001412  6E23               	movwf	___flmul@sign^0,c
  5236   001414  EF21  F00A         	goto	l5146
  5237   001418                     l1892:
  5238   001418  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  5239   00141C  0EFF               	movlw	255
  5240   00141E  162A               	andwf	___flmul@prod^0,f,c
  5241   001420  0EFF               	movlw	255
  5242   001422  162B               	andwf	(___flmul@prod+1)^0,f,c
  5243   001424  0E7F               	movlw	127
  5244   001426  162C               	andwf	(___flmul@prod+2)^0,f,c
  5245   001428  0E00               	movlw	0
  5246   00142A  162D               	andwf	(___flmul@prod+3)^0,f,c
  5247   00142C  A029               	btfss	___flmul@bexp^0,0,c
  5248   00142E  EF1B  F00A         	goto	u3911
  5249   001432  EF1D  F00A         	goto	u3910
  5250   001436                     u3911:
  5251   001436  EF1E  F00A         	goto	l5144
  5252   00143A                     u3910:
  5253   00143A  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  5254   00143C                     l5144:
  5255   00143C  90D8               	bcf	status,0,c
  5256   00143E  3029               	rrcf	___flmul@bexp^0,w,c
  5257   001440  6E2D               	movwf	(___flmul@prod+3)^0,c
  5258   001442                     l5146:
  5259   001442  5023               	movf	___flmul@sign^0,w,c
  5260   001444  122D               	iorwf	(___flmul@prod+3)^0,f,c
  5261   001446  C02A  F017         	movff	___flmul@prod,?___flmul
  5262   00144A  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  5263   00144E  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  5264   001452  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  5265   001456                     l1879:
  5266   001456  0012               	return		;funcret
  5267   001458                     __end_of___flmul:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _ADC_StartConversion_Interrupt *****************
  5271 ;; Defined at:
  5272 ;;		line 152 in file "MCAL_Layer/ADC/hal_adc.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  adc             1   14[COMRAM] PTR const struct .
  5275 ;;		 -> adc_1(8), 
  5276 ;;  channel         1   15[COMRAM] enum E3294
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  ret             1   16[COMRAM] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      unsigned char 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;Total ram usage:        3 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 6
  5295 ;; This function calls:
  5296 ;;		_ADC_SelectChannel
  5297 ;;		_ADC_StartConversion
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text31
  5304   002806                     __ptext31:
  5305                           	callstack 0
  5306   002806                     _ADC_StartConversion_Interrupt:
  5307                           	callstack 24
  5308   002806                     
  5309                           ;MCAL_Layer/ADC/hal_adc.c: 154:     if (((void*)0) == adc) {
  5310   002806  500F               	movf	ADC_StartConversion_Interrupt@adc^0,w,c
  5311   002808  A4D8               	btfss	status,2,c
  5312   00280A  EF09  F014         	goto	u3681
  5313   00280E  EF0B  F014         	goto	u3680
  5314   002812                     u3681:
  5315   002812  EF0F  F014         	goto	l4958
  5316   002816                     u3680:
  5317   002816                     
  5318                           ;MCAL_Layer/ADC/hal_adc.c: 155:         ret = (STD_ReturnType)0x00;
  5319   002816  0E00               	movlw	0
  5320   002818  6E11               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5321                           
  5322                           ;MCAL_Layer/ADC/hal_adc.c: 156:     } else {
  5323   00281A  EF1B  F014         	goto	l4960
  5324   00281E                     l4958:
  5325                           
  5326                           ;MCAL_Layer/ADC/hal_adc.c: 158:         ret = ADC_SelectChannel(adc, channel);
  5327   00281E  C00F  F00C         	movff	ADC_StartConversion_Interrupt@adc,ADC_SelectChannel@adc
  5328   002822  C010  F00D         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  5329   002826  EC36  F014         	call	_ADC_SelectChannel	;wreg free
  5330   00282A  6E11               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5331                           
  5332                           ;MCAL_Layer/ADC/hal_adc.c: 160:         ret = ADC_StartConversion(adc);
  5333   00282C  C00F  F009         	movff	ADC_StartConversion_Interrupt@adc,ADC_StartConversion@adc
  5334   002830  EC93  F014         	call	_ADC_StartConversion	;wreg free
  5335   002834  6E11               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5336   002836                     l4960:
  5337                           
  5338                           ;MCAL_Layer/ADC/hal_adc.c: 162:     return ret;
  5339   002836  5011               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  5340   002838  0012               	return		;funcret
  5341   00283A                     __end_of_ADC_StartConversion_Interrupt:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _ADC_StartConversion *****************
  5345 ;; Defined at:
  5346 ;;		line 89 in file "MCAL_Layer/ADC/hal_adc.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  adc             1    8[COMRAM] PTR const struct .
  5349 ;;		 -> adc_1(8), 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  ret             1    0        unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      unsigned char 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 4
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_ADC_StartConversion_Interrupt
  5372 ;;		_ADC_GetConversion_Blocking
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text32
  5377   002926                     __ptext32:
  5378                           	callstack 0
  5379   002926                     _ADC_StartConversion:
  5380                           	callstack 25
  5381   002926                     
  5382                           ;MCAL_Layer/ADC/hal_adc.c: 91:     if (((void*)0) == adc) {
  5383   002926  5009               	movf	ADC_StartConversion@adc^0,w,c
  5384   002928  A4D8               	btfss	status,2,c
  5385   00292A  EF99  F014         	goto	u3471
  5386   00292E  EF9B  F014         	goto	u3470
  5387   002932                     u3471:
  5388   002932  EF9D  F014         	goto	l423
  5389   002936                     u3470:
  5390   002936                     
  5391                           ;MCAL_Layer/ADC/hal_adc.c: 93:     } else {
  5392   002936  EF9E  F014         	goto	l4816
  5393   00293A                     l423:
  5394                           
  5395                           ;MCAL_Layer/ADC/hal_adc.c: 94:         (ADCON0bits.GO_nDONE = 1);
  5396   00293A  82C2               	bsf	194,1,c	;volatile
  5397   00293C                     l4816:
  5398                           
  5399                           ;MCAL_Layer/ADC/hal_adc.c: 96:     return ret;
  5400   00293C  0E00               	movlw	0
  5401   00293E  0012               	return		;funcret
  5402   002940                     __end_of_ADC_StartConversion:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function _ADC_SelectChannel *****************
  5406 ;; Defined at:
  5407 ;;		line 78 in file "MCAL_Layer/ADC/hal_adc.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  adc             1   11[COMRAM] PTR const struct .
  5410 ;;		 -> adc_1(8), 
  5411 ;;  channel         1   12[COMRAM] enum E3294
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  ret             1    0        unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      unsigned char 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;Total ram usage:        3 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; Hardware stack levels required when called: 5
  5430 ;; This function calls:
  5431 ;;		_adc_input_channel_port_configure
  5432 ;; This function is called by:
  5433 ;;		_ADC_StartConversion_Interrupt
  5434 ;;		_ADC_GetConversion_Blocking
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text33
  5439   00286C                     __ptext33:
  5440                           	callstack 0
  5441   00286C                     _ADC_SelectChannel:
  5442                           	callstack 24
  5443   00286C                     
  5444                           ;MCAL_Layer/ADC/hal_adc.c: 80:     if (((void*)0) == adc) {
  5445   00286C  500C               	movf	ADC_SelectChannel@adc^0,w,c
  5446   00286E  A4D8               	btfss	status,2,c
  5447   002870  EF3C  F014         	goto	u3461
  5448   002874  EF3E  F014         	goto	u3460
  5449   002878                     u3461:
  5450   002878  EF40  F014         	goto	l4804
  5451   00287C                     u3460:
  5452   00287C                     
  5453                           ;MCAL_Layer/ADC/hal_adc.c: 82:     } else {
  5454   00287C  EF4C  F014         	goto	l4808
  5455   002880                     l4804:
  5456                           
  5457                           ;MCAL_Layer/ADC/hal_adc.c: 83:         ADCON0bits.CHS = channel;
  5458   002880  C00D  F00E         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5459   002884  460E               	rlncf	??_ADC_SelectChannel^0,f,c
  5460   002886  460E               	rlncf	??_ADC_SelectChannel^0,f,c
  5461   002888  50C2               	movf	194,w,c	;volatile
  5462   00288A  180E               	xorwf	??_ADC_SelectChannel^0,w,c
  5463   00288C  0BC3               	andlw	-61
  5464   00288E  180E               	xorwf	??_ADC_SelectChannel^0,w,c
  5465   002890  6EC2               	movwf	194,c	;volatile
  5466   002892                     
  5467                           ;MCAL_Layer/ADC/hal_adc.c: 84:         adc_input_channel_port_configure(channel);
  5468   002892  500D               	movf	ADC_SelectChannel@channel^0,w,c
  5469   002894  EC5C  F00E         	call	_adc_input_channel_port_configure
  5470   002898                     l4808:
  5471                           
  5472                           ;MCAL_Layer/ADC/hal_adc.c: 86:     return ret;
  5473   002898  0E00               	movlw	0
  5474   00289A  0012               	return		;funcret
  5475   00289C                     __end_of_ADC_SelectChannel:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _adc_input_channel_port_configure *****************
  5479 ;; Defined at:
  5480 ;;		line 165 in file "MCAL_Layer/ADC/hal_adc.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  channel         1    wreg     enum E3294
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  channel         1   10[COMRAM] enum E3294
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        3 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 4
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_ADC_init
  5505 ;;		_ADC_SelectChannel
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text34
  5510   001CB8                     __ptext34:
  5511                           	callstack 0
  5512   001CB8                     _adc_input_channel_port_configure:
  5513                           	callstack 24
  5514                           
  5515                           ;incstack = 0
  5516                           ;adc_input_channel_port_configure@channel stored from wreg
  5517   001CB8  6E0B               	movwf	adc_input_channel_port_configure@channel^0,c
  5518   001CBA                     
  5519                           ;MCAL_Layer/ADC/hal_adc.c: 166:     switch (channel) {
  5520   001CBA  EF93  F00E         	goto	l4628
  5521   001CBE                     l462:
  5522                           
  5523                           ;MCAL_Layer/ADC/hal_adc.c: 168:             (ANSELbits.ANS0 = 1);
  5524   001CBE  807E               	bsf	126,0,c	;volatile
  5525   001CC0                     
  5526                           ;MCAL_Layer/ADC/hal_adc.c: 169:             (TRISA |= (1 << 0x0));
  5527   001CC0  8092               	bsf	146,0,c	;volatile
  5528                           
  5529                           ;MCAL_Layer/ADC/hal_adc.c: 170:             break;
  5530   001CC2  EFD4  F00E         	goto	l476
  5531   001CC6                     l464:
  5532                           
  5533                           ;MCAL_Layer/ADC/hal_adc.c: 172:             (ANSELbits.ANS1 = 1);
  5534   001CC6  827E               	bsf	126,1,c	;volatile
  5535   001CC8                     
  5536                           ;MCAL_Layer/ADC/hal_adc.c: 173:             (TRISA |= (1 << 0x1));
  5537   001CC8  8292               	bsf	146,1,c	;volatile
  5538                           
  5539                           ;MCAL_Layer/ADC/hal_adc.c: 174:             break;
  5540   001CCA  EFD4  F00E         	goto	l476
  5541   001CCE                     l465:
  5542                           
  5543                           ;MCAL_Layer/ADC/hal_adc.c: 176:             (ANSELbits.ANS2 = 1);
  5544   001CCE  847E               	bsf	126,2,c	;volatile
  5545   001CD0                     
  5546                           ;MCAL_Layer/ADC/hal_adc.c: 177:             (TRISA |= (1 << 0x2));
  5547   001CD0  8492               	bsf	146,2,c	;volatile
  5548                           
  5549                           ;MCAL_Layer/ADC/hal_adc.c: 178:             break;
  5550   001CD2  EFD4  F00E         	goto	l476
  5551   001CD6                     l466:
  5552                           
  5553                           ;MCAL_Layer/ADC/hal_adc.c: 180:             (ANSELbits.ANS3 = 1);
  5554   001CD6  867E               	bsf	126,3,c	;volatile
  5555   001CD8                     
  5556                           ;MCAL_Layer/ADC/hal_adc.c: 181:             (TRISA |= (1 << 0x3));
  5557   001CD8  8692               	bsf	146,3,c	;volatile
  5558                           
  5559                           ;MCAL_Layer/ADC/hal_adc.c: 182:             break;
  5560   001CDA  EFD4  F00E         	goto	l476
  5561   001CDE                     l467:
  5562                           
  5563                           ;MCAL_Layer/ADC/hal_adc.c: 184:             (ANSELbits.ANS4 = 1);
  5564   001CDE  887E               	bsf	126,4,c	;volatile
  5565   001CE0                     
  5566                           ;MCAL_Layer/ADC/hal_adc.c: 185:             (TRISA |= (1 << 0x5));
  5567   001CE0  8A92               	bsf	146,5,c	;volatile
  5568                           
  5569                           ;MCAL_Layer/ADC/hal_adc.c: 186:             break;
  5570   001CE2  EFD4  F00E         	goto	l476
  5571   001CE6                     l468:
  5572                           
  5573                           ;MCAL_Layer/ADC/hal_adc.c: 188:             (ANSELbits.ANS5 = 1);
  5574   001CE6  8A7E               	bsf	126,5,c	;volatile
  5575   001CE8                     
  5576                           ;MCAL_Layer/ADC/hal_adc.c: 189:             (TRISE |= (1 << 0x0));
  5577   001CE8  8096               	bsf	150,0,c	;volatile
  5578                           
  5579                           ;MCAL_Layer/ADC/hal_adc.c: 190:             break;
  5580   001CEA  EFD4  F00E         	goto	l476
  5581   001CEE                     l469:
  5582                           
  5583                           ;MCAL_Layer/ADC/hal_adc.c: 192:             (ANSELbits.ANS6 = 1);
  5584   001CEE  8C7E               	bsf	126,6,c	;volatile
  5585   001CF0                     
  5586                           ;MCAL_Layer/ADC/hal_adc.c: 193:             (TRISE |= (1 << 0x1));
  5587   001CF0  8296               	bsf	150,1,c	;volatile
  5588                           
  5589                           ;MCAL_Layer/ADC/hal_adc.c: 194:             break;
  5590   001CF2  EFD4  F00E         	goto	l476
  5591   001CF6                     l470:
  5592                           
  5593                           ;MCAL_Layer/ADC/hal_adc.c: 196:             (ANSELbits.ANS7 = 1);
  5594   001CF6  8E7E               	bsf	126,7,c	;volatile
  5595   001CF8                     
  5596                           ;MCAL_Layer/ADC/hal_adc.c: 197:             (TRISE |= (1 << 0x2));
  5597   001CF8  8496               	bsf	150,2,c	;volatile
  5598                           
  5599                           ;MCAL_Layer/ADC/hal_adc.c: 198:             break;
  5600   001CFA  EFD4  F00E         	goto	l476
  5601   001CFE                     l471:
  5602                           
  5603                           ;MCAL_Layer/ADC/hal_adc.c: 200:             (ANSELHbits.ANS8 = 1);
  5604   001CFE  807F               	bsf	127,0,c	;volatile
  5605   001D00                     
  5606                           ;MCAL_Layer/ADC/hal_adc.c: 201:             (TRISB |= (1 << 0x2));
  5607   001D00  8493               	bsf	147,2,c	;volatile
  5608                           
  5609                           ;MCAL_Layer/ADC/hal_adc.c: 202:             break;
  5610   001D02  EFD4  F00E         	goto	l476
  5611   001D06                     l472:
  5612                           
  5613                           ;MCAL_Layer/ADC/hal_adc.c: 204:             (ANSELHbits.ANS9 = 1);
  5614   001D06  827F               	bsf	127,1,c	;volatile
  5615   001D08                     
  5616                           ;MCAL_Layer/ADC/hal_adc.c: 205:             (TRISB |= (1 << 0x3));
  5617   001D08  8693               	bsf	147,3,c	;volatile
  5618                           
  5619                           ;MCAL_Layer/ADC/hal_adc.c: 206:             break;
  5620   001D0A  EFD4  F00E         	goto	l476
  5621   001D0E                     l473:
  5622                           
  5623                           ;MCAL_Layer/ADC/hal_adc.c: 208:             (ANSELHbits.ANS10 = 1);
  5624   001D0E  847F               	bsf	127,2,c	;volatile
  5625   001D10                     
  5626                           ;MCAL_Layer/ADC/hal_adc.c: 209:             (TRISB |= (1 << 0x1));
  5627   001D10  8293               	bsf	147,1,c	;volatile
  5628                           
  5629                           ;MCAL_Layer/ADC/hal_adc.c: 210:             break;
  5630   001D12  EFD4  F00E         	goto	l476
  5631   001D16                     l474:
  5632                           
  5633                           ;MCAL_Layer/ADC/hal_adc.c: 212:             (ANSELHbits.ANS11 = 1);
  5634   001D16  867F               	bsf	127,3,c	;volatile
  5635   001D18                     
  5636                           ;MCAL_Layer/ADC/hal_adc.c: 213:             (TRISB |= (1 << 0x4));
  5637   001D18  8893               	bsf	147,4,c	;volatile
  5638                           
  5639                           ;MCAL_Layer/ADC/hal_adc.c: 214:             break;
  5640   001D1A  EFD4  F00E         	goto	l476
  5641   001D1E                     l475:
  5642                           
  5643                           ;MCAL_Layer/ADC/hal_adc.c: 216:             (ANSELHbits.ANS12 = 1);
  5644   001D1E  887F               	bsf	127,4,c	;volatile
  5645   001D20                     
  5646                           ;MCAL_Layer/ADC/hal_adc.c: 217:             (TRISB |= (1 << 0x0));
  5647   001D20  8093               	bsf	147,0,c	;volatile
  5648                           
  5649                           ;MCAL_Layer/ADC/hal_adc.c: 218:             break;
  5650   001D22  EFD4  F00E         	goto	l476
  5651   001D26                     l4628:
  5652   001D26  500B               	movf	adc_input_channel_port_configure@channel^0,w,c
  5653   001D28  6E09               	movwf	??_adc_input_channel_port_configure^0,c
  5654   001D2A  6A0A               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  5655                           
  5656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5657                           ; Switch size 1, requested type "simple"
  5658                           ; Number of cases is 1, Range of values is 0 to 0
  5659                           ; switch strategies available:
  5660                           ; Name         Instructions Cycles
  5661                           ; simple_byte            4     3 (average)
  5662                           ;	Chosen strategy is simple_byte
  5663   001D2C  500A               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  5664   001D2E  0A00               	xorlw	0	; case 0
  5665   001D30  B4D8               	btfsc	status,2,c
  5666   001D32  EF9D  F00E         	goto	l6606
  5667   001D36  EFD4  F00E         	goto	l476
  5668   001D3A                     l6606:
  5669                           
  5670                           ; Switch size 1, requested type "simple"
  5671                           ; Number of cases is 13, Range of values is 0 to 12
  5672                           ; switch strategies available:
  5673                           ; Name         Instructions Cycles
  5674                           ; simple_byte           40    21 (average)
  5675                           ;	Chosen strategy is simple_byte
  5676   001D3A  5009               	movf	??_adc_input_channel_port_configure^0,w,c
  5677   001D3C  0A00               	xorlw	0	; case 0
  5678   001D3E  B4D8               	btfsc	status,2,c
  5679   001D40  EF5F  F00E         	goto	l462
  5680   001D44  0A01               	xorlw	1	; case 1
  5681   001D46  B4D8               	btfsc	status,2,c
  5682   001D48  EF63  F00E         	goto	l464
  5683   001D4C  0A03               	xorlw	3	; case 2
  5684   001D4E  B4D8               	btfsc	status,2,c
  5685   001D50  EF67  F00E         	goto	l465
  5686   001D54  0A01               	xorlw	1	; case 3
  5687   001D56  B4D8               	btfsc	status,2,c
  5688   001D58  EF6B  F00E         	goto	l466
  5689   001D5C  0A07               	xorlw	7	; case 4
  5690   001D5E  B4D8               	btfsc	status,2,c
  5691   001D60  EF6F  F00E         	goto	l467
  5692   001D64  0A01               	xorlw	1	; case 5
  5693   001D66  B4D8               	btfsc	status,2,c
  5694   001D68  EF73  F00E         	goto	l468
  5695   001D6C  0A03               	xorlw	3	; case 6
  5696   001D6E  B4D8               	btfsc	status,2,c
  5697   001D70  EF77  F00E         	goto	l469
  5698   001D74  0A01               	xorlw	1	; case 7
  5699   001D76  B4D8               	btfsc	status,2,c
  5700   001D78  EF7B  F00E         	goto	l470
  5701   001D7C  0A0F               	xorlw	15	; case 8
  5702   001D7E  B4D8               	btfsc	status,2,c
  5703   001D80  EF7F  F00E         	goto	l471
  5704   001D84  0A01               	xorlw	1	; case 9
  5705   001D86  B4D8               	btfsc	status,2,c
  5706   001D88  EF83  F00E         	goto	l472
  5707   001D8C  0A03               	xorlw	3	; case 10
  5708   001D8E  B4D8               	btfsc	status,2,c
  5709   001D90  EF87  F00E         	goto	l473
  5710   001D94  0A01               	xorlw	1	; case 11
  5711   001D96  B4D8               	btfsc	status,2,c
  5712   001D98  EF8B  F00E         	goto	l474
  5713   001D9C  0A07               	xorlw	7	; case 12
  5714   001D9E  B4D8               	btfsc	status,2,c
  5715   001DA0  EF8F  F00E         	goto	l475
  5716   001DA4  EFD4  F00E         	goto	l476
  5717   001DA8                     l476:
  5718   001DA8  0012               	return		;funcret
  5719   001DAA                     __end_of_adc_input_channel_port_configure:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _InterruptManager *****************
  5723 ;; Defined at:
  5724 ;;		line 26 in file "MCAL_Layer/interrupt/interrupt_manager.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;Total ram usage:        4 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 3
  5745 ;; This function calls:
  5746 ;;		_ADC_ISR
  5747 ;;		_INT0_ISR
  5748 ;;		_RB4_ISR
  5749 ;;		_TMR0_ISR
  5750 ;;		_TMR1_ISR
  5751 ;;		_TMR2_ISR
  5752 ;;		_TMR3_ISR
  5753 ;; This function is called by:
  5754 ;;		Interrupt level 2
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	intcode
  5759   000008                     __pintcode:
  5760                           	callstack 0
  5761   000008                     _InterruptManager:
  5762                           	callstack 21
  5763                           
  5764                           ;incstack = 0
  5765   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5766   00000A  CFFA F005          	movff	pclath,??_InterruptManager
  5767   00000E  CFFB F006          	movff	pclatu,??_InterruptManager+1
  5768   000012  CFD9 F007          	movff	fsr2l,??_InterruptManager+2
  5769   000016  CFDA F008          	movff	fsr2h,??_InterruptManager+3
  5770   00001A                     
  5771                           ;MCAL_Layer/interrupt/interrupt_manager.c: 27:     if ((INTCONbits.INT0IE == 1) && (INTC
      +                          ONbits.INT0IF == 1)) {
  5772   00001A  A8F2               	btfss	242,4,c	;volatile
  5773   00001C  EF12  F000         	goto	i2u485_41
  5774   000020  EF14  F000         	goto	i2u485_40
  5775   000024                     i2u485_41:
  5776   000024  EF1D  F000         	goto	i2l902
  5777   000028                     i2u485_40:
  5778   000028  A2F2               	btfss	242,1,c	;volatile
  5779   00002A  EF19  F000         	goto	i2u486_41
  5780   00002E  EF1B  F000         	goto	i2u486_40
  5781   000032                     i2u486_41:
  5782   000032  EF1D  F000         	goto	i2l902
  5783   000036                     i2u486_40:
  5784   000036                     
  5785                           ;MCAL_Layer/interrupt/interrupt_manager.c: 28:         INT0_ISR();
  5786   000036  ECC2  F014         	call	_INT0_ISR	;wreg free
  5787   00003A                     i2l902:
  5788                           
  5789                           ;MCAL_Layer/interrupt/interrupt_manager.c: 37:     if ((INTCONbits.RBIE == 1) && (INTCON
      +                          bits.RBIF == 1) && (IOCBbits.IOCB4 == 1) && (PORTBbits.RB4 == GPIO_HIGH)) {
  5790   00003A  A6F2               	btfss	242,3,c	;volatile
  5791   00003C  EF22  F000         	goto	i2u487_41
  5792   000040  EF24  F000         	goto	i2u487_40
  5793   000044                     i2u487_41:
  5794   000044  EF3E  F000         	goto	i2l903
  5795   000048                     i2u487_40:
  5796   000048  A0F2               	btfss	242,0,c	;volatile
  5797   00004A  EF29  F000         	goto	i2u488_41
  5798   00004E  EF2B  F000         	goto	i2u488_40
  5799   000052                     i2u488_41:
  5800   000052  EF3E  F000         	goto	i2l903
  5801   000056                     i2u488_40:
  5802   000056  A87D               	btfss	125,4,c	;volatile
  5803   000058  EF30  F000         	goto	i2u489_41
  5804   00005C  EF32  F000         	goto	i2u489_40
  5805   000060                     i2u489_41:
  5806   000060  EF3E  F000         	goto	i2l903
  5807   000064                     i2u489_40:
  5808   000064  A881               	btfss	129,4,c	;volatile
  5809   000066  EF37  F000         	goto	i2u490_41
  5810   00006A  EF39  F000         	goto	i2u490_40
  5811   00006E                     i2u490_41:
  5812   00006E  EF3E  F000         	goto	i2l903
  5813   000072                     i2u490_40:
  5814   000072                     
  5815                           ;MCAL_Layer/interrupt/interrupt_manager.c: 38:         RB4_ISR(1);
  5816   000072  0E01               	movlw	1
  5817   000074  ECA0  F014         	call	_RB4_ISR
  5818                           
  5819                           ;MCAL_Layer/interrupt/interrupt_manager.c: 39:     } else if ((INTCONbits.RBIE == 1) && 
      +                          (INTCONbits.RBIF == 1) && (IOCBbits.IOCB4 == 1) && (PORTBbits.RB4 == GPIO_LOW)) {
  5820   000078  EF5D  F000         	goto	i2l904
  5821   00007C                     i2l903:
  5822   00007C  A6F2               	btfss	242,3,c	;volatile
  5823   00007E  EF43  F000         	goto	i2u491_41
  5824   000082  EF45  F000         	goto	i2u491_40
  5825   000086                     i2u491_41:
  5826   000086  EF5D  F000         	goto	i2l904
  5827   00008A                     i2u491_40:
  5828   00008A  A0F2               	btfss	242,0,c	;volatile
  5829   00008C  EF4A  F000         	goto	i2u492_41
  5830   000090  EF4C  F000         	goto	i2u492_40
  5831   000094                     i2u492_41:
  5832   000094  EF5D  F000         	goto	i2l904
  5833   000098                     i2u492_40:
  5834   000098  A87D               	btfss	125,4,c	;volatile
  5835   00009A  EF51  F000         	goto	i2u493_41
  5836   00009E  EF53  F000         	goto	i2u493_40
  5837   0000A2                     i2u493_41:
  5838   0000A2  EF5D  F000         	goto	i2l904
  5839   0000A6                     i2u493_40:
  5840   0000A6  B881               	btfsc	129,4,c	;volatile
  5841   0000A8  EF58  F000         	goto	i2u494_41
  5842   0000AC  EF5A  F000         	goto	i2u494_40
  5843   0000B0                     i2u494_41:
  5844   0000B0  EF5D  F000         	goto	i2l904
  5845   0000B4                     i2u494_40:
  5846   0000B4                     
  5847                           ;MCAL_Layer/interrupt/interrupt_manager.c: 40:         RB4_ISR(0);
  5848   0000B4  0E00               	movlw	0
  5849   0000B6  ECA0  F014         	call	_RB4_ISR
  5850   0000BA                     i2l904:
  5851                           
  5852                           ;MCAL_Layer/interrupt/interrupt_manager.c: 44:     if ((1 == PIE1bits.ADIE) && (1 == PIR
      +                          1bits.ADIF)) {
  5853   0000BA  AC9D               	btfss	157,6,c	;volatile
  5854   0000BC  EF62  F000         	goto	i2u495_41
  5855   0000C0  EF64  F000         	goto	i2u495_40
  5856   0000C4                     i2u495_41:
  5857   0000C4  EF6D  F000         	goto	i2l908
  5858   0000C8                     i2u495_40:
  5859   0000C8  AC9E               	btfss	158,6,c	;volatile
  5860   0000CA  EF69  F000         	goto	i2u496_41
  5861   0000CE  EF6B  F000         	goto	i2u496_40
  5862   0000D2                     i2u496_41:
  5863   0000D2  EF6D  F000         	goto	i2l908
  5864   0000D6                     i2u496_40:
  5865   0000D6                     
  5866                           ;MCAL_Layer/interrupt/interrupt_manager.c: 45:         ADC_ISR();
  5867   0000D6  EC7C  F014         	call	_ADC_ISR	;wreg free
  5868   0000DA                     i2l908:
  5869                           
  5870                           ;MCAL_Layer/interrupt/interrupt_manager.c: 50:     if ((1 == INTCONbits.TMR0IE) && (1 ==
      +                           INTCONbits.TMR0IF)) {
  5871   0000DA  AAF2               	btfss	242,5,c	;volatile
  5872   0000DC  EF72  F000         	goto	i2u497_41
  5873   0000E0  EF74  F000         	goto	i2u497_40
  5874   0000E4                     i2u497_41:
  5875   0000E4  EF7D  F000         	goto	i2l910
  5876   0000E8                     i2u497_40:
  5877   0000E8  A4F2               	btfss	242,2,c	;volatile
  5878   0000EA  EF79  F000         	goto	i2u498_41
  5879   0000EE  EF7B  F000         	goto	i2u498_40
  5880   0000F2                     i2u498_41:
  5881   0000F2  EF7D  F000         	goto	i2l910
  5882   0000F6                     i2u498_40:
  5883   0000F6                     
  5884                           ;MCAL_Layer/interrupt/interrupt_manager.c: 51:         TMR0_ISR();
  5885   0000F6  ECC0  F014         	call	_TMR0_ISR	;wreg free
  5886   0000FA                     i2l910:
  5887                           
  5888                           ;MCAL_Layer/interrupt/interrupt_manager.c: 55:     if ((1 == PIE1bits.TMR1IE) && (1 == P
      +                          IR1bits.TMR1IF)) {
  5889   0000FA  A09D               	btfss	157,0,c	;volatile
  5890   0000FC  EF82  F000         	goto	i2u499_41
  5891   000100  EF84  F000         	goto	i2u499_40
  5892   000104                     i2u499_41:
  5893   000104  EF8D  F000         	goto	i2l912
  5894   000108                     i2u499_40:
  5895   000108  A09E               	btfss	158,0,c	;volatile
  5896   00010A  EF89  F000         	goto	i2u500_41
  5897   00010E  EF8B  F000         	goto	i2u500_40
  5898   000112                     i2u500_41:
  5899   000112  EF8D  F000         	goto	i2l912
  5900   000116                     i2u500_40:
  5901   000116                     
  5902                           ;MCAL_Layer/interrupt/interrupt_manager.c: 56:         TMR1_ISR();
  5903   000116  ECBE  F014         	call	_TMR1_ISR	;wreg free
  5904   00011A                     i2l912:
  5905                           
  5906                           ;MCAL_Layer/interrupt/interrupt_manager.c: 60:     if ((1 == PIE1bits.TMR2IE) && (1 == P
      +                          IR1bits.TMR2IF)) {
  5907   00011A  A29D               	btfss	157,1,c	;volatile
  5908   00011C  EF92  F000         	goto	i2u501_41
  5909   000120  EF94  F000         	goto	i2u501_40
  5910   000124                     i2u501_41:
  5911   000124  EF9D  F000         	goto	i2l914
  5912   000128                     i2u501_40:
  5913   000128  A29E               	btfss	158,1,c	;volatile
  5914   00012A  EF99  F000         	goto	i2u502_41
  5915   00012E  EF9B  F000         	goto	i2u502_40
  5916   000132                     i2u502_41:
  5917   000132  EF9D  F000         	goto	i2l914
  5918   000136                     i2u502_40:
  5919   000136                     
  5920                           ;MCAL_Layer/interrupt/interrupt_manager.c: 61:         TMR2_ISR();
  5921   000136  ECBC  F014         	call	_TMR2_ISR	;wreg free
  5922   00013A                     i2l914:
  5923                           
  5924                           ;MCAL_Layer/interrupt/interrupt_manager.c: 65:     if ((1 == PIE2bits.TMR3IE) && (1 == P
      +                          IR2bits.TMR3IF)) {
  5925   00013A  A2A0               	btfss	160,1,c	;volatile
  5926   00013C  EFA2  F000         	goto	i2u503_41
  5927   000140  EFA4  F000         	goto	i2u503_40
  5928   000144                     i2u503_41:
  5929   000144  EFAD  F000         	goto	i2l917
  5930   000148                     i2u503_40:
  5931   000148  A2A1               	btfss	161,1,c	;volatile
  5932   00014A  EFA9  F000         	goto	i2u504_41
  5933   00014E  EFAB  F000         	goto	i2u504_40
  5934   000152                     i2u504_41:
  5935   000152  EFAD  F000         	goto	i2l917
  5936   000156                     i2u504_40:
  5937   000156                     
  5938                           ;MCAL_Layer/interrupt/interrupt_manager.c: 66:         TMR3_ISR();
  5939   000156  ECBA  F014         	call	_TMR3_ISR	;wreg free
  5940   00015A                     i2l917:
  5941   00015A  C008  FFDA         	movff	??_InterruptManager+3,fsr2h
  5942   00015E  C007  FFD9         	movff	??_InterruptManager+2,fsr2l
  5943   000162  C006  FFFB         	movff	??_InterruptManager+1,pclatu
  5944   000166  C005  FFFA         	movff	??_InterruptManager,pclath
  5945   00016A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5946   00016C  0011               	retfie		f
  5947   00016E                     __end_of_InterruptManager:
  5948                           	callstack 0
  5949                           
  5950 ;; *************** function _TMR3_ISR *****************
  5951 ;; Defined at:
  5952 ;;		line 185 in file "MCAL_Layer/Timers/hal_timer3.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		None
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;Total ram usage:        0 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_InterruptManager
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text36
  5980   002974                     __ptext36:
  5981                           	callstack 0
  5982   002974                     _TMR3_ISR:
  5983                           	callstack 23
  5984   002974                     
  5985                           ;MCAL_Layer/Timers/hal_timer3.c: 186:     (PIR2bits.TMR3IF = 0);
  5986   002974  92A1               	bcf	161,1,c	;volatile
  5987   002976  0012               	return		;funcret
  5988   002978                     __end_of_TMR3_ISR:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _TMR2_ISR *****************
  5992 ;; Defined at:
  5993 ;;		line 130 in file "MCAL_Layer/Timers/hal_timer2.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		None
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_InterruptManager
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text37
  6021   002978                     __ptext37:
  6022                           	callstack 0
  6023   002978                     _TMR2_ISR:
  6024                           	callstack 23
  6025   002978                     
  6026                           ;MCAL_Layer/Timers/hal_timer2.c: 131:     (PIR1bits.TMR2IF = 0);
  6027   002978  929E               	bcf	158,1,c	;volatile
  6028   00297A  0012               	return		;funcret
  6029   00297C                     __end_of_TMR2_ISR:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _TMR1_ISR *****************
  6033 ;; Defined at:
  6034 ;;		line 187 in file "MCAL_Layer/Timers/hal_timer1.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		None
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;Total ram usage:        0 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_InterruptManager
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text38
  6062   00297C                     __ptext38:
  6063                           	callstack 0
  6064   00297C                     _TMR1_ISR:
  6065                           	callstack 23
  6066   00297C                     
  6067                           ;MCAL_Layer/Timers/hal_timer1.c: 188:     (PIR1bits.TMR1IF = 0);
  6068   00297C  909E               	bcf	158,0,c	;volatile
  6069   00297E  0012               	return		;funcret
  6070   002980                     __end_of_TMR1_ISR:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _TMR0_ISR *****************
  6074 ;; Defined at:
  6075 ;;		line 199 in file "MCAL_Layer/Timers/hal_timer0.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		None
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_InterruptManager
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text39
  6103   002980                     __ptext39:
  6104                           	callstack 0
  6105   002980                     _TMR0_ISR:
  6106                           	callstack 23
  6107   002980                     
  6108                           ;MCAL_Layer/Timers/hal_timer0.c: 200:     (INTCONbits.TMR0IF = 0);
  6109   002980  94F2               	bcf	242,2,c	;volatile
  6110   002982  0012               	return		;funcret
  6111   002984                     __end_of_TMR0_ISR:
  6112                           	callstack 0
  6113                           
  6114 ;; *************** function _RB4_ISR *****************
  6115 ;; Defined at:
  6116 ;;		line 579 in file "MCAL_Layer/interrupt/external_interrupt.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  source          1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  source          1    0[COMRAM] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;Total ram usage:        1 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_InterruptManager
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text40
  6144   002940                     __ptext40:
  6145                           	callstack 0
  6146   002940                     _RB4_ISR:
  6147                           	callstack 23
  6148                           
  6149                           ;incstack = 0
  6150                           ;RB4_ISR@source stored from wreg
  6151   002940  6E01               	movwf	RB4_ISR@source^0,c
  6152   002942                     
  6153                           ;MCAL_Layer/interrupt/external_interrupt.c: 580:     (INTCONbits.RBIF = 0);
  6154   002942  90F2               	bcf	242,0,c	;volatile
  6155   002944                     
  6156                           ;MCAL_Layer/interrupt/external_interrupt.c: 581:     if (source == 1) {
  6157   002944  0401               	decf	RB4_ISR@source^0,w,c
  6158   002946  A4D8               	btfss	status,2,c
  6159   002948  EFA8  F014         	goto	i2u372_41
  6160   00294C  EFAA  F014         	goto	i2u372_40
  6161   002950                     i2u372_41:
  6162   002950  EFAC  F014         	goto	i2l4988
  6163   002954                     i2u372_40:
  6164   002954  EFAC  F014         	goto	i2l868
  6165   002958                     i2l4988:
  6166   002958                     i2l868:
  6167   002958  0012               	return		;funcret
  6168   00295A                     __end_of_RB4_ISR:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _INT0_ISR *****************
  6172 ;; Defined at:
  6173 ;;		line 384 in file "MCAL_Layer/interrupt/external_interrupt.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		None
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_InterruptManager
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text41
  6201   002984                     __ptext41:
  6202                           	callstack 0
  6203   002984                     _INT0_ISR:
  6204                           	callstack 23
  6205   002984                     
  6206                           ;MCAL_Layer/interrupt/external_interrupt.c: 385:     (INTCONbits.INT0IF = 0);
  6207   002984  92F2               	bcf	242,1,c	;volatile
  6208   002986  0012               	return		;funcret
  6209   002988                     __end_of_INT0_ISR:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _ADC_ISR *****************
  6213 ;; Defined at:
  6214 ;;		line 254 in file "MCAL_Layer/ADC/hal_adc.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 2
  6235 ;; This function calls:
  6236 ;;		NULL
  6237 ;;		_ADC_Interrupt
  6238 ;; This function is called by:
  6239 ;;		_InterruptManager
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text42
  6244   0028F8                     __ptext42:
  6245                           	callstack 0
  6246   0028F8                     _ADC_ISR:
  6247                           	callstack 21
  6248   0028F8                     
  6249                           ;MCAL_Layer/ADC/hal_adc.c: 255:     (PIR1bits.ADIF = 0);
  6250   0028F8  9C9E               	bcf	158,6,c	;volatile
  6251   0028FA                     
  6252                           ;MCAL_Layer/ADC/hal_adc.c: 256:     if (ADC_Interrupt_Handler) {
  6253   0028FA  503A               	movf	_ADC_Interrupt_Handler^0,w,c
  6254   0028FC  103B               	iorwf	(_ADC_Interrupt_Handler+1)^0,w,c
  6255   0028FE  B4D8               	btfsc	status,2,c
  6256   002900  EF84  F014         	goto	i2u369_41
  6257   002904  EF86  F014         	goto	i2u369_40
  6258   002908                     i2u369_41:
  6259   002908  EF92  F014         	goto	i2l505
  6260   00290C                     i2u369_40:
  6261   00290C                     
  6262                           ;MCAL_Layer/ADC/hal_adc.c: 257:         ADC_Interrupt_Handler();
  6263   00290C  D802               	call	i2u370_48
  6264   00290E  EF92  F014         	goto	i2u370_49
  6265   002912                     i2u370_48:
  6266   002912  0005               	push	
  6267   002914  6EFA               	movwf	pclath,c
  6268   002916  503A               	movf	_ADC_Interrupt_Handler^0,w,c
  6269   002918  6EFD               	movwf	tosl,c
  6270   00291A  503B               	movf	(_ADC_Interrupt_Handler+1)^0,w,c
  6271   00291C  6EFE               	movwf	tosh,c
  6272   00291E  6AFF               	clrf	tosu,c
  6273   002920  50FA               	movf	pclath,w,c
  6274   002922  0012               	return		;indir
  6275   002924                     i2u370_49:
  6276   002924                     i2l505:
  6277   002924  0012               	return		;funcret
  6278   002926                     __end_of_ADC_ISR:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _ADC_Interrupt *****************
  6282 ;; Defined at:
  6283 ;;		line 60 in file "application.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 1
  6304 ;; This function calls:
  6305 ;;		_ADC_GetConversionResult
  6306 ;; This function is called by:
  6307 ;;		_ADC_ISR
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text43
  6312   002274                     __ptext43:
  6313                           	callstack 0
  6314   002274                     _ADC_Interrupt:
  6315                           	callstack 21
  6316   002274                     
  6317                           ;application.c: 61:     if (ADC_flag == 0) {
  6318   002274  503E               	movf	_ADC_flag^0,w,c
  6319   002276  A4D8               	btfss	status,2,c
  6320   002278  EF40  F011         	goto	i2u348_41
  6321   00227C  EF42  F011         	goto	i2u348_40
  6322   002280                     i2u348_41:
  6323   002280  EF4D  F011         	goto	i2l4826
  6324   002284                     i2u348_40:
  6325   002284                     
  6326                           ;application.c: 62:         ret = ADC_GetConversionResult(&adc_1, &adc_res_1);
  6327   002284  0ECB               	movlw	low _adc_1
  6328   002286  6E01               	movwf	ADC_GetConversionResult@adc^0,c
  6329   002288  0E4B               	movlw	low _adc_res_1
  6330   00228A  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6331   00228C  ECA8  F00F         	call	_ADC_GetConversionResult	;wreg free
  6332   002290  6E4D               	movwf	_ret^0,c
  6333   002292                     
  6334                           ;application.c: 63:         ADC_flag = 1;
  6335   002292  0E01               	movlw	1
  6336   002294  6E3E               	movwf	_ADC_flag^0,c
  6337                           
  6338                           ;application.c: 64:     } else if (ADC_flag == 1) {
  6339   002296  EF72  F011         	goto	i2l999
  6340   00229A                     i2l4826:
  6341   00229A  043E               	decf	_ADC_flag^0,w,c
  6342   00229C  A4D8               	btfss	status,2,c
  6343   00229E  EF53  F011         	goto	i2u349_41
  6344   0022A2  EF55  F011         	goto	i2u349_40
  6345   0022A6                     i2u349_41:
  6346   0022A6  EF60  F011         	goto	i2l4832
  6347   0022AA                     i2u349_40:
  6348   0022AA                     
  6349                           ;application.c: 65:         ret = ADC_GetConversionResult(&adc_1, &adc_res_2);
  6350   0022AA  0ECB               	movlw	low _adc_1
  6351   0022AC  6E01               	movwf	ADC_GetConversionResult@adc^0,c
  6352   0022AE  0E49               	movlw	low _adc_res_2
  6353   0022B0  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6354   0022B2  ECA8  F00F         	call	_ADC_GetConversionResult	;wreg free
  6355   0022B6  6E4D               	movwf	_ret^0,c
  6356   0022B8                     
  6357                           ;application.c: 66:         ADC_flag = 2;
  6358   0022B8  0E02               	movlw	2
  6359   0022BA  6E3E               	movwf	_ADC_flag^0,c
  6360                           
  6361                           ;application.c: 67:     } else if (ADC_flag == 2) {
  6362   0022BC  EF72  F011         	goto	i2l999
  6363   0022C0                     i2l4832:
  6364   0022C0  0E02               	movlw	2
  6365   0022C2  183E               	xorwf	_ADC_flag^0,w,c
  6366   0022C4  A4D8               	btfss	status,2,c
  6367   0022C6  EF67  F011         	goto	i2u350_41
  6368   0022CA  EF69  F011         	goto	i2u350_40
  6369   0022CE                     i2u350_41:
  6370   0022CE  EF72  F011         	goto	i2l999
  6371   0022D2                     i2u350_40:
  6372   0022D2                     
  6373                           ;application.c: 68:         ret = ADC_GetConversionResult(&adc_1, &lm35_res);
  6374   0022D2  0ECB               	movlw	low _adc_1
  6375   0022D4  6E01               	movwf	ADC_GetConversionResult@adc^0,c
  6376   0022D6  0E47               	movlw	low _lm35_res
  6377   0022D8  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6378   0022DA  ECA8  F00F         	call	_ADC_GetConversionResult	;wreg free
  6379   0022DE  6E4D               	movwf	_ret^0,c
  6380   0022E0                     
  6381                           ;application.c: 69:         ADC_flag = 0;
  6382   0022E0  0E00               	movlw	0
  6383   0022E2  6E3E               	movwf	_ADC_flag^0,c
  6384   0022E4                     i2l999:
  6385   0022E4  0012               	return		;funcret
  6386   0022E6                     __end_of_ADC_Interrupt:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _ADC_GetConversionResult *****************
  6390 ;; Defined at:
  6391 ;;		line 117 in file "MCAL_Layer/ADC/hal_adc.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  adc             1    0[COMRAM] PTR const struct .
  6394 ;;		 -> adc_1(8), 
  6395 ;;  conversion_r    1    1[COMRAM] PTR unsigned short 
  6396 ;;		 -> lm35_res(2), adc_res_2(2), adc_res_1(2), 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  ret             1    0        unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      unsigned char 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;Total ram usage:        4 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_ADC_Interrupt
  6418 ;;		_ADC_GetConversion_Blocking
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text44
  6423   001F50                     __ptext44:
  6424                           	callstack 0
  6425   001F50                     _ADC_GetConversionResult:
  6426                           	callstack 21
  6427   001F50                     
  6428                           ;MCAL_Layer/ADC/hal_adc.c: 119:     if ((((void*)0) == adc) || (((void*)0) == conversion
      +                          _result)) {
  6429   001F50  5001               	movf	ADC_GetConversionResult@adc^0,w,c
  6430   001F52  B4D8               	btfsc	status,2,c
  6431   001F54  EFAE  F00F         	goto	i2u333_41
  6432   001F58  EFB0  F00F         	goto	i2u333_40
  6433   001F5C                     i2u333_41:
  6434   001F5C  EFB8  F00F         	goto	i2l4658
  6435   001F60                     i2u333_40:
  6436   001F60  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6437   001F62  A4D8               	btfss	status,2,c
  6438   001F64  EFB6  F00F         	goto	i2u334_41
  6439   001F68  EFB8  F00F         	goto	i2u334_40
  6440   001F6C                     i2u334_41:
  6441   001F6C  EFBA  F00F         	goto	i2l4660
  6442   001F70                     i2u334_40:
  6443   001F70                     i2l4658:
  6444                           
  6445                           ;MCAL_Layer/ADC/hal_adc.c: 121:     } else {
  6446   001F70  EFFF  F00F         	goto	i2l4670
  6447   001F74                     i2l4660:
  6448                           
  6449                           ;MCAL_Layer/ADC/hal_adc.c: 122:         if (0x01U == adc->result_format) {
  6450   001F74  5001               	movf	ADC_GetConversionResult@adc^0,w,c
  6451   001F76  6ED9               	movwf	fsr2l,c
  6452   001F78  6ADA               	clrf	fsr2h,c
  6453   001F7A  0E07               	movlw	7
  6454   001F7C  26D9               	addwf	fsr2l,f,c
  6455   001F7E  04DE               	decf	postinc2,w,c
  6456   001F80  A4D8               	btfss	status,2,c
  6457   001F82  EFC5  F00F         	goto	i2u335_41
  6458   001F86  EFC7  F00F         	goto	i2u335_40
  6459   001F8A                     i2u335_41:
  6460   001F8A  EFDA  F00F         	goto	i2l4664
  6461   001F8E                     i2u335_40:
  6462   001F8E                     i2l4662:
  6463                           
  6464                           ;MCAL_Layer/ADC/hal_adc.c: 123:             *conversion_result = (uint16) ((ADRESH << 8)
      +                           + ADRESL);
  6465   001F8E  50C3               	movf	195,w,c	;volatile
  6466   001F90  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6467   001F94  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6468   001F96  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6469   001F9A  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6470   001F9C  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6471   001F9E  0E00               	movlw	0
  6472   001FA0  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6473   001FA2  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6474   001FA4  6ED9               	movwf	fsr2l,c
  6475   001FA6  6ADA               	clrf	fsr2h,c
  6476   001FA8  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6477   001FAC  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6478                           
  6479                           ;MCAL_Layer/ADC/hal_adc.c: 124:         } else if (0x00U == adc->result_format) {
  6480   001FB0  EFFF  F00F         	goto	i2l4670
  6481   001FB4                     i2l4664:
  6482   001FB4  5001               	movf	ADC_GetConversionResult@adc^0,w,c
  6483   001FB6  6ED9               	movwf	fsr2l,c
  6484   001FB8  6ADA               	clrf	fsr2h,c
  6485   001FBA  0E07               	movlw	7
  6486   001FBC  26D9               	addwf	fsr2l,f,c
  6487   001FBE  50DF               	movf	indf2,w,c
  6488   001FC0  A4D8               	btfss	status,2,c
  6489   001FC2  EFE5  F00F         	goto	i2u336_41
  6490   001FC6  EFE7  F00F         	goto	i2u336_40
  6491   001FCA                     i2u336_41:
  6492   001FCA  EFC7  F00F         	goto	i2l4662
  6493   001FCE                     i2u336_40:
  6494   001FCE                     
  6495                           ;MCAL_Layer/ADC/hal_adc.c: 125:             *conversion_result = (uint16) (((ADRESH << 8
      +                          ) + ADRESL) << 6);
  6496   001FCE  50C3               	movf	195,w,c	;volatile
  6497   001FD0  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6498   001FD4  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6499   001FD6  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6500   001FDA  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6501   001FDC  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6502   001FDE  0E00               	movlw	0
  6503   001FE0  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6504   001FE2  0E06               	movlw	6
  6505   001FE4                     i2u337_45:
  6506   001FE4  90D8               	bcf	status,0,c
  6507   001FE6  3603               	rlcf	??_ADC_GetConversionResult^0,f,c
  6508   001FE8  3604               	rlcf	(??_ADC_GetConversionResult+1)^0,f,c
  6509   001FEA  2EE8               	decfsz	wreg,f,c
  6510   001FEC  EFF2  F00F         	goto	i2u337_45
  6511   001FF0  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6512   001FF2  6ED9               	movwf	fsr2l,c
  6513   001FF4  6ADA               	clrf	fsr2h,c
  6514   001FF6  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6515   001FFA  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6516   001FFE                     i2l4670:
  6517                           
  6518                           ;MCAL_Layer/ADC/hal_adc.c: 131:     return ret;
  6519   001FFE  0E00               	movlw	0
  6520   002000  0012               	return		;funcret
  6521   002002                     __end_of_ADC_GetConversionResult:
  6522                           	callstack 0
  6523                           
  6524                           	psect	rparam
  6525   000000                     
  6526                           	psect	temp
  6527   000056                     btemp:
  6528                           	callstack 0
  6529   000056                     	ds	1
  6530   000000                     int$flags	set	btemp
  6531   000000                     wtemp8	set	btemp+1
  6532   000000                     ttemp5	set	btemp+1
  6533   000000                     ttemp6	set	btemp+4
  6534   000000                     ttemp7	set	btemp+8
  6535                           
  6536                           	psect	config
  6537                           
  6538                           ; Padding undefined space
  6539   300000                     	org	3145728
  6540   300000  FF                 	db	255
  6541                           
  6542                           ;Config register CONFIG1H @ 0x300001
  6543                           ;	Oscillator Selection bits
  6544                           ;	FOSC = HS, HS oscillator
  6545                           ;	Fail-Safe Clock Monitor Enable bit
  6546                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6547                           ;	Internal/External Oscillator Switchover bit
  6548                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6549   300001                     	org	3145729
  6550   300001  02                 	db	2
  6551                           
  6552                           ;Config register CONFIG2L @ 0x300002
  6553                           ;	Power-up Timer Enable bit
  6554                           ;	PWRTEN = OFF, PWRT disabled
  6555                           ;	Brown-out Reset Enable bits
  6556                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6557                           ;	Brown Out Reset Voltage bits
  6558                           ;	BORV = 18, VBOR set to 1.8 V nominal
  6559   300002                     	org	3145730
  6560   300002  19                 	db	25
  6561                           
  6562                           ;Config register CONFIG2H @ 0x300003
  6563                           ;	Watchdog Timer Enable bit
  6564                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  6565                           ;	Watchdog Timer Postscale Select bits
  6566                           ;	WDTPS = 32768, 1:32768
  6567   300003                     	org	3145731
  6568   300003  1F                 	db	31
  6569                           
  6570                           ; Padding undefined space
  6571   300004                     	org	3145732
  6572   300004  FF                 	db	255
  6573                           
  6574                           ;Config register CONFIG3H @ 0x300005
  6575                           ;	CCP2 MUX bit
  6576                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6577                           ;	PORTB A/D Enable bit
  6578                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6579                           ;	Low-Power Timer1 Oscillator Enable bit
  6580                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6581                           ;	HFINTOSC Fast Start-up
  6582                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  6583                           ;	MCLR Pin Enable bit
  6584                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6585   300005                     	org	3145733
  6586   300005  81                 	db	129
  6587                           
  6588                           ;Config register CONFIG4L @ 0x300006
  6589                           ;	Stack Full/Underflow Reset Enable bit
  6590                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6591                           ;	Single-Supply ICSP Enable bit
  6592                           ;	LVP = OFF, Single-Supply ICSP disabled
  6593                           ;	Extended Instruction Set Enable bit
  6594                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6595                           ;	Background Debugger Enable bit
  6596                           ;	DEBUG = 0x1, unprogrammed default
  6597   300006                     	org	3145734
  6598   300006  81                 	db	129
  6599                           
  6600                           ; Padding undefined space
  6601   300007                     	org	3145735
  6602   300007  FF                 	db	255
  6603                           
  6604                           ;Config register CONFIG5L @ 0x300008
  6605                           ;	Code Protection Block 0
  6606                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6607                           ;	Code Protection Block 1
  6608                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6609                           ;	Code Protection Block 2
  6610                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6611                           ;	Code Protection Block 3
  6612                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6613   300008                     	org	3145736
  6614   300008  0F                 	db	15
  6615                           
  6616                           ;Config register CONFIG5H @ 0x300009
  6617                           ;	Boot Block Code Protection bit
  6618                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6619                           ;	Data EEPROM Code Protection bit
  6620                           ;	CPD = OFF, Data EEPROM not code-protected
  6621   300009                     	org	3145737
  6622   300009  C0                 	db	192
  6623                           
  6624                           ;Config register CONFIG6L @ 0x30000A
  6625                           ;	Write Protection Block 0
  6626                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6627                           ;	Write Protection Block 1
  6628                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6629                           ;	Write Protection Block 2
  6630                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6631                           ;	Write Protection Block 3
  6632                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6633   30000A                     	org	3145738
  6634   30000A  0F                 	db	15
  6635                           
  6636                           ;Config register CONFIG6H @ 0x30000B
  6637                           ;	Configuration Register Write Protection bit
  6638                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6639                           ;	Boot Block Write Protection bit
  6640                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6641                           ;	Data EEPROM Write Protection bit
  6642                           ;	WRTD = OFF, Data EEPROM not write-protected
  6643   30000B                     	org	3145739
  6644   30000B  E0                 	db	224
  6645                           
  6646                           ;Config register CONFIG7L @ 0x30000C
  6647                           ;	Table Read Protection Block 0
  6648                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6649                           ;	Table Read Protection Block 1
  6650                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6651                           ;	Table Read Protection Block 2
  6652                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6653                           ;	Table Read Protection Block 3
  6654                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6655   30000C                     	org	3145740
  6656   30000C  0F                 	db	15
  6657                           
  6658                           ;Config register CONFIG7H @ 0x30000D
  6659                           ;	Boot Block Table Read Protection bit
  6660                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6661   30000D                     	org	3145741
  6662   30000D  40                 	db	64
  6663                           tosu	equ	0xFFF
  6664                           tosh	equ	0xFFE
  6665                           tosl	equ	0xFFD
  6666                           stkptr	equ	0xFFC
  6667                           pclatu	equ	0xFFB
  6668                           pclath	equ	0xFFA
  6669                           pcl	equ	0xFF9
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           prodh	equ	0xFF4
  6675                           prodl	equ	0xFF3
  6676                           indf0	equ	0xFEF
  6677                           postinc0	equ	0xFEE
  6678                           postdec0	equ	0xFED
  6679                           preinc0	equ	0xFEC
  6680                           plusw0	equ	0xFEB
  6681                           fsr0h	equ	0xFEA
  6682                           fsr0l	equ	0xFE9
  6683                           wreg	equ	0xFE8
  6684                           indf1	equ	0xFE7
  6685                           postinc1	equ	0xFE6
  6686                           postdec1	equ	0xFE5
  6687                           preinc1	equ	0xFE4
  6688                           plusw1	equ	0xFE3
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           bsr	equ	0xFE0
  6692                           indf2	equ	0xFDF
  6693                           postinc2	equ	0xFDE
  6694                           postdec2	equ	0xFDD
  6695                           preinc2	equ	0xFDC
  6696                           plusw2	equ	0xFDB
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    16
    Data        61
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      85
    BANK0           160     10     139
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    adc_1$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    ADC_GetConversionResult@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    ADC_GetConversionResult@adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res_1(COMRAM[2]), adc_res_2(COMRAM[2]), lm35_res(COMRAM[2]), 

    ADC_init@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    ADC_init@adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), NULL(), 

    ADC_SelectChannel@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    ADC_StartConversion@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    ADC_StartConversion_Interrupt@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    convert_short_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initializion@pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_columns_pins(BANK0[4]), keypad$keypad_rows_pin(BANK0[4]), lcd_1(BANK0[6]), 
		 -> lcd_1$lcd_data(BANK0[4]), led_initialization@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialization@pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_columns_pins(BANK0[4]), keypad$keypad_rows_pin(BANK0[4]), lcd_1(BANK0[6]), 
		 -> lcd_1$lcd_data(BANK0[4]), led_initialization@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_columns_pins(BANK0[4]), keypad$keypad_rows_pin(BANK0[4]), lcd_1(BANK0[6]), 
		 -> lcd_1$lcd_data(BANK0[4]), led_initialization@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 
		 -> motor1(COMRAM[2]), motor1$motor(COMRAM[2]), motor2(COMRAM[2]), motor2$motor(COMRAM[2]), 
		 -> relay_initialization@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    interrupt_intx_clear_flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_intx_disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_intx_edge_init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_intx_enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_intx_pin_init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj$EXT_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_enable@int_obj$EXT_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj$EXT_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@int_obj$EXT_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_SetInterruptHandler@int_obj$EXT_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_SetInterruptHandler@int_obj$EXT_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 0

    keypad_initialization@keypad	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllhll[1]), LATB(BITBIGSFRlllhlh[1]), LATC(BITBIGSFRlllhlh[1]), LATD(BITBIGSFRlllhlh[1]), 
		 -> LATE(BITBIGSFRlllhlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), STR_4(CODE[9]), STR_5(CODE[8]), 
		 -> STR_6(CODE[7]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_set_cusrsor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    led_initialization@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), led4(COMRAM[1]), 

    motor_move_backward@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    motor_move_forward@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllhll[1]), PORTB(BITBIGSFRlllhll[1]), PORTC(BITBIGSFRlllhll[1]), PORTD(BITBIGSFRlllhll[1]), 
		 -> PORTE(BITBIGSFRlllhll[1]), 

    RB4_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1389$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1432$EXT_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 0

    S1432$EXT_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 0

    S2189$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2347$timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2548$timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2682$timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3330$buffer	PTR unsigned char  size(2) Largest target is 0

    S3330$source	PTR const unsigned char  size(2) Largest target is 0

    S744$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    select_result_format@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    select_result_format@adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    select_voltage_reference@adc	PTR const struct . size(1) Largest target is 8
		 -> adc_1(BANK0[8]), 

    select_voltage_reference@adc$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_Interrupt(), 

    sp__memset	PTR void  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> convert_byte_to_string@temp(COMRAM[4]), convert_int_to_string@temp(COMRAM[11]), convert_short_to_string@temp(BANK0[6]), 

    timer0_init@timer$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_mode_config@timer$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_prescaler_config@timer$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_reg_config@timer$timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer1_init@timer$timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_mode_config@timer$timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_reg_config@timer$timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer2_init@timer$timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Init@timer$timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_mode_config@timer$timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_reg_config@timer$timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllhll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _motor_move_forward->_gpio_pin_write_logic
    _motor_move_backward->_gpio_pin_write_logic
    _lcd_4bit_send_char_string_pos->_lcd_4bit_set_cusrsor
    _lcd_4bit_set_cusrsor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _ecu_layer_initialize->_lcd_4bit_initialize
    _led_initialization->_gpio_pin_initialization
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialization->_gpio_pin_initialization
    _gpio_pin_initialization->_gpio_pin_write_logic
    _ADC_init->_adc_input_channel_port_configure
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _ADC_Interrupt->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_convert_short_to_string

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  114912
                                              8 BANK0      2     2      0
      _ADC_StartConversion_Interrupt
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
            _convert_short_to_string
      _lcd_4bit_send_char_string_pos
              _lcd_4bit_send_command
                _motor_move_backward
                 _motor_move_forward
 ---------------------------------------------------------------------------------
 (1) _motor_move_forward                                   2     1      1    5117
                                             16 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_move_backward                                  2     1      1    5117
                                             16 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_string_pos                        6     1      5   37139
                                             26 COMRAM     6     1      5
            _lcd_4bit_send_char_data
               _lcd_4bit_set_cusrsor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cusrsor                                 4     1      3   18700
                                             22 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16716
                                             19 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                             11     8      3    5077
                                             47 COMRAM     3     0      3
                                              0 BANK0      8     8      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4182
                                             30 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3336
                                             26 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2875
                                             16 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              8 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     601
                                              8 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   40023
                           _ADC_init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0   39436
              _keypad_initialization
                _lcd_4bit_initialize
                 _led_initialization
 ---------------------------------------------------------------------------------
 (3) _led_initialization                                   4     3      1    7164
                                             19 COMRAM     3     2      1
            _gpio_pin_initialization
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  5     4      1   25260
                                             22 COMRAM     5     4      1
            _gpio_pin_initialization
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_command                                3     1      2   18085
                                             19 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (2) _lcd_send_4bit                                        3     1      2    5725
                                             16 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_enable_signal                          2     1      1    5287
                                             16 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialization                                4     3      1    7012
                                             19 COMRAM     3     2      1
            _gpio_pin_initialization
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialization                              3     2      1    6724
                                             16 COMRAM     3     2      1
    _gpio_pin_direction_initializion
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4891
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initializion                      7     6      1     483
                                              8 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             3     2      1     587
                                             11 COMRAM     3     2      1
   _adc_input_channel_port_configure
               _select_result_format
           _select_voltage_reference
 ---------------------------------------------------------------------------------
 (3) _select_voltage_reference                             3     2      1     144
                                              8 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 3     2      1     144
                                              8 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             47 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        3     1      2    1184
                                             14 COMRAM     3     1      2
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     198
                                              8 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     416
                                             11 COMRAM     3     1      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                              8 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     4     4      0     830
                                              4 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                            _RB4_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     786
                                NULL *
                      _ADC_Interrupt *
 ---------------------------------------------------------------------------------
 (9) _ADC_Interrupt                                        0     0      0     786
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversionResult                             5     3      2     786
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_initialize
     _ADC_init
       _adc_input_channel_port_configure
       _select_result_format
       _select_voltage_reference
     _ecu_layer_initialize
       _keypad_initialization
         _gpio_pin_initialization
           _gpio_pin_direction_initializion
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialization
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
       _led_initialization
         _gpio_pin_initialization
   _convert_short_to_string
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___lwdiv
           ___lwmod
           _fputc
             _putch
   _lcd_4bit_send_char_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bit
     _lcd_4bit_set_cusrsor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _motor_move_backward
     _gpio_pin_write_logic
   _motor_move_forward
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_Interrupt *
       _ADC_GetConversionResult
   _INT0_ISR
   _RB4_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      8B       5       86.9%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      55       1       90.4%
BITBIGSFRllll       1D      0       0      48        0.0%
BITBIGSFRhlhlhh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhhhh      C      0       0      41        0.0%
BITBIGSFRllhhl       6      0       0      42        0.0%
BITBIGSFRlllhhh      6      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      38        0.0%
BITBIGSFRhlhlll      5      0       0      40        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRlllhlh      4      0       0      46        0.0%
BITBIGSFRlllhll      4      0       0      47        0.0%
BITBIGSFRhlhlll      1      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100      49        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Oct 11 11:18:25 2024

                       ??_InterruptManager 0005                             ?_lcd_send_4bit 0011  
               __end_of_motor_move_forward 28CA                                         l71 254E  
                                       l66 1E98                                         l76 26C6  
                       _timer3_preload_val 007F                                        l101 21FE  
                                      l201 23C0                                        l220 248A  
                                      l206 279C                                        l311 28C8  
                                      l410 20AC                                        l420 289A  
                                      l500 266A                                        l316 28F6  
                                      l423 293A                                        l408 201A  
                                      l248 25AE                                        l272 23D6  
                                      l425 293E                                        l601 1BAE  
                                      l186 1F4E                                        l371 286A  
                                      l276 2426                                        l470 1CF6  
                                      l462 1CBE                                        l622 260C  
                                      l471 1CFE                                        l472 1D06  
                                      l464 1CC6                                        l473 1D0E  
                                      l465 1CCE                                        l474 1D16  
                                      l466 1CD6                                        l458 2838  
                                      l475 1D1E                                        l467 1CDE  
                                      l483 271C                                        l491 263C  
                                      l468 1CE6                                        l476 1DA8  
                                      l469 1CEE                                        l485 271E  
                                      l582 1A9E                                        l495 265E  
                                      l498 2666                                        l991 2968  
                                      l983 1656                            __end_of_ADC_ISR 2926  
                                      _ret 004D        __end_of_lcd_4bit_send_enable_signal 279E  
              _lcd_4bit_send_enable_signal 2760                                        tosl 0FFD  
                                      wreg 0FE8                               ___flmul@aexp 0028  
                             ___flmul@bexp 0029             ?_ADC_StartConversion_Interrupt 000F  
                             ___flmul@sign 0023                               ___flmul@temp 002E  
                             ___flmul@prod 002A                            __end_of_RB4_ISR 295A  
                             ___fltol@exp1 00E6                                       l2001 2156  
                                     l2012 2988                                       l5100 12A2  
                                     l5020 295E                                       l5110 12F8  
                                     l5102 12B0                                       l5030 105A  
                                     l5022 102E                                       l1558 1CB6  
                                     l5112 1306                                       l5104 12CE  
                                     l5040 1096                                       l5032 106A  
                                     l5024 103A                                       l5200 167E  
                                     l1752 226A                                       l5122 1370  
                                     l5130 13B8                                       l5114 130A  
                                     l5106 12D8                                       l5050 10CC  
                                     l5042 109C                                       l5034 107A  
                                     l5026 1048                                       l1930 17A8  
                                     l5210 16F6                                       l5202 16C4  
                                     l4330 1AB4                                       l5018 295A  
                                     l1762 24E6                                       l1923 174C  
                                     l5140 142C                                       l5132 13D2  
                                     l5124 137C                                       l5116 1318  
                                     l5108 12E6                                       l5052 10DC  
                                     l5044 10AA                                       l5036 1080  
                                     l5028 104A                                       l5220 177E  
                                     l5212 1702                                       l5204 16DA  
                                     l1916 16B4                                       l4340 1B82  
                                     l4332 1AD4                                       l5142 143A  
                                     l5134 13E6                                       l5126 138A  
                                     l5118 1346                                       l5070 115E  
                                     l5062 1126                                       l5054 10E2  
                                     l5046 10AC                                       l5038 1090  
                                     l5230 17BC                                       l5222 178A  
                                     l5214 1734                                       l4350 198E  
                                     l4334 1ADC                                       l4342 1BAC  
                                     l1919 1810                                       l1759 2272  
                                     l4600 1CC0                                       l5144 143C  
                                     l5136 1400                                       l5128 13B4  
                                     l5080 11A8                                       l5072 1176  
                                     l5064 1132                                       l5056 1102  
                                     l5048 10BC                                       l5232 17E0  
                                     l5224 1798                                       l5216 1736  
                                     l5208 16EE                                       l4352 19A2  
                                     l4336 1B32                                       l4328 1AA0  
                                     l4520 1DD6                                       l1769 24EE  
                                     l1945 2804                                       l4610 1CE8  
                                     l4602 1CC8                                       l5138 141C  
                                     l5146 1442                                       l1882 12E8  
                                     l5090 11FE                                       l5082 11B8  
                                     l5074 1182                                       l5066 113C  
                                     l5058 1112                                       l5234 17F0  
                                     l5226 17B6                                       l5218 1742  
                                     l4362 1A70                                       l4354 19C2  
                                     l4450 25EC                                       l4370 2364  
                                     l4530 1DE8                                       l4514 1DAA  
                                     l1875 10F2                                       l4620 1D10  
                                     l4612 1CF0                                       l4604 1CD0  
                                     l5148 1446                                       l1892 1418  
                                     l1884 1360                                       l5092 121A  
                                     l5084 11C4                                       l5076 118E  
                                     l5068 1152                                       l5236 17FE  
                                     l5228 17B8                                       l4356 19CA  
                                     l4364 1A9C                                       l4452 260A  
                                     l4444 25B0                                       l4380 2770  
                                     l4372 236C                                       l4460 2508  
                                     l4540 1E44                                       l4532 1DF8  
                                     l4516 1DBE                                       l6300 24A6  
                                     l4700 244A                                       l1885 134E  
                                     l4622 1D18                                       l4614 1CF8  
                                     l4606 1CD8                                       l5094 1226  
                                     l5086 11D4                                       l5078 119C  
                                     l5238 1800                                       l4358 1A20  
                                     l4446 25C4                                       l4382 2778  
                                     l4374 23BE                                       l4462 2548  
                                     l4550 1E80                                       l4542 1E50  
                                     l4534 1E06                                       l4526 1DDA  
                                     l4518 1DC2                                       l6310 24E0  
                                     l6302 24AE                                       l1982 198C  
                                     l4702 245E                                       l1879 1456  
                                     l4624 1D20                                       l4616 1D00  
                                     l4608 1CE0                                       l4800 286C  
                                     l5096 1242                                       l5088 11EE  
                                     l4640 26F6                                       l4448 25E4  
                                     l4560 256C                                       l4384 2784  
                                     l4368 2354                                       l4464 254C  
                                     l4456 24F0                                       l4552 1E8C  
                                     l4544 1E5C                                       l4536 1E12  
                                     l4528 1DE6                                       l6304 24BC  
                                     l6320 20F4                                       l6312 20AE  
                                     l6400 1EAC                                       l4618 1D08  
                                     l4802 287C                                       l5098 126C  
                                     l4642 26FC                                       l4634 26C8  
                                     l4650 2622                                       l4570 257C  
                                     l4386 278C                                       l4378 2760  
                                     l4458 2500                                       l4546 1E68  
                                     l4538 1E2C                                       l6306 24D2  
                                     l6322 2126                                       l6314 20BE  
                                     l6330 183E                                       l6410 1EF2  
                                     l6402 1EBC                                       l4706 2472  
                                     l4628 1D26                                       l4804 2880  
                                     l4812 2926                                       l5196 1660  
                                     l4644 2716                                       l4636 26D8  
                                     l4652 2644                                       l4580 259C  
                                     l4572 258C                                       l4556 2550  
                                     l4388 279A                                       l4548 1E74  
                                     l6308 24DA                                       l6316 20CE  
                                     l6340 1890                                       l6332 184C  
                                     l6420 1F3E                                       l6412 1F0C  
                                     l6404 1EC4                                       l4708 2488  
                                     l1989 275E                                       l4806 2892  
                                     l4814 2936                                       l6430 1BC8  
                                     l5198 1670                                       l4638 26DC  
                                     l4646 260E                                       l4582 259E  
                                     l4566 2570                                       l4558 2568  
                                     l4590 240C                                       l6318 20D8  
                                     l6350 18F8                                       l6342 189E  
                                     l6334 1850                                       l6326 1812  
                                     l6422 1F48                                       l6414 1F20  
                                     l6406 1EDC                                       l4808 2898  
                                     l4816 293C                                       l6440 1C18  
                                     l4648 261E                                       l4568 257A  
                                     l4592 240E                                       l4584 23C2  
                                     l6280 2222                                       l6352 190C  
                                     l6344 18A2                                       l6360 1942  
                                     l6336 185A                                       l6328 1836  
                                     l6416 1F2C                                       l6408 1EF0  
                                     l6424 1F4C                                       l6520 1458  
                                     l6450 1C42                                       l6442 1C1C  
                                     l6434 1BDC                                       l4770 2002  
                                     l4578 2590                                       l4594 241E  
                                     l4586 23D2                                       l6290 225C  
                                     l6282 222A                                       l6274 2200  
                                     l6354 192A                                       l6346 18CA  
                                     l6338 1878                                       l6362 195C  
                                     l6418 1F2E                                       l4690 26C4  
                                     l4850 2168                                       l6530 14BE  
                                     l6522 145C                                       l6460 1C6A  
                                     l6452 1C4C                                       l6444 1C2A  
                                     l6436 1C06                                       l6428 1BB0  
                                     l4780 2080                                       l4772 2012  
                                     l6604 1B96                                       l4588 23DA  
                                     l6292 225E                                       l6284 2238  
                                     l6276 2208                                       l6356 192C  
                                     l6348 18E6                                       l6372 2720  
                                     l4684 266C                                       l4860 21CA  
                                     l4852 217A                                       l4940 28AC  
                                     l6540 1520                                       l6532 14DC  
                                     l6524 1478                                       l6606 1D3A  
                                     l4598 1CBA                                       l6462 1C76  
                                     l6454 1C56                                       l6438 1C08  
                                     l4790 209C                                       l4782 2082  
                                     l4774 201C                                       l6294 2264  
                                     l6286 223E                                       l6278 221A  
                                     l6366 1968                                       l6374 2728  
                                     l6390 27FA                                       l6382 27D2  
                                     l4686 267C                                       l4694 2428  
                                     l4862 21FC                                       l4854 2182  
                                     l4950 28DE                                       l4942 28B0  
                                     l6550 157C                                       l6542 1532  
                                     l6534 14EC                                       l6526 1494  
                                     l4960 2836                                       l6464 1C86  
                                     l4792 20A4                                       l4784 2084  
                                     l4776 206E                                       l4768 283A  
                                     l6288 2254                                       l6296 248C  
                                     l6376 2738                                       l6384 27DA  
                                     l4688 2684                                       l4696 243C  
                                     l4856 2198                                       l4848 2158  
                                     l6560 162C                                       l6552 1594  
                                     l6544 1540                                       l6536 14FE  
                                     l6528 14A0                                       l4954 2806  
                                     l6466 1C96                                       l4794 20A6  
                                     l4786 2086                                       l4778 207E  
                                     l6298 249E                                       l6378 2756  
                                     l6386 27E2                                       l6394 1E9A  
                                     l4698 2444                                       l4858 21C6  
                                     l4946 28CA                                       l4938 289C  
                                     l6562 1642                                       l6554 15E6  
                                     l6546 1552                                       l6538 150E  
                                     l4956 2816                                       l6468 1CA6  
                                     l4788 2094                                       l4796 20AA  
                                     l6388 27EA                                       l6396 1E9A  
                                     l4948 28DA                                       l6556 1602  
                                     l6548 1564                                       l4958 281E  
                                     l6398 1EA6                                       l6558 1618  
                                     _CFGS 7D36                                       STR_1 1029  
                                     STR_2 1029                                       STR_4 1011  
                                     STR_5 101A                                       STR_6 1022  
                                     u3000 2364                                       u3001 2360  
                                     u3010 2770                                       u3011 276C  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       u4000 167E  
                                     u3120 25C4                                       u3200 1DBE  
                                     _LATD 0F8C                                       u4001 167A  
                                     u3121 25C0                                       u3201 1DBA  
                                     _LATE 0F8D                                       u4010 16DA  
                                     u3130 25E4                                       u3210 1DF8  
                                     u4011 16D6                                       u3131 25E0  
                                     u3211 1DF4                                       u4020 1730  
                                     u3300 261E                                       u3220 2568  
                                     u3140 2500                                       u4021 172C  
                                     u3301 261A                                       u3221 2564  
                                     u3141 24FC                                       u4030 177A  
                                     u3310 263C                                       u3230 258C  
                                     u4031 1776                                       u3311 2638  
                                     u3231 2588                                       u4040 1798  
                                     u3320 265E                                       u3240 25AE  
                                     u3400 243C                                       u4041 1794  
                                     u3321 265A                                       u3241 25AA  
                                     u3401 2438                                       u4050 17A8  
                                     u3250 23D2                                       u4051 17A4  
                                     u3251 23CE                                       u4060 17B6  
                                     u4061 17B2                                       u4070 17F0  
                                     u3270 26D8                                       u4071 17EC  
                                     u3271 26D4                                       u4080 17FE  
                                     u3280 26F6                                       u3520 2168  
                                     u4081 17FA                                       u3281 26F2  
                                     u3265 241C                                       u3521 2164  
                                     u3290 2716                                       u3450 2012  
                                     u3530 217A                                       u3291 2712  
                                     u3451 200E                                       u3267 241E  
                                     u3531 2176                                       u3460 287C  
                                     u3540 21BE                                       u3461 2878  
                                     u3470 2936                                       u2910 1AB4  
                                     u3390 267C                                       u3550 21EC  
                                     u3471 2932                                       u2911 1AB0  
                                     u3391 2678                                       u3800 1112  
                                     u2920 1AD4                                       u3560 21FC  
                                     u3801 110E                                       u2921 1AD0  
                                     u3561 21F8                                       u3810 128C  
                                     u3730 1048                                       u5410 221A  
                                     u3731 1044                                       u5411 2216  
                                     u3547 21B4                                       u3900 1400  
                                     u3820 12E6                                       u3740 105A  
                                     u5420 2238                                       u5500 2126  
                                     u3660 28AC                                       u3901 13FC  
                                     u3821 12E2                                       u3741 1056  
                                     u5421 2234                                       u5501 2122  
                                     u3557 21E2                                       u3661 28A8  
                                     u3910 143A                                       u3830 1306  
                                     u3750 106A                                       u2950 19A2  
                                     u2934 1AFA                                       u5430 2254  
                                     u5510 1836                                       u3670 28DA  
                                     u3911 1436                                       u3831 1302  
                                     u3815 1282                                       u3751 1066  
                                     u2951 199E                                       u2935 1AF6  
                                     u5431 2250                                       u5511 1832  
                                     u3671 28D6                                       u3680 2816  
                                     u3840 1318                                       u3760 10AA  
                                     u2960 19C2                                       u2944 1B50  
                                     u5440 249E                                       u5520 1878  
                                     u5600 1F1C                                       u3681 2812  
                                     u3841 1314                                       u3761 10A6  
                                     u2961 19BE                                       u2945 1B4C  
                                     u5441 249A                                       u5521 1874  
                                     u5601 1F18                                       u3850 1346  
                                     u3770 10BC                                       u5450 24BC  
                                     u5530 18F8                                       u5610 1F3E  
                                     u3851 1342                                       u3771 10B8  
                                     u5451 24B8                                       u5531 18F4  
                                     u5611 1F3A                                       u3860 135C  
                                     u3780 10CC                                       u5620 1BC8  
                                     u5460 24D2                                       u5540 1908  
                                     u3861 1358                                       u3781 10C8  
                                     u5621 1BC4                                       u5461 24CE  
                                     u5541 1904                                       u3870 1370  
                                     u3790 1102                                       u5630 1BFC  
                                     u2990 1A86                                       u2974 19E8  
                                     u5470 20BE                                       u5550 193E  
                                     u3871 136C                                       u3791 10FE  
                                     u2991 1A80                                       u2975 19E4  
                                     u5471 20BA                                       u5551 193A  
                                     u3880 138A                                       u5640 1C2A  
                                     u2984 1A3E                                       u5480 20CE  
                                     u5560 2756                                       u3881 1386  
                                     u5641 1C26                                       u2985 1A3A  
                                     u5481 20CA                                       u5561 2752  
                                     u3890 13D2                                       u5650 1C3E  
                                     u5490 20F4                                       u3891 13CE  
                                     u5651 1C3A                                       u5635 1BF2  
                                     u5491 20F0                                       u5571 1EA0  
                                     u5660 1C66                                       u2996 1A88  
                                     u5580 1EBC                                       u5740 14EC  
                                     u5661 1C62                                       u5581 1EB8  
                                     u5741 14E8                                       u5670 1C86  
                                     u3990 1670                                       u5590 1F0C  
                                     u5750 150E                                       u5671 1C82  
                                     u3991 166C                                       u5807 1DFE  
                                     u5591 1F08                                       u5751 150A  
                                     u5680 1C96                                       u5760 1532  
                                     u5681 1C92                                       u5817 1E18  
                                     u5761 152E                                       u5770 1618  
                                     u5827 1E36                                       u5771 1614  
                                     u5780 1642                                       u5837 2786  
                                     u5781 163E                                       u5797 1484  
                                     _TMR2 0FCC              ??_lcd_4bit_send_enable_signal 0012  
                 _RB4_InterruptHandlerHigh 009B                                       _led1 0055  
                                     _led2 0054                                       _led3 0053  
                                     _led4 0052                                       _dbuf 0100  
                                     _main 1458                                       _prec 007D  
                 _RB7_InterruptHandlerHigh 008F                                       fsr0h 0FEA  
                                     fsr1h 0FE2                                       indf0 0FEF  
                                     fsr2h 0FDA                                       fsr0l 0FE9  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     btemp 0056  gpio_pin_direction_initializion@pin_config 0009  
                                     prodh 0FF4                                       prodl 0FF3  
                                     start 016E                           __end_of_ADC_init 20AE  
               gpio_pin_initialization@ret 0013                       _lcd_4bit_set_cusrsor 2428  
                             ___param_bank 0000                      _lcd_4bit_send_command 24F0  
                     _gpio_pin_write_logic 1AA0                           __end_of_INT0_ISR 2988  
                            ___fltol@sign1 00E5                                      ?_main 0001  
                 ??_application_initialize 001C                                      _EEADR 0FA9  
                 motor_move_backward@motor 0011                            __end_of___flmul 1458  
                          __end_of___fltol 1CB8                                      _EEPGD 7D37  
                          __end_of___lwdiv 2274                            __end_of___lwmod 24F0  
                                    i2l505 2924                                      i2l443 2000  
                                    i2l813 2986                                      i2l910 00FA  
                                    i2l902 003A                                      i2l903 007C  
                                    i2l912 011A                                      i2l904 00BA  
                                    i2l914 013A                                      i2l908 00DA  
                                    i2l917 015A                                      i2l868 2958  
                                    i2l999 22E4                        relay_turn_off@F3314 0040  
                             vfpfcnvrt@fmt 0012                                      _TMR0H 0FD7  
                                    _TMR1H 0FCF                                      _TMR0L 0FD6  
                                    _TMR1L 0FCE                                      _TMR3H 0FB3  
                                    _TMR3L 0FB2                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
              select_voltage_reference@adc 0009                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                 ?_convert_short_to_string 0030                           __end_of_TMR0_ISR 2984  
                         __end_of_TMR1_ISR 2980                           __end_of_TMR2_ISR 297C  
                                    _adc_1 00CB                           __end_of_TMR3_ISR 2978  
                                    _lcd_1 00DB                                      _flags 003C  
                                    _fputc 20AE                                      _width 007B  
                                    _putch 2988                                      pclath 0FFA  
                                    pclatu 0FFB                                      tablat 0FF5  
            __end_of_keypad_initialization 25B0                                      ttemp5 0057  
                                    ttemp6 005A                                      ttemp7 005E  
                                    status 0FD8                                      wtemp8 0057  
                          __end_of_sprintf 2806                            ??_lcd_send_4bit 0013  
                    ?_lcd_4bit_set_cusrsor 0017                            __initialization 22E6  
                             __end_of_main 165E            ??_lcd_4bit_send_char_string_pos 0020  
                    ?_gpio_pin_write_logic 0009                                  ??_ADC_ISR 0005  
                                   ??_main 00E9                              __activetblptr 0003  
                         led_turn_on@F3315 0045                                  ??_RB4_ISR 0001  
                                   ?_fputc 0009                                     _ADRESH 0FC4  
                                   _EEADRH 0FAA                                     _ADRESL 0FC3  
                                   _EEDATA 0FA8                                     _EECON2 0FA7  
                  led_initialization@F3310 0046                                     ?_putch 0001  
                                   i2l1144 297E                                     i2l1075 2982  
                                   i2l1185 297A                                     i2l1258 2976  
                                   i2l5000 297C                                     i2l5012 2974  
                                   i2l5006 2978                                     i2l2688 2984  
                                   i2l4660 1F74                                     i2l4820 2274  
                                   i2l4662 1F8E                                     i2l4670 1FFE  
                                   i2l4654 1F50                                     i2l4830 22B8  
                                   i2l4822 2284                                     i2l4664 1FB4  
                                   i2l4656 1F60                                     i2l4832 22C0  
                                   i2l4824 2292                                     i2l4666 1FCE  
                                   i2l4658 1F70                                     i2l4834 22D2  
                                   i2l4826 229A                                     i2l4836 22E0  
                                   i2l4828 22AA                                     i2l5910 001A  
                                   i2l5920 0064                                     i2l5912 0028  
                                   i2l5930 00B4                                     i2l5922 0072  
                                   i2l5914 0036                                     i2l4964 28F8  
                                   i2l4980 2942                                     i2l5940 0108  
                                   i2l5932 00C8                                     i2l5924 008A  
                                   i2l5916 0048                                     i2l4966 28FA  
                                   i2l4982 2944                                     i2l5950 0156  
                                   i2l5942 0116                                     i2l5934 00D6  
                                   i2l5926 0098                                     i2l5918 0056  
                                   i2l4968 290C                                     i2l5944 0128  
                                   i2l5936 00E8                                     i2l5928 00A6  
                                   i2l4994 2980                                     i2l5946 0136  
                                   i2l5938 00F6                                     i2l4988 2958  
                                   i2l5948 0148                           __end_of___xxtofl 1812  
                            _tris_register 00C1                    _RB6_InterruptHandlerLow 0095  
                   ?_lcd_4bit_send_command 0014                               vfprintf@cfmt 001E  
                            _adc_res_1_txt 00A7                              _adc_res_2_txt 00A1  
                                ??___flmul 001F                              _adc_res_3_txt 006B  
                                ??___fltol 00E1                                  ??___lwdiv 000D  
                                ??___lwmod 000D                                     _keypad 00D3  
                                   clear_0 232C                                     clear_1 2338  
                                   clear_2 2344                                     _motor1 0050  
                                   _motor2 004E                                     isa$std 0001  
                         lcd_send_4bit@lcd 0011                           lcd_send_4bit@ret 0013  
                 _select_voltage_reference 260E                    select_result_format@adc 0009  
                                   fputc@c 0009                               __pdataCOMRAM 004D  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                                ?_ADC_init 000C                                     putch@c 0001  
                         __end_of_vfprintf 2760                                  ??_sprintf 0023  
             __end_of_select_result_format 2720                    _Timer0_InterruptHandler 008B  
                             ___xxtofl@arg 0013                               ___xxtofl@exp 0012  
                             ___xxtofl@val 0009                                 __accesstop 0060  
                  __end_of__initialization 234A                                  ?_INT0_ISR 0001  
                            ___rparam_used 0001                     ??_lcd_4bit_set_cusrsor 001A  
                               ___fltol@f1 0030                    _lcd_4bit_send_char_data 266C  
                   ??_gpio_pin_write_logic 000B                             __pcstackCOMRAM 0001  
                             __pidataBANK0 279E                              RB4_ISR@source 0001  
                                ?_TMR0_ISR 0001                                  ?_TMR1_ISR 0001  
                                ?_TMR2_ISR 0001                                  ?_TMR3_ISR 0001  
                            __end_of_fputc 2158               convert_short_to_string@F3463 0071  
                            __end_of_putch 298A                   lcd_4bit_send_command@lcd 0014  
                 lcd_4bit_send_command@ret 0016                              _ADC_Interrupt 2274  
    __end_of_lcd_4bit_send_char_string_pos 2200              _lcd_4bit_send_char_string_pos 2158  
  __end_of_gpio_pin_direction_initializion 1AA0          ??_gpio_pin_direction_initializion 000A  
         ?_gpio_pin_direction_initializion 0009            _gpio_pin_direction_initializion 198E  
                  _ADC_GetConversionResult 1F50                       ADC_SelectChannel@adc 000C  
                       _motor_move_forward 289C                      led_initialization@led 0014  
                               ??_ADC_init 000D               convert_short_to_string@value 0030  
                                  ??_fputc 000C                                    ??_putch 0009  
                   ADC_StartConversion@adc 0009                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                        ?_motor_move_forward 0011  
                    _INT0_InterruptHandler 0038                                 ??_INT0_ISR 0001  
                   _application_initialize 295A                 ADC_GetConversionResult@adc 0001  
                               ??_TMR0_ISR 0001                                 ??_TMR1_ISR 0001  
                               ??_TMR2_ISR 0001                                 ??_TMR3_ISR 0001  
                        led_turn_off@F3320 0044                       ??_motor_move_forward 0012  
                                  _ADC_ISR 28F8                            led_toggle@F3325 0043  
                           ?_ADC_Interrupt 0001                convert_short_to_string@temp 00E1  
                                  _RB4_ISR 2940                                  ?___xxtofl 0009  
                 _RB6_InterruptHandlerHigh 0093                  ??_lcd_4bit_send_char_data 0016  
                led_initialization@pin_obj 0016                                    __Hparam 0000  
                                  __Lparam 0000                                    ___flmul 102E  
                                  ___fltol 1BB0                                    ___lwdiv 2200  
                                  ___lwmod 248C                                  ?_vfprintf 001B  
                             __psmallconst 1000                    _Timer1_InterruptHandler 0087  
                ??_ADC_GetConversionResult 0003                                    __pcinit 22E6  
                                _ANSELbits 0F7E                       _select_result_format 26C8  
                                  __ramtop 1000                                    __ptext0 1458  
                                  __ptext1 289C                                    __ptext2 28CA  
                                  __ptext3 2158                                    __ptext4 2428  
                                  __ptext5 266C                                    __ptext6 1E9A  
                                  __ptext7 27D2                                    __ptext8 2720  
                                  __ptext9 1812                                  _T0CONbits 0FD5  
                                _T1CONbits 0FCD                                  _T2CONbits 0FCA  
                               ??___xxtofl 000D                                  _T3CONbits 0FB1  
           ?_lcd_4bit_send_char_string_pos 001B                                    _sprintf 27D2  
                     end_of_initialization 234A                       __end_of_keypad_value 1011  
                                  fputc@fp 000B                    ??_lcd_4bit_send_command 0016  
        gpio_pin_initialization@pin_config 0011                      _keypad_initialization 2550  
                        __end_of_vfpfcnvrt 198E                 ??_select_voltage_reference 000A  
                    __end_of_lcd_send_4bit 23C2                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                         vfpfcnvrt@convarg 0015                            ??_ADC_Interrupt 0005  
              keypad_initialization@keypad 0014                                 ??_vfprintf 001E  
         ADC_StartConversion_Interrupt@adc 000F                      ?_select_result_format 0009  
         ADC_StartConversion_Interrupt@ret 0011                        _lcd_4bit_initialize 1DAA  
          __end_of_lcd_4bit_send_char_data 26C8                      _INT1_InterruptHandler 0036  
                                _PORTBbits 0F81                    _gpio_pin_initialization 25B0  
         lcd_4bit_send_char_string_pos@col 001D           lcd_4bit_send_char_string_pos@lcd 001B  
         lcd_4bit_send_char_string_pos@ret 0020           lcd_4bit_send_char_string_pos@row 001C  
         lcd_4bit_send_char_string_pos@str 001E                           _InterruptManager 0008  
               lcd_4bit_send_char_data@lcd 0014                 lcd_4bit_send_char_data@ret 0016  
                            ___xxtofl@sign 0011                        _ADC_StartConversion 2926  
                     ?_lcd_4bit_initialize 0017                                ___flmul@grs 0024  
                  _RB4_InterruptHandlerLow 009D                    _RB7_InterruptHandlerLow 0091  
                       relay_turn_on@F3309 0041                       ?_ADC_StartConversion 0009  
                              vfpfcnvrt@ap 0013                                vfpfcnvrt@cp 0019  
                              vfpfcnvrt@fp 0011                              __pidataCOMRAM 296A  
  adc_input_channel_port_configure@channel 000B                        _motor_move_backward 28CA  
                      start_initialization 22E6               ?_lcd_4bit_send_enable_signal 0011  
                  motor_move_forward@motor 0011                               _lat_register 00B7  
                  ?_application_initialize 0001   ADC_GetConversionResult@conversion_result 0002  
                    ??_lcd_4bit_initialize 0018                    _Timer2_InterruptHandler 0083  
                  _convert_short_to_string 1E9A                     ?_keypad_initialization 0014  
                     ?_motor_move_backward 0011       ADC_StartConversion_Interrupt@channel 0010  
               convert_int_to_string@F3470 0060                      ??_ADC_StartConversion 000A  
              convert_byte_to_string@F3456 0077                                vfprintf@fmt 001C  
                   ??_select_result_format 000A                  ??_gpio_pin_initialization 0012  
                              __pdataBANK0 00AD                                   ?_ADC_ISR 0001  
             __end_of_ecu_layer_initialize 286C               lcd_4bit_send_command@command 0015  
                                 ?_RB4_ISR 0001                                  ___flmul@a 001B  
                                ___flmul@b 0017                                __pbssCOMRAM 0034  
                            __pcstackBANK0 00E1             __end_of_application_initialize 296A  
                                _adc_res_1 004B                                  _adc_res_2 0049  
                                _adc_res_3 008D                    lcd_4bit_set_cusrsor@col 0019  
                  lcd_4bit_set_cusrsor@lcd 0017                    lcd_4bit_set_cusrsor@ret 001A  
                  lcd_4bit_set_cusrsor@row 0018                      _INT2_InterruptHandler 009F  
               __end_of_led_initialization 2428             gpio_pin_write_logic@pin_config 0009  
                    ??_motor_move_backward 0012                           ___lwdiv@dividend 0009  
         __end_of_select_voltage_reference 266C                                  __pintcode 0008  
 __end_of_adc_input_channel_port_configure 1DAA         ??_adc_input_channel_port_configure 0009  
        ?_adc_input_channel_port_configure 0001           _adc_input_channel_port_configure 1CB8  
                        _ADC_SelectChannel 286C                                   ?___flmul 0017  
                                 ?___fltol 0030                                   ?___lwdiv 0009  
                                 ?___lwmod 0009                 convert_short_to_string@ret 00E7  
                       ?_ADC_SelectChannel 000C                 convert_short_to_string@str 0032  
                gpio_pin_write_logic@logic 000A                               _keypad_value 1001  
                              __smallconst 1000                        ??_ADC_SelectChannel 000E  
                                 _ADC_flag 003E                                   _ADC_init 2002  
        keypad_initialization@rows_counter 0015                           ___lwdiv@quotient 000E  
                                 ?_sprintf 001F            __end_of_gpio_pin_initialization 260E  
                ??_convert_short_to_string 0033                   _RB5_InterruptHandlerHigh 0097  
                                 _INT0_ISR 2984                                   _IOCBbits 0F7D  
                 __end_of_InterruptManager 016E                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                  __end_of_ADC_SelectChannel 289C  
            __end_of_lcd_4bit_send_command 2550                                   i2u500_40 0116  
                                 i2u500_41 0112                                   i2u333_40 1F60  
                                 i2u501_40 0128                                   i2u333_41 1F5C  
                                 i2u501_41 0124                                   i2u334_40 1F70  
                                 i2u350_40 22D2                                   i2u502_40 0136  
                                 i2u334_41 1F6C                                   i2u350_41 22CE  
                                 i2u502_41 0132                                   i2u335_40 1F8E  
                                 i2u503_40 0148                                   i2u335_41 1F8A  
                                 i2u503_41 0144                                   i2u336_40 1FCE  
                                 i2u504_40 0156                                   i2u336_41 1FCA  
                                 i2u504_41 0152                                   _PIR1bits 0F9E  
                                 i2u337_45 1FE4                                   i2u370_48 2912  
                                 i2u370_49 2924                                   _PIR2bits 0FA1  
                                 i2u348_40 2284                                   i2u372_40 2954  
                                 i2u348_41 2280                                   i2u372_41 2950  
                                 i2u349_40 22AA                                   i2u349_41 22A6  
                                 i2u369_40 290C                                   i2u369_41 2908  
                                 i2u490_40 0072                                   i2u490_41 006E  
                                 i2u491_40 008A                                   i2u491_41 0086  
                                 i2u492_40 0098                                   i2u492_41 0094  
                                 i2u493_40 00A6                                   i2u485_40 0028  
                                 i2u493_41 00A2                                   i2u485_41 0024  
                                 i2u494_40 00B4                                   i2u486_40 0036  
                                 i2u494_41 00B0                                   i2u486_41 0032  
                                 i2u495_40 00C8                                   i2u487_40 0048  
                                 i2u495_41 00C4                                   i2u487_41 0044  
                                 i2u496_40 00D6                                   i2u488_40 0056  
                                 i2u496_41 00D2                                   i2u488_41 0052  
                                 i2u497_40 00E8                                   i2u489_40 0064  
                                 i2u497_41 00E4                                   i2u489_41 0060  
                                 i2u498_40 00F6                                   i2u498_41 00F2  
                                 i2u499_40 0108                                   i2u499_41 0104  
          ??_ADC_StartConversion_Interrupt 0011                                   _TMR0_ISR 2980  
                                 _TMR1_ISR 297C                                   _TMR2_ISR 2978  
                                 _TMR3_ISR 2974                    _Timer3_InterruptHandler 0081  
                      _lm35_res_celsuis_mv 0034                                  _vfpfcnvrt 1812  
       gpio_pin_direction_initializion@ret 000F                                 _ADCON0bits 0FC2  
                               _ADCON1bits 0FC1                                 _ADCON2bits 0FC0  
                 ADC_SelectChannel@channel 000D                           _program_selected 003F  
                              ADC_init@adc 000C                                ADC_init@ret 000E  
                               vfpfcnvrt@c 001A                    gpio_pin_write_logic@ret 0010  
     keypad_initialization@columns_counter 0016                                _INTCON2bits 0FF1  
                              _INTCON3bits 0FF0                   ?_lcd_4bit_send_char_data 0014  
                                copy_data0 22FA                                  copy_data1 231A  
                relay_initialization@F3304 0042                       _ecu_layer_initialize 283A  
                               _EECON1bits 0FA6                                   __Hrparam 0000  
                               vfprintf@ap 001D                                   __Lrparam 0000  
                               vfprintf@fp 001B                   ?_ADC_GetConversionResult 0001  
          __end_of_convert_short_to_string 1F50                      _ADC_Interrupt_Handler 003A  
                    __end_of_ADC_Interrupt 22E6                                   _lm35_res 0047  
                               ?_vfpfcnvrt 0011                         _timer0_preload_val 0089  
                               _ANSELHbits 0F7F                                 sprintf@fmt 0020  
                                 ___xxtofl 165E                            ___lwdiv@divisor 000B  
                ?_select_voltage_reference 0009                            ___lwdiv@counter 000D  
                                 __ptext10 20AE                                   __ptext11 2988  
                                 __ptext20 2760                                   __ptext12 248C  
                                 __ptext21 2550                                   __ptext13 2200  
                                 __ptext30 102E                                   __ptext22 25B0  
                                 __ptext14 295A                                   __ptext31 2806  
                                 __ptext23 1AA0                                   __ptext15 283A  
                                 __ptext40 2940                                   __ptext32 2926  
                                 __ptext24 198E                                   __ptext16 23C2  
                                 __ptext41 2984                                   __ptext33 286C  
                                 __ptext25 2002                                   __ptext17 1DAA  
                                 __ptext42 28F8                                   __ptext34 1CB8  
                                 __ptext26 260E                                   __ptext18 24F0  
                                 __ptext43 2274                                   __ptext27 26C8  
                                 __ptext19 2354                                   __ptext44 1F50  
                                 __ptext36 2974                                   __ptext28 165E  
                                 __ptext37 2978                                   __ptext29 1BB0  
                                 __ptext38 297C                                   __ptext39 2980  
                  ??_keypad_initialization 0015                      ?_ecu_layer_initialize 0001  
                  _RB5_InterruptHandlerLow 0099                                   isa$xinst 0000  
             lcd_4bit_initialize@l_counter 001B                                   int$flags 0056  
                                 _vfprintf 2720                         _timer1_preload_val 0085  
    __end_of_ADC_StartConversion_Interrupt 283A              _ADC_StartConversion_Interrupt 2806  
                               _INTCONbits 0FF2               __end_of_lcd_4bit_set_cusrsor 248C  
              __end_of_lcd_4bit_initialize 1E9A               __end_of_gpio_pin_write_logic 1BB0  
                                 intlevel2 0000                                  sprintf@ap 0023  
              __end_of_ADC_StartConversion 2940             lcd_4bit_send_enable_signal@lcd 0011  
                         ___lwmod@dividend 0009             lcd_4bit_send_enable_signal@ret 0012  
          __end_of_ADC_GetConversionResult 2002                              _lcd_send_4bit 2354  
                              ??_vfpfcnvrt 0014                         _led_initialization 23C2  
                    lcd_send_4bit@_command 0012                         _timer2_preload_val 003D  
                                 sprintf@f 0024                                   sprintf@s 001F  
                          ___lwmod@divisor 000B                            ___lwmod@counter 000D  
                      ?_led_initialization 0014                __end_of_motor_move_backward 28F8  
                   ??_ecu_layer_initialize 001C                              _port_register 00AD  
              lcd_4bit_send_char_data@data 0015                          ?_InterruptManager 0001  
                     ??_led_initialization 0015                     lcd_4bit_initialize@lcd 0017  
                   lcd_4bit_initialize@ret 001A                   ?_gpio_pin_initialization 0011  
         convert_short_to_string@l_counter 00E8  
